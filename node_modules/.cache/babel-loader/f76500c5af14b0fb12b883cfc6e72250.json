{"ast":null,"code":"var _jsxFileName = \"/home/hp/Desktop/Bluefi/bleufi-frontend/src/pages/Asset/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport BreadCrumb from \"components/BreadCrumb\";\nimport AssetItem from \"components/AssetItem\";\nimport AssetAuthor from \"components/AssetAuthor\";\nimport ApexCharts from \"react-apexcharts\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport Market_INFO from \"artifacts/contracts/Marketplace.sol/FlokinomicsNFTMarketplace.json\";\nimport NFT_INFO from \"artifacts/contracts/FlokinomicsNFT.sol/FlokinomicsNFT.json\";\nimport { NFT_ADDRESS, CONTRACT_ADDRESS, PAYMENT_TOKEN, NFT_MARKET_ADDRESS, NFT_CONTRACT_ADDRESS } from \"../../constants\";\nimport { parseUnits } from \"@ethersproject/units\";\nimport Axios from \"axios\";\nimport Tabs from \"./Tabs\";\nimport Switch from \"react-switch\";\nimport \"styles/activity.css\";\nimport { useParams } from \"react-router-dom\";\nimport { firestore } from \"../../firebase\";\nimport { toast } from \"react-toastify\";\nimport Countdown from \"react-countdown\";\nimport moment from \"moment\";\nimport axios from \"axios\";\nimport bluefiabi from \"../../services/smart-contract/BLEUFINFT\";\nimport Web3 from \"web3\"; // import { BigNumber } from \"ethers\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst breadcrumb = [{\n  title: \"Home\",\n  page: \"/\"\n}, {\n  title: \"Item\",\n  page: \"/item\"\n}];\n\nfunction Item() {\n  _s();\n\n  const web3 = new Web3(Web3.givenProvider || window.etherum);\n  const newContract = \"0xA20B92E0a08B6c32E81958A4955F138589C2084a\";\n  const abiFile = bluefiabi.abi;\n  const contractInstance = new web3.eth.Contract(abiFile, newContract);\n  const {\n    library,\n    active,\n    account\n  } = useWeb3React();\n  const {\n    id\n  } = useParams();\n  const [price, setPrice] = useState(0);\n  const [user, setUser] = useState({\n    account: account,\n    avatar: \"assets/img/avatars/avatar.jpg\",\n    ownerAvatar: \"assets/img/avatars/avatar.jpg\",\n    imageCover: \"/assets/img/bg/bg.png\",\n    firstName: \"User\",\n    lastName: \"\",\n    nickName: \"@user\",\n    bio: \"\",\n    twitter: \"\",\n    telegram: \"\",\n    instagram: \"\",\n    subscribe: \"\",\n    followers: []\n  });\n  const [currentPrice, setCurrentPrice] = useState(0);\n  const [auctionLength, setAuctionLength] = useState(\"12\");\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [item, setItem] = useState({\n    name: \"\",\n    description: \"\",\n    owner: account || null,\n    time: 0,\n    saleType: \"fix\",\n    likes: [],\n    price: 0,\n    paymentType: \"BNB\"\n  });\n  const [isSale, setIsSale] = useState(false);\n  const [isBid, setIsBid] = useState(false);\n  const [isAccept, setIsAccept] = useState(false);\n  const [auctionInfo, setAuctionInfo] = useState(null);\n  const [historyData, setHistoryData] = useState([]);\n  const [bidsData, setBidsData] = useState([]);\n  const [rate, setRate] = useState(10);\n  const [showUpdate, setShowUpdate] = useState(false);\n  const [newPrice, setNewPrice] = useState(item.price);\n  const [saleType, setSaleType] = useState(item.saleType);\n  const [chartOption] = useState({\n    chart: {\n      width: 380,\n      type: \"pie\"\n    },\n    labels: [\"Creator's Royalty\", \"Platform fee\", \"Seller\"],\n    theme: {\n      monochrome: {\n        enabled: true,\n        color: \"#0000ff\"\n      }\n    },\n    responsive: [{\n      breakpoint: 480,\n      options: {\n        chart: {\n          id: \"pie-chart\",\n          width: 200\n        },\n        legend: {\n          position: \"bottom\"\n        }\n      }\n    }]\n  });\n  const dispatch = useDispatch();\n\n  const dispatchNftItem = payload => {\n    dispatch({\n      type: \"SET_SELECTED\",\n      payload\n    });\n    setItem(payload);\n    setNewPrice(payload.price);\n    setSaleType(payload.saleType);\n  };\n\n  const getHistory = async item_id => {\n    const res = await firestore.collection(\"history\").where(\"nftId\", \"==\", item_id).get();\n    let nft_history = [];\n\n    for (let i = 0; i < res.docs.length; i++) {\n      const x = res.docs[i];\n      const temp = x.data();\n      const user_info = (await firestore.collection(\"users\").doc(temp.userId).get()).data();\n      const kcsPrice = temp.price;\n      const timespace = parseInt((moment().valueOf() - temp.time) / 60000);\n      const timeAgo = timespace < 1 ? \"less than a minute\" : timespace < 60 ? `${timespace} min ago` : timespace < 24 * 60 ? `${parseInt(timespace / 60)} hrs ago` : moment(temp.time).format(\"YYYY/MM/DD\");\n      nft_history.push({\n        avatar: (user_info === null || user_info === void 0 ? void 0 : user_info.avatar) || \"/assets/img/avatars/avatar.jpg\",\n        kcsPrice,\n        timeAgo,\n        nickName: user_info === null || user_info === void 0 ? void 0 : user_info.nickName,\n        verified: true,\n        time: temp.time,\n        actionType: temp.actionType\n      });\n    }\n\n    const history_data = nft_history.sort((a, b) => b.time - a.time);\n    setHistoryData(history_data);\n    setBidsData(history_data.filter(e => e.actionType > 1));\n  };\n\n  const getItem = async item_id => {\n    const res = await firestore.collection(\"nfts\").doc(item_id).get();\n    let nft_item = res.data();\n    let nftInfo = {\n      data: {}\n    };\n\n    try {\n      nftInfo = await Axios.get(nft_item.tokenURI);\n    } catch (err) {\n      console.log(err);\n    }\n\n    dispatchNftItem({\n      id,\n      ...user,\n      ...nft_item,\n      ...nftInfo.data\n    });\n\n    if (active) {\n      const contract = new Contract(NFT_MARKET_ADDRESS, Market_INFO.abi, library.getSigner()); // const cur_price = await contract.listedMap(nft_item.tokenId);\n      // console.log(cur_price);\n      // const prov = ethers.getDefaultProvider();\n      // const pp = await contract.balanceOf((await prov.getSigners())[0].address);\n      // const bal = await prov.getBalance(account);\n\n      if ((nft_item === null || nft_item === void 0 ? void 0 : nft_item.tokenId) !== 0) {\n        const auction_info = await contract.auctions(nft_item.tokenId);\n        setAuctionInfo(auction_info);\n      }\n    }\n\n    setIsSale(nft_item === null || nft_item === void 0 ? void 0 : nft_item.isSale);\n  };\n\n  const updateSale = async function () {\n    let lock = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    setIsProcessing(true);\n\n    try {\n      const userExist = (await firestore.collection(\"users\").doc(account).get()).exists;\n\n      if (!userExist) {\n        // await creatProfile(account);\n        toast.error(\"Please create your profile first.\");\n        setIsProcessing(false);\n        return;\n      }\n\n      const contract = new Contract(NFT_MARKET_ADDRESS, Market_INFO.abi, library.getSigner());\n      const nftContract = new Contract(NFT_ADDRESS, NFT_INFO.abi, library.getSigner());\n\n      if (item.isSale) {\n        if (item.tokenId !== 0) {\n          const res = await contract.closeTrade(item.tokenId);\n          await res.wait();\n        }\n\n        await firestore.collection(\"nfts\").doc(id).update({\n          isSale: false,\n          time: 0,\n          saleType: \"fix\"\n        });\n        setItem({ ...item,\n          isSale: false,\n          time: 0,\n          saleType: \"fix\"\n        });\n        toast.success(\"Delisted from marketplace successfully\");\n        setShowUpdate(false);\n        setIsProcessing(false);\n      } else {\n        if (newPrice <= 0) {\n          toast.error(\"Price should not be zero.\");\n          setIsProcessing(false);\n          return;\n        }\n\n        if (saleType === \"auction\") {\n          await startAuction();\n        } else {\n          if (item.tokenId !== 0) {\n            const isApproved = await nftContract.isApprovedForAll(account, NFT_MARKET_ADDRESS);\n\n            if (!isApproved) {\n              const approve = await nftContract.setApprovalForAll(NFT_MARKET_ADDRESS, true);\n              await approve.wait();\n            }\n\n            const res = await contract.openTrade(item.tokenId, parseUnits(newPrice.toString()), item.paymentType);\n            await res.wait();\n          }\n\n          let accounts = await web3.eth.getAccounts();\n          const hash = await contractInstance.methods.getMessageHash(1, 0, tokenURI).call();\n          const encodedhash = await contractInstance.methods.getEthSignedMessageHash(hash).call();\n          const signature = await web3.eth.sign(encodedhash, accounts[0]);\n          console.log(signature);\n          await firestore.collection(\"nfts\").doc(id).update({\n            price: parseFloat(newPrice),\n            saleType: \"fix\",\n            isSale: true,\n            signature: signature,\n            time: 0\n          });\n          setItem({ ...item,\n            price: parseFloat(newPrice),\n            saleType: \"fix\",\n            signature: signature,\n            isSale: true,\n            time: 0\n          });\n          toast.success(\"Listed on marketplace successfully\");\n          setShowUpdate(false);\n          setIsProcessing(false);\n        }\n      }\n    } catch (err) {\n      setIsSale(prev => !prev);\n      setShowUpdate(false);\n      toast.error(\"Fail to update: \" + err);\n      setIsProcessing(false);\n    }\n  };\n\n  const showUpdates = () => {\n    if (isSale && !showUpdate) updateSale(true);\n    setShowUpdate(!isSale);\n    setIsSale(prev => !prev);\n  }; // const creatProfile = async (user_account) => {\n  //   const author = {\n  //     avatar: \"/assets/img/avatars/avatar.jpg\",\n  //     imageCover: \"/assets/img/bg/bg.png\",\n  //     ownerAvatar: \"/assets/img/avatars/avatar.jpg\",\n  //     firstName: \"User\",\n  //     lastName: \"\",\n  //     nickName: \"@user\",\n  //     account: user_account,\n  //     bio: \"\",\n  //     twitter: \"\",\n  //     telegram: \"\",\n  //     instagram: \"\",\n  //     subscribe: \"\",\n  //     followers: [],\n  //   };\n  //   await firestore.collection(\"users\").doc(user_account).set(author);\n  // };\n\n\n  const dispatchUser = async user_id => {\n    if (user_id) {\n      const userInfo = (await firestore.collection(\"users\").doc(user_id).get()).data();\n      dispatch({\n        type: \"SET_PROFILE\",\n        userInfo\n      });\n      setUser(userInfo);\n    }\n  };\n\n  useEffect(() => {\n    dispatchUser(account); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [account]);\n  console.log(parseUnits(item.price.toString()));\n\n  const buyNft = async () => {\n    if (active) {\n      setIsProcessing(true);\n\n      try {\n        const userExist = (await firestore.collection(\"users\").doc(account).get()).exists;\n\n        if (!userExist) {\n          // await creatProfile(account);\n          toast.error(\"Please create your profile first.\");\n          setIsProcessing(false);\n          return;\n        }\n\n        const contract = new Contract(CONTRACT_ADDRESS, Market_INFO.abi, library.getSigner());\n        const nftContract = new Contract(NFT_CONTRACT_ADDRESS, NFT_INFO.abi, library.getSigner());\n        const {\n          tokenId,\n          tokenURI,\n          price,\n          id,\n          royalties,\n          paymentType,\n          creator\n        } = item;\n        const isApproved = await nftContract.isApprovedForAll(account, NFT_MARKET_ADDRESS);\n\n        if (!isApproved) {\n          const approve = await nftContract.setApprovalForAll(NFT_MARKET_ADDRESS, true);\n          await approve.wait();\n        } // const approve = await nftContract.approve(\n        //   CONTRACT_ADDRESS,\n        //   parseUnits(price.toString())\n        // );\n        // await approve.wait();\n        // const tokenContract = new Contract(\n        //   PAYMENT_TOKEN[paymentType].tokenAddress,\n        //   PAYMENT_TOKEN[paymentType].abi,\n        //   library.getSigner()\n        // );\n        // const approve = await tokenContract.approve(\n        //   NFT_MARKET_ADDRESS,\n        //   parseUnits(price.toString())\n        // );\n        // await approve.wait();\n        //console.log(isApproved);\n        // if (!isApproved) {\n        //   const approve = await nftContract.setApprovalForAll(\n        //     NFT_MARKET_ADDRESS,\n        //     true\n        //   );\n        //   await approve.wait();\n        // }\n\n\n        let res; // contract.setTokenAddress(\n        //   paymentType,\n        //   PAYMENT_TOKEN[paymentType].tokenAddress,\n        //   NFT_ADDRESS\n        // );\n\n        if (tokenId === 0) {\n          if (paymentType === \"BNB\") {\n            console.log(JSON.stringify({\n              tokenId,\n              creator,\n              price: parseUnits(price.toString()),\n              paymentType,\n              royalties,\n              tokenURI,\n              from: account,\n              value: parseUnits(price.toString())\n            }), null, 2);\n            res = await contract.buyNew(tokenId, creator, parseUnits(price.toString()), paymentType, royalties, tokenURI, {\n              from: account,\n              value: parseUnits(price.toString())\n            }); // res = await contract.buy(\n            //   tokenId,\n            //   parseUnits(price.toString()),\n            //   paymentType,\n            //   { from: account, value: parseUnits(price.toString()) }\n            // );\n          } else {\n            const tokenContract = new Contract(PAYMENT_TOKEN[paymentType].tokenAddress, PAYMENT_TOKEN[paymentType].abi, library.getSigner());\n            const approve = await tokenContract.approve(NFT_CONTRACT_ADDRESS, parseUnits(price.toString()));\n            await approve.wait();\n            res = await contract.buyNew(tokenId, creator, parseUnits(price.toString()), paymentType, royalties, tokenURI, {\n              from: account,\n              value: parseUnits(price.toString())\n            });\n          }\n        } else {\n          if (paymentType === \"BNB\") {\n            res = await contract.buy(tokenId, parseUnits(price.toString()), paymentType, {\n              from: account,\n              value: parseUnits(price.toString())\n            });\n          } else {\n            const tokenContract = new Contract(PAYMENT_TOKEN[paymentType].tokenAddress, PAYMENT_TOKEN[paymentType].abi, library.getSigner());\n            const approve = await tokenContract.approve(NFT_MARKET_ADDRESS, parseUnits(price.toString()));\n            await approve.wait();\n            res = await contract.buy(tokenId, parseUnits(price.toString()), paymentType, {\n              from: account,\n              value: parseUnits(price.toString())\n            });\n          }\n        }\n\n        res.wait().then(async result => {\n          console.log(result);\n          let nftId = 0;\n          const events = result === null || result === void 0 ? void 0 : result.events;\n\n          if (events.length > 0) {\n            nftId = events[events.length - 1].args[\"nftID\"].toString();\n          }\n\n          await firestore.collection(\"nfts\").doc(id).update({\n            tokenId: parseInt(nftId),\n            isSale: false,\n            owner: account,\n            time: 0,\n            saleType: \"fix\"\n          });\n          const old_owner = item.owner;\n          dispatchNftItem({ ...item,\n            tokenId: parseInt(nftId),\n            isSale: false,\n            owner: account,\n            time: 0,\n            saleType: \"fix\"\n          });\n          setIsSale(false);\n          firestore.collection(\"history\").add({\n            userId: account,\n            oldUserId: old_owner,\n            nftId: id,\n            actionType: 1,\n            price: parseFloat(price),\n            time: moment().valueOf()\n          });\n          getHistory(id);\n          setIsProcessing(false);\n          setIsAccept(false);\n          toast.success(\"You bought a NFT successfully\");\n        }).catch(err => {\n          toast.error(\"Failed to Buy\");\n          setIsProcessing(false);\n        });\n      } catch (err) {\n        var _err$data;\n\n        console.log(err);\n        toast.error((err === null || err === void 0 ? void 0 : (_err$data = err.data) === null || _err$data === void 0 ? void 0 : _err$data.message) ? err.data.message : \"Failed to buy NFT\");\n        setIsProcessing(false);\n      }\n    } else {\n      toast.error(\"Please connect your wallet first.\");\n      setIsProcessing(false);\n    }\n  };\n\n  const bidNft = async () => {\n    if (active) {\n      if (price < item.price || parseFloat(auctionInfo.amount) > 0 && price < item.price * 1.1) {\n        toast.error(\"Bid amount must not less than minimum bid\");\n        return;\n      }\n\n      setIsProcessing(true);\n\n      try {\n        const userExist = (await firestore.collection(\"users\").doc(account).get()).exists;\n\n        if (!userExist) {\n          // await creatProfile(account);\n          toast.error(\"Please create your profile first.\");\n          setIsProcessing(false);\n          return;\n        }\n\n        const contract = new Contract(NFT_MARKET_ADDRESS, Market_INFO.abi, library.getSigner());\n        const {\n          tokenId,\n          paymentType\n        } = item;\n        let res;\n\n        if (paymentType === \"BNB\") {\n          res = await contract.createBid(tokenId, paymentType, parseUnits(price.toString()), {\n            from: account,\n            value: parseUnits(price.toString())\n          });\n        } else {\n          res = await contract.createBid(tokenId, paymentType, parseUnits(price.toString()), {\n            from: account,\n            value: parseUnits(price.toString())\n          });\n        }\n\n        res.wait().then(async result => {\n          const auction_info = await contract.auctions(tokenId);\n          await firestore.collection(\"nfts\").doc(id).update({\n            price: parseFloat(price),\n            // owner: account,\n            saleType: \"auction\",\n            time: (parseInt(auction_info.duration) + parseInt(auction_info.firstBidTime)) * 1000\n          });\n          dispatchNftItem({ ...item,\n            price: parseFloat(price),\n            // owner: account,\n            saleType: \"auction\",\n            time: (parseInt(auction_info.duration) + parseInt(auction_info.firstBidTime)) * 1000\n          });\n          setAuctionInfo(null);\n          setIsAccept(false);\n          toast.success(\"You have placed bid this auction\");\n          firestore.collection(\"history\").add({\n            userId: account,\n            oldUserId: account,\n            nftId: id,\n            actionType: 2,\n            price: parseFloat(price),\n            time: moment().valueOf()\n          });\n          getHistory(id);\n          setIsBid(false);\n          setIsProcessing(false);\n        }).catch(err => {\n          toast.error(\"Failed to bid auction\");\n          setIsBid(false);\n          setIsProcessing(false);\n        });\n      } catch (err) {\n        toast.error(\"Failed to bid auction\");\n        setIsBid(false);\n        setIsProcessing(false);\n      }\n    } else {\n      toast.error(\"Please connect your wallet first.\");\n    }\n  };\n\n  const startAuction = async () => {\n    if (active) {\n      setIsProcessing(true);\n\n      try {\n        const contract = new Contract(NFT_MARKET_ADDRESS, Market_INFO.abi, library.getSigner());\n        const nftContract = new Contract(NFT_ADDRESS, NFT_INFO.abi, library.getSigner());\n        await nftContract.nftContract;\n        const {\n          tokenId,\n          tokenURI,\n          paymentType\n        } = item;\n        const auction_length = parseInt(auctionLength) * 3600; // const auction_length = 1200;\n        // const isApproved = await nftContract.isApprovedForAll(\n        //   account,\n        //   NFT_MARKET_ADDRESS\n        // );\n        // console.log(\n        //   \"isApproved\",\n        //   isApproved,\n        //   newPrice,\n        //   auction_length,\n        //   account\n        // );\n        // if (!isApproved) {\n        //   const approve = await nftContract.setApprovalForAll(\n        //     NFT_MARKET_ADDRESS,\n        //     true\n        //   );\n        //   await approve.wait();\n        // }\n\n        const res = await contract.createAuction(tokenId, tokenId === 0, tokenURI, auction_length, parseUnits(newPrice.toString()), paymentType, account, {\n          from: account,\n          value: parseUnits(newPrice.toString())\n        });\n        res.wait().then(async result => {\n          const events = result === null || result === void 0 ? void 0 : result.events;\n\n          if (events.length > 0) {\n            const args = events[events.length - 1].args;\n            await firestore.collection(\"nfts\").doc(id).update({\n              isSale: true,\n              saleType: \"auction\",\n              tokenId: parseInt(args.tokenId),\n              auctionCreator: account,\n              auctionLength: auction_length,\n              time: (parseInt(args.duration) + parseInt(args.auctionStart)) * 1000,\n              price: parseFloat(newPrice)\n            });\n            dispatchNftItem({ ...item,\n              isSale: true,\n              saleType: \"auction\",\n              auctionLength: auction_length,\n              auctionCreator: account,\n              tokenId: parseInt(args.tokenId),\n              time: (parseInt(args.duration) + parseInt(args.auctionStart)) * 1000,\n              price: parseFloat(newPrice)\n            });\n            const auction_info = await contract.auctions(parseInt(args.tokenId));\n            setAuctionInfo(auction_info);\n            firestore.collection(\"history\").add({\n              userId: account,\n              oldUserId: account,\n              nftId: id,\n              actionType: 3,\n              price: parseFloat(newPrice),\n              time: moment().valueOf()\n            });\n            getHistory(id);\n            setShowUpdate(false);\n            setIsProcessing(false);\n            setIsAccept(false);\n            toast.success(\"You create an auction\");\n          }\n        }).catch(err => {\n          setShowUpdate(false);\n          setIsProcessing(false);\n          toast.error(\"Failed to create auction\");\n        });\n      } catch (err) {\n        toast.error(\"Failed to create auction\");\n        setShowUpdate(false);\n        setIsProcessing(false);\n      }\n    } else {\n      toast.error(\"Please connect your wallet first\");\n      setIsProcessing(false);\n    }\n  };\n\n  const cancelAuction = async () => {\n    if (active) {\n      setIsProcessing(true);\n\n      try {\n        const contract = new Contract(NFT_MARKET_ADDRESS, Market_INFO.abi, library.getSigner());\n        const {\n          tokenId\n        } = item;\n        const res = await contract.cancelAuction(tokenId);\n        res.wait().then(async result => {\n          await firestore.collection(\"nfts\").doc(id).update({\n            time: 0,\n            saleType: \"fix\",\n            auctionCreator: null,\n            isSale: false\n          });\n          dispatchNftItem({ ...item,\n            saleType: \"fix\",\n            time: 0,\n            auctionCreator: null,\n            isSale: false\n          });\n          setIsSale(false);\n          setAuctionInfo(null);\n          firestore.collection(\"history\").add({\n            userId: account,\n            oldUserId: account,\n            nftId: id,\n            actionType: 5,\n            price: item.price,\n            time: moment().valueOf()\n          });\n          getHistory(id);\n          toast.success(\"Auction is canceled\");\n          setIsProcessing(false);\n          setIsAccept(false);\n        }).catch(err => {\n          toast.error(\"Failed to cancel auction\");\n          setIsProcessing(false);\n        });\n      } catch (err) {\n        toast.error(\"Failed to cancel auction\");\n        setIsProcessing(false);\n      }\n    } else {\n      toast.error(\"Please connect your wallet first\");\n    }\n  };\n\n  const endAuction = async () => {\n    if (active) {\n      setIsProcessing(true);\n\n      try {\n        const contract = new Contract(NFT_MARKET_ADDRESS, Market_INFO.abi, library.getSigner());\n        const nftContract = new Contract(NFT_ADDRESS, NFT_INFO.abi, library.getSigner());\n        const {\n          tokenId\n        } = item;\n        const isApproved = await nftContract.isApprovedForAll(account, NFT_MARKET_ADDRESS);\n\n        if (!isApproved) {\n          const approve = await nftContract.setApprovalForAll(NFT_MARKET_ADDRESS, true);\n          await approve.wait();\n        }\n\n        const res = await contract.endAuction(tokenId);\n        res.wait().then(async result => {\n          await firestore.collection(\"nfts\").doc(id).update({\n            saleType: \"fix\",\n            time: 0,\n            auctionLength: null,\n            auctionCreator: null,\n            isSale: false,\n            owner: auctionInfo.bidder !== \"0x0000000000000000000000000000000000000000\" ? auctionInfo.bidder : auctionInfo.Creator\n          });\n          dispatchNftItem({ ...item,\n            saleType: \"fix\",\n            time: 0,\n            auctionLength: null,\n            auctionCreator: null,\n            isSale: false,\n            owner: auctionInfo.bidder !== \"0x0000000000000000000000000000000000000000\" ? auctionInfo.bidder : auctionInfo.Creator\n          });\n          setIsSale(false);\n          if (auctionInfo.bidder !== \"0x0000000000000000000000000000000000000000\") firestore.collection(\"history\").add({\n            userId: auctionInfo.bidder,\n            oldUserId: auctionInfo.Creator,\n            nftId: id,\n            actionType: 1,\n            price: item.price,\n            time: moment().valueOf()\n          });\n          firestore.collection(\"history\").add({\n            userId: account,\n            oldUserId: account,\n            nftId: id,\n            actionType: 4,\n            price: item.price,\n            time: moment().valueOf()\n          });\n          getHistory(id);\n          setAuctionInfo(null);\n          setIsAccept(false);\n          toast.success(\"Auction is completed\");\n          setIsProcessing(false);\n        }).catch(err => {\n          toast.error(\"Failed to complete auction\");\n          setIsProcessing(false);\n        });\n      } catch (err) {\n        toast.error(\"Failed to complete auction\");\n        setIsProcessing(false);\n      }\n    } else {\n      toast.error(\"Please connect your wallet first.\");\n    }\n  };\n\n  useEffect(() => {\n    updatePrice(item.paymentType);\n  }, [item.paymentType]);\n\n  const updatePrice = _newPaymentType => {\n    const token = _newPaymentType === \"BNB\" ? \"binancecoin\" : \"flokinomics\";\n    axios.get(`https://api.coingecko.com/api/v3/simple/price?ids=${token}&vs_currencies=usd`).then(res => {\n      console.log(\"res:\", res);\n\n      if (res.status === 200) {\n        var _res$data$token;\n\n        const cur_rate = (_res$data$token = res.data[token]) === null || _res$data$token === void 0 ? void 0 : _res$data$token.usd;\n        if (cur_rate) setRate(cur_rate);\n      }\n    }).catch(err => console.log(err));\n  };\n\n  useEffect(() => {\n    getItem(id);\n    getHistory(id); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [active, id]);\n  useEffect(() => {\n    if (parseFloat(auctionInfo === null || auctionInfo === void 0 ? void 0 : auctionInfo.amount) > 0) setCurrentPrice(item.price * 1.1);else setCurrentPrice(item.price);\n  }, [item.price, auctionInfo]);\n\n  const renderer = _ref => {\n    let {\n      days,\n      hours,\n      minutes,\n      seconds,\n      completed\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: \"center\",\n        color: \"white\",\n        marginTop: 10,\n        fontSize: 18\n      },\n      children: [days, \" Days \", hours, \":\", minutes, \":\", seconds]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 967,\n      columnNumber: 7\n    }, this);\n  }; // const sss = async () => {\n  //   console.log(active);\n  //   if (active) {\n  //     const contract = new Contract(\n  //       \"0xed5E765Ac8702eF748f058e6828A1106aE2996AE\",\n  //       NFT_INFO.abi,\n  //       library.getSigner()\n  //     );\n  //     const nftContract = new Contract(\n  //       \"0xA96E7654330f2C8cF1acD07d3600BAeD6Bf7a417\",\n  //       NFT_INFO.abi,\n  //       library.getSigner()\n  //     );\n  //     let a = [],\n  //       b = [],\n  //       c = [],\n  //       d = [],\n  //       e = [],\n  //       f = [];\n  //     // console.log(await nftContract.ownerOf(417));\n  //     for (let i = 401; i < 420; i++) {\n  //       // const ccreator = await nftContract.creatorMap(i);\n  //       // const cprice = await nftContract.price(i);\n  //       // const cowner = await nftContract.ownerMap(i);\n  //       // // const bowner = await contract.ownerOf(i);\n  //       // const croyalty = await nftContract.royaltyMap(i);\n  //       // const clist = await nftContract.listedMap(i);\n  //       // const uris = await nftContract.tokenURI(i);\n  //       // console.log(uris);\n  //       // a.push(ccowner);\n  //       const res = await firestore\n  //         .collection(\"nfts\")\n  //         .where(\"tokenId\", \"==\", i)\n  //         .get();\n  //       let ccowner;\n  //       let uris;\n  //       if (res.docs.length > 0) {\n  //         console.log(\"exist\");\n  //         ccowner = (await res.docs[0].data()).owner;\n  //         uris = (await res.docs[0].data()).tokenURI;\n  //         b.push(ccowner);\n  //         a.push(uris);\n  //         c.push(BigNumber.from(i));\n  //       } else {\n  //         ccowner = \"\";\n  //         uris = \"\";\n  //       }\n  //       // a.push(i);\n  //       // b.push(ccreator);\n  //       // c.push(cprice);\n  //       // d.push(cowner);\n  //       // e.push(croyalty);\n  //       // f.push(false);\n  //       // const tt = new BigNumber();\n  //       // console.log(\n  //       //   i,\n  //       //   // clist,\n  //       //   cowner,\n  //       //   // bowner,\n  //       //   // ccowner,\n  //       //   // cowner === bowner && cowner === ccowner\n  //       // );\n  //     }\n  //     // console.log(c, a, b);\n  //     // await contract.addCreatorMap(false, a, b, c, d, e, f);\n  //     console.log(\"done\");\n  //     await contract.mintAll(c, b, a);\n  //   }\n  // };\n  // const sss = async () => {\n  //   if (active) {\n  //     // const contract = new Contract(\n  //     //   \"0xA96E7654330f2C8cF1acD07d3600BAeD6Bf7a417\",\n  //     //   NFT_INFO.abi,\n  //     //   library.getSigner()\n  //     // );\n  //     const nftContract = new Contract(\n  //       \"0xA96E7654330f2C8cF1acD07d3600BAeD6Bf7a417\",\n  //       Market_INFO.abi,\n  //       library.getSigner()\n  //     );\n  //     const ress = await firestore.collection(\"nfts\").get();\n  //     console.log(ress);\n  //     for (let i = 0; i < ress.docs.length; i++) {\n  //       const temp = await ress.docs[i].data();\n  //       if (!temp.time)\n  //         await firestore\n  //           .collection(\"nfts\")\n  //           .doc(ress.docs[i].id)\n  //           .update({ time: 0 });\n  //       console.log(temp.time);\n  //     }\n  //     // console.log(contract);\n  //     // let a = [],\n  //     //   b = [],\n  //     //   c = [];\n  //     // for (let i = 181; i < 244; i++) {\n  //     //   const res = await firestore\n  //     //     .collection(\"nfts\")\n  //     //     // .where(\"tokenId\", \"==\", i)\n  //     //     .get();\n  //     //   let ccowner, uris;\n  //     //   if (res.docs.length > 0) {\n  //     //     console.log(\"exist\");\n  //     //     const temp = await res.docs[0].data();\n  //     //     ccowner = temp.owner;\n  //     //     uris = temp.tokenURI;\n  //     //     a.push(ccowner);\n  //     //     b.push(uris);\n  //     //     // c.push(BigNumber.from(i));\n  //     //   } else {\n  //     //     ccowner = \"\";\n  //     //     uris = \"\";\n  //     //     console.log(i);\n  //     //   }\n  //     // }\n  //     // console.log(c, a, b);\n  //     // await contract.mintAll(c, a, b);\n  //     // console.log(\"done\");\n  //   }\n  // };\n\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row row--grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12\",\n          children: /*#__PURE__*/_jsxDEV(BreadCrumb, {\n            data: breadcrumb\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1109,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"main__title main__title--page\",\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1118,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1117,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 d-flex align-items-end justify-content-end\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"sign__text mb-0 d-flex justify-content-end mr-2\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"mt-0\",\n              children: \"For sale:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1123,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Switch, {\n            onChange: showUpdates,\n            checked: isSale,\n            disabled: item.owner !== account || item.time > 0,\n            height: 26\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1125,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 col-md-5  cardAssetPreview\",\n          children: /*#__PURE__*/_jsxDEV(AssetItem, {\n            data: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1137,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 col-md-7 bleuFrosted cardAssetDetails\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"asset__info\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"asset__desc\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                class: \"cardAssetDetailsLabel\",\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1145,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: item.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1146,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1144,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(AssetAuthor, {\n              data: item\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1149,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"itemActivity\",\n              children: /*#__PURE__*/_jsxDEV(Tabs, {\n                historyData: historyData,\n                bidsData: bidsData,\n                item: item,\n                docId: id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1152,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1151,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"asset__wrap\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"asset__timer\",\n                children: item.saleType !== \"fix\" && (item.time > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                      xmlns: \"http://www.w3.org/2000/svg\",\n                      viewBox: \"0 0 24 24\",\n                      children: /*#__PURE__*/_jsxDEV(\"path\", {\n                        d: \"M18.3,8.59l.91-.9a1,1,0,0,0-1.42-1.42l-.9.91a8,8,0,0,0-9.79,0l-.91-.92A1,1,0,0,0,4.77,7.69l.92.91A7.92,7.92,0,0,0,4,13.5,8,8,0,1,0,18.3,8.59ZM12,19.5a6,6,0,1,1,6-6A6,6,0,0,1,12,19.5Zm-2-15h4a1,1,0,0,0,0-2H10a1,1,0,0,0,0,2Zm3,6a1,1,0,0,0-2,0v1.89a1.5,1.5,0,1,0,2,0Z\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1171,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1167,\n                      columnNumber: 27\n                    }, this), \" \", \"Auction ends in\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1166,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"card__clock\",\n                    children: /*#__PURE__*/_jsxDEV(Countdown, {\n                      date: item.time,\n                      renderer: renderer\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1176,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1175,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"sign__group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"sign__label\",\n                    htmlFor: \"length\",\n                    children: \"Auction Length\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1181,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                    id: \"length\",\n                    name: \"length\",\n                    className: \"sign__select\",\n                    value: auctionLength,\n                    disabled: true,\n                    onChange: e => setAuctionLength(e.target.value),\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"12\",\n                      children: \"12 hours\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1192,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"24\",\n                      children: \"24 hours\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1193,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"48\",\n                      children: \"2 days\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1194,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"72\",\n                      children: \"3 days\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1195,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"168\",\n                      children: \"7 days\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1196,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1184,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1180,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1162,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"asset__price\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: item.saleType === \"fix\" ? \"Price\" : \"Minimum bid\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1203,\n                  columnNumber: 19\n                }, this), item.isSale && /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [parseFloat(currentPrice).toFixed(2), \" \", item.paymentType, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1209,\n                    columnNumber: 23\n                  }, this), \"($\", (parseFloat(currentPrice) * rate).toFixed(2), \" USD)\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1207,\n                  columnNumber: 21\n                }, this), item.isSale && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"pie-chart\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"relative\",\n                    children: /*#__PURE__*/_jsxDEV(ApexCharts, {\n                      options: chartOption,\n                      series: [item.royalties, item.paymentType === \"BNB\" ? 5 : 3, 100 - item.royalties - (item.paymentType === \"BNB\" ? 5 : 3)],\n                      type: \"pie\",\n                      width: 380\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1216,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1215,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1214,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1202,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1161,\n              columnNumber: 15\n            }, this), isSale && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"sign__group filter__checkboxes mb-1 mt-5\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"private\",\n                  type: \"checkbox\",\n                  name: \"private\",\n                  checked: isAccept,\n                  onChange: () => {\n                    setIsAccept(!isAccept);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1237,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"sign__label\",\n                  htmlFor: \"private\",\n                  children: [\"I agree to the\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: \"assets/terms/Terms and Conditions for Purchasers.pdf\",\n                    target: \"_blank\",\n                    className: \"ml-1 linkTerms\",\n                    children: \"Terms and conditions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1248,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1246,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1236,\n                columnNumber: 19\n              }, this), isAccept && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"asset__btns\",\n                children: item.saleType === \"fix\" ? /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"asset__btn asset__btn asset__btn--clr mx-auto\",\n                  onClick: buyNft,\n                  children: isProcessing ? \"Waiting...\" : \"Buy\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1260,\n                  columnNumber: 25\n                }, this) : item.time > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [!((auctionInfo === null || auctionInfo === void 0 ? void 0 : auctionInfo.Creator) === account) && /*#__PURE__*/_jsxDEV(\"button\", {\n                    disabled: isProcessing || item.time < moment().valueOf() || (auctionInfo === null || auctionInfo === void 0 ? void 0 : auctionInfo.Creator) === account || (auctionInfo === null || auctionInfo === void 0 ? void 0 : auctionInfo.bidder) === account,\n                    className: \"asset__btn asset__btn--full asset__btn--clr open-modal mr-0\",\n                    onClick: () => {\n                      setIsBid(true);\n                    },\n                    children: \"Place a bid\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1269,\n                    columnNumber: 29\n                  }, this), (auctionInfo === null || auctionInfo === void 0 ? void 0 : auctionInfo.Creator) === account && item.time > moment().valueOf() && (parseInt(auctionInfo === null || auctionInfo === void 0 ? void 0 : auctionInfo.amount) === 0 ? /*#__PURE__*/_jsxDEV(\"button\", {\n                    disabled: isProcessing,\n                    className: \"asset__btn asset__btn--full asset__btn--clr\",\n                    onClick: cancelAuction,\n                    children: isProcessing ? \"Waiting...\" : \"Cancel Auction\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1287,\n                    columnNumber: 31\n                  }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                    disabled: true,\n                    className: \"asset__btn asset__btn--full asset__btn--clr\",\n                    children: \"Auction is started\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1295,\n                    columnNumber: 31\n                  }, this)), ((auctionInfo === null || auctionInfo === void 0 ? void 0 : auctionInfo.Creator) === account || (auctionInfo === null || auctionInfo === void 0 ? void 0 : auctionInfo.bidder) === account) && item.time < moment().valueOf() && /*#__PURE__*/_jsxDEV(\"button\", {\n                    disabled: isProcessing,\n                    className: \"asset__btn asset__btn--full asset__btn--clr\",\n                    onClick: endAuction,\n                    children: isProcessing ? \"Waiting...\" : \"End Auction\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1305,\n                    columnNumber: 31\n                  }, this)]\n                }, void 0, true) : item.owner === account && /*#__PURE__*/_jsxDEV(\"button\", {\n                  disabled: isProcessing,\n                  className: \"asset__btn asset__btn--full asset__btn--clr\",\n                  onClick: startAuction,\n                  children: isProcessing ? \"Waiting...\" : \"Start Auction\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1316,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1258,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1143,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1142,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1134,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1105,\n      columnNumber: 7\n    }, this), isBid && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mfp-wrap\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mfp-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mfp-backdrop\",\n          onClick: () => {\n            setIsBid(false);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1338,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"zoom-anim-dialog mfp-preloader modal modal--form\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modal__close\",\n            onClick: () => {\n              setIsBid(false);\n            },\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              viewBox: \"0 0 24 24\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M13.41,12l4.3-4.29a1,1,0,1,0-1.42-1.42L12,10.59,7.71,6.29A1,1,0,0,0,6.29,7.71L10.59,12l-4.3,4.29a1,1,0,0,0,0,1.42,1,1,0,0,0,1.42,0L12,13.41l4.29,4.3a1,1,0,0,0,1.42,0,1,1,0,0,0,0-1.42Z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1352,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1351,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1345,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"sign__title\",\n            children: \"Place a bid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1355,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sign__group sign__group--row\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"sign__label\",\n              htmlFor: \"placebid\",\n              children: \"Your Highest bid\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1357,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"placebid\",\n              type: \"number\",\n              value: price,\n              placeholder: `Place your highest bid in ${item.paymentType}.`,\n              className: \"sign__input\",\n              onChange: e => setPrice(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1360,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"sign__text sign__text--small\",\n              children: [\"Price in USD : \", (price * rate).toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1368,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"sign__text sign__text--small\",\n              children: [\"Minimum Bid : \", currentPrice.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1371,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1356,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"sign__btn\",\n            onClick: bidNft,\n            disabled: isProcessing,\n            children: isProcessing ? \"Waiting...\" : \"Take a bid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1375,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1344,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1337,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1336,\n      columnNumber: 9\n    }, this), showUpdate && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mfp-wrap\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mfp-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mfp-backdrop\",\n          onClick: showUpdates\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1389,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"zoom-anim-dialog mfp-preloader modal modal--form\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modal__close\",\n            onClick: showUpdates,\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              viewBox: \"0 0 24 24\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M13.41,12l4.3-4.29a1,1,0,1,0-1.42-1.42L12,10.59,7.71,6.29A1,1,0,0,0,6.29,7.71L10.59,12l-4.3,4.29a1,1,0,0,0,0,1.42,1,1,0,0,0,1.42,0L12,13.41l4.29,4.3a1,1,0,0,0,1.42,0,1,1,0,0,0,0-1.42Z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1393,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1392,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1391,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"sign__title\",\n            children: \"List For Sale\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1396,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sign__group sign__group--row\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"sign__label\",\n              htmlFor: \"saleType\",\n              children: \"Sale Type:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1398,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"saleType\",\n              name: \"saleType\",\n              className: \"sign__select height-sm mt-0 mb-4\",\n              value: saleType,\n              onChange: e => {\n                setNewPrice(item.price);\n                setSaleType(e.target.value);\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"fix\",\n                children: \"Fixed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1411,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"auction\",\n                children: \"Auction\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1412,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1401,\n              columnNumber: 17\n            }, this), saleType === \"auction\" && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sign__group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"sign__label\",\n                htmlFor: \"length\",\n                children: \"Auction Length\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1416,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"length\",\n                name: \"length\",\n                className: \"sign__select\",\n                value: auctionLength,\n                onChange: e => setAuctionLength(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"12\",\n                  children: \"12 hours\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1426,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"24\",\n                  children: \"24 hours\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1427,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"48\",\n                  children: \"2 days\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1428,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"72\",\n                  children: \"3 days\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1429,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"168\",\n                  children: \"7 days\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1430,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1419,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1415,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"sign__label\",\n              htmlFor: \"updatePrice\",\n              children: [saleType === \"fix\" ? \"Update\" : \"First\", \" Price:\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1434,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"updatePrice\",\n              type: \"number\",\n              name: \"updatePrice\",\n              className: \"sign__input height-sm\",\n              placeholder: \"Type update price.\",\n              value: newPrice || 0,\n              onChange: e => {\n                setNewPrice(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1437,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1397,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"sign__btn\",\n            onClick: () => {\n              updateSale(false);\n            },\n            disabled: isProcessing,\n            children: isProcessing ? \"Waiting...\" : \"List for sale\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1449,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1390,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1388,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1387,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1104,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Item, \"zyzJdjsJvf9ruV9TViaPzzpqoXw=\", false, function () {\n  return [useWeb3React, useParams, useDispatch];\n});\n\n_c = Item;\nexport default Item;\n\nvar _c;\n\n$RefreshReg$(_c, \"Item\");","map":{"version":3,"sources":["/home/hp/Desktop/Bluefi/bleufi-frontend/src/pages/Asset/index.js"],"names":["React","useEffect","useState","useDispatch","BreadCrumb","AssetItem","AssetAuthor","ApexCharts","useWeb3React","Contract","Market_INFO","NFT_INFO","NFT_ADDRESS","CONTRACT_ADDRESS","PAYMENT_TOKEN","NFT_MARKET_ADDRESS","NFT_CONTRACT_ADDRESS","parseUnits","Axios","Tabs","Switch","useParams","firestore","toast","Countdown","moment","axios","bluefiabi","Web3","breadcrumb","title","page","Item","web3","givenProvider","window","etherum","newContract","abiFile","abi","contractInstance","eth","library","active","account","id","price","setPrice","user","setUser","avatar","ownerAvatar","imageCover","firstName","lastName","nickName","bio","twitter","telegram","instagram","subscribe","followers","currentPrice","setCurrentPrice","auctionLength","setAuctionLength","isProcessing","setIsProcessing","item","setItem","name","description","owner","time","saleType","likes","paymentType","isSale","setIsSale","isBid","setIsBid","isAccept","setIsAccept","auctionInfo","setAuctionInfo","historyData","setHistoryData","bidsData","setBidsData","rate","setRate","showUpdate","setShowUpdate","newPrice","setNewPrice","setSaleType","chartOption","chart","width","type","labels","theme","monochrome","enabled","color","responsive","breakpoint","options","legend","position","dispatch","dispatchNftItem","payload","getHistory","item_id","res","collection","where","get","nft_history","i","docs","length","x","temp","data","user_info","doc","userId","kcsPrice","timespace","parseInt","valueOf","timeAgo","format","push","verified","actionType","history_data","sort","a","b","filter","e","getItem","nft_item","nftInfo","tokenURI","err","console","log","contract","getSigner","tokenId","auction_info","auctions","updateSale","lock","userExist","exists","error","nftContract","closeTrade","wait","update","success","startAuction","isApproved","isApprovedForAll","approve","setApprovalForAll","openTrade","toString","accounts","getAccounts","hash","methods","getMessageHash","call","encodedhash","getEthSignedMessageHash","signature","sign","parseFloat","prev","showUpdates","dispatchUser","user_id","userInfo","buyNft","royalties","creator","JSON","stringify","from","value","buyNew","tokenContract","tokenAddress","buy","then","result","nftId","events","args","old_owner","add","oldUserId","catch","message","bidNft","amount","createBid","duration","firstBidTime","auction_length","createAuction","auctionCreator","auctionStart","cancelAuction","endAuction","bidder","Creator","updatePrice","_newPaymentType","token","status","cur_rate","usd","renderer","days","hours","minutes","seconds","completed","textAlign","marginTop","fontSize","target","toFixed"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport BreadCrumb from \"components/BreadCrumb\";\nimport AssetItem from \"components/AssetItem\";\nimport AssetAuthor from \"components/AssetAuthor\";\nimport ApexCharts from \"react-apexcharts\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport Market_INFO from \"artifacts/contracts/Marketplace.sol/FlokinomicsNFTMarketplace.json\";\nimport NFT_INFO from \"artifacts/contracts/FlokinomicsNFT.sol/FlokinomicsNFT.json\";\nimport {\n  NFT_ADDRESS,\n  CONTRACT_ADDRESS,\n  PAYMENT_TOKEN,\n  NFT_MARKET_ADDRESS,\n  NFT_CONTRACT_ADDRESS,\n} from \"../../constants\";\nimport { parseUnits } from \"@ethersproject/units\";\nimport Axios from \"axios\";\nimport Tabs from \"./Tabs\";\nimport Switch from \"react-switch\";\nimport \"styles/activity.css\";\nimport { useParams } from \"react-router-dom\";\nimport { firestore } from \"../../firebase\";\nimport { toast } from \"react-toastify\";\nimport Countdown from \"react-countdown\";\nimport moment from \"moment\";\nimport axios from \"axios\";\nimport bluefiabi from \"../../services/smart-contract/BLEUFINFT\"\nimport Web3 from \"web3\"\n// import { BigNumber } from \"ethers\";\n\nconst breadcrumb = [\n  { title: \"Home\", page: \"/\" },\n  { title: \"Item\", page: \"/item\" },\n];\n\nfunction Item() {const web3 = new Web3(Web3.givenProvider || window.etherum)\n  const newContract = \"0xA20B92E0a08B6c32E81958A4955F138589C2084a\"\n  const abiFile = bluefiabi.abi\n  const contractInstance = new web3.eth.Contract(abiFile,newContract)\n\n  const { library, active, account } = useWeb3React();\n  const { id } = useParams();\n  const [price, setPrice] = useState(0);\n  const [user, setUser] = useState({\n    account: account,\n    avatar: \"assets/img/avatars/avatar.jpg\",\n    ownerAvatar: \"assets/img/avatars/avatar.jpg\",\n    imageCover: \"/assets/img/bg/bg.png\",\n    firstName: \"User\",\n    lastName: \"\",\n    nickName: \"@user\",\n    bio: \"\",\n    twitter: \"\",\n    telegram: \"\",\n    instagram: \"\",\n    subscribe: \"\",\n    followers: [],\n  });\n  const [currentPrice, setCurrentPrice] = useState(0);\n  const [auctionLength, setAuctionLength] = useState(\"12\");\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [item, setItem] = useState({\n    name: \"\",\n    description: \"\",\n    owner: account || null,\n    time: 0,\n    saleType: \"fix\",\n    likes: [],\n    price: 0,\n    paymentType: \"BNB\",\n  });\n  const [isSale, setIsSale] = useState(false);\n  const [isBid, setIsBid] = useState(false);\n  const [isAccept, setIsAccept] = useState(false);\n  const [auctionInfo, setAuctionInfo] = useState(null);\n  const [historyData, setHistoryData] = useState([]);\n  const [bidsData, setBidsData] = useState([]);\n  const [rate, setRate] = useState(10);\n  const [showUpdate, setShowUpdate] = useState(false);\n  const [newPrice, setNewPrice] = useState(item.price);\n  const [saleType, setSaleType] = useState(item.saleType);\n\n  const [chartOption] = useState({\n    chart: {\n      width: 380,\n      type: \"pie\",\n    },\n    labels: [\"Creator's Royalty\", \"Platform fee\", \"Seller\"],\n    theme: {\n      monochrome: {\n        enabled: true,\n        color: \"#0000ff\",\n      },\n    },\n    responsive: [\n      {\n        breakpoint: 480,\n        options: {\n          chart: {\n            id: \"pie-chart\",\n            width: 200,\n          },\n          legend: {\n            position: \"bottom\",\n          },\n        },\n      },\n    ],\n  });\n\n  const dispatch = useDispatch();\n\n  const dispatchNftItem = (payload) => {\n    dispatch({ type: \"SET_SELECTED\", payload });\n    setItem(payload);\n    setNewPrice(payload.price);\n    setSaleType(payload.saleType);\n  };\n\n  const getHistory = async (item_id) => {\n    const res = await firestore\n      .collection(\"history\")\n      .where(\"nftId\", \"==\", item_id)\n      .get();\n    let nft_history = [];\n    for (let i = 0; i < res.docs.length; i++) {\n      const x = res.docs[i];\n      const temp = x.data();\n      const user_info = (\n        await firestore.collection(\"users\").doc(temp.userId).get()\n      ).data();\n      const kcsPrice = temp.price;\n      const timespace = parseInt((moment().valueOf() - temp.time) / 60000);\n      const timeAgo =\n        timespace < 1\n          ? \"less than a minute\"\n          : timespace < 60\n          ? `${timespace} min ago`\n          : timespace < 24 * 60\n          ? `${parseInt(timespace / 60)} hrs ago`\n          : moment(temp.time).format(\"YYYY/MM/DD\");\n      nft_history.push({\n        avatar: user_info?.avatar || \"/assets/img/avatars/avatar.jpg\",\n        kcsPrice,\n        timeAgo,\n        nickName: user_info?.nickName,\n        verified: true,\n        time: temp.time,\n        actionType: temp.actionType,\n      });\n    }\n    const history_data = nft_history.sort((a, b) => b.time - a.time);\n    setHistoryData(history_data);\n    setBidsData(history_data.filter((e) => e.actionType > 1));\n  };\n  const getItem = async (item_id) => {\n    const res = await firestore.collection(\"nfts\").doc(item_id).get();\n    let nft_item = res.data();\n    let nftInfo = { data: {} };\n    try {\n      nftInfo = await Axios.get(nft_item.tokenURI);\n    } catch (err) {\n      console.log(err);\n    }\n    dispatchNftItem({ id, ...user, ...nft_item, ...nftInfo.data });\n    if (active) {\n      const contract = new Contract(\n        NFT_MARKET_ADDRESS,\n        Market_INFO.abi,\n        library.getSigner()\n      );\n      // const cur_price = await contract.listedMap(nft_item.tokenId);\n      // console.log(cur_price);\n      // const prov = ethers.getDefaultProvider();\n      // const pp = await contract.balanceOf((await prov.getSigners())[0].address);\n\n      // const bal = await prov.getBalance(account);\n\n      if (nft_item?.tokenId !== 0) {\n        const auction_info = await contract.auctions(nft_item.tokenId);\n        setAuctionInfo(auction_info);\n      }\n    }\n    setIsSale(nft_item?.isSale);\n  };\n\n  const updateSale = async (lock = false) => {\n    setIsProcessing(true);\n    try {\n      const userExist = (await firestore.collection(\"users\").doc(account).get())\n        .exists;\n      if (!userExist) {\n        // await creatProfile(account);\n        toast.error(\"Please create your profile first.\");\n        setIsProcessing(false);\n        return;\n      }\n\n      const contract = new Contract(\n        NFT_MARKET_ADDRESS,\n        Market_INFO.abi,\n        library.getSigner()\n      );\n      const nftContract = new Contract(\n        NFT_ADDRESS,\n        NFT_INFO.abi,\n        library.getSigner()\n      );\n      if (item.isSale) {\n        if (item.tokenId !== 0) {\n          const res = await contract.closeTrade(item.tokenId);\n          await res.wait();\n        }\n        await firestore.collection(\"nfts\").doc(id).update({\n          isSale: false,\n          time: 0,\n          saleType: \"fix\",\n        });\n        setItem({\n          ...item,\n          isSale: false,\n          time: 0,\n          saleType: \"fix\",\n        });\n        toast.success(\"Delisted from marketplace successfully\");\n        setShowUpdate(false);\n        setIsProcessing(false);\n      } else {\n        if (newPrice <= 0) {\n          toast.error(\"Price should not be zero.\");\n          setIsProcessing(false);\n          return;\n        }\n        if (saleType === \"auction\") {\n          await startAuction();\n        } else {\n          if (item.tokenId !== 0) {\n            const isApproved = await nftContract.isApprovedForAll(\n              account,\n              NFT_MARKET_ADDRESS\n            );\n            if (!isApproved) {\n              const approve = await nftContract.setApprovalForAll(\n                NFT_MARKET_ADDRESS,\n                true\n              );\n              await approve.wait();\n            }\n            const res = await contract.openTrade(\n              item.tokenId,\n              parseUnits(newPrice.toString()),\n              item.paymentType\n            );\n            await res.wait();\n          }\n          let accounts = await web3.eth.getAccounts()\n          const hash = await contractInstance.methods.getMessageHash(\n            1,\n            0,\n            tokenURI  \n          ).call()\n          const encodedhash = await contractInstance.methods.getEthSignedMessageHash(hash).call()\n          const signature = await web3.eth.sign(encodedhash, accounts[0])\n          console.log(signature)\n          await firestore\n            .collection(\"nfts\")\n            .doc(id)\n            .update({\n              price: parseFloat(newPrice),\n              saleType: \"fix\",\n              isSale: true,\n              signature:signature,\n              time: 0,\n            });\n          setItem({\n            ...item,\n            price: parseFloat(newPrice),\n            saleType: \"fix\",\n            signature:signature,\n            isSale: true,\n            time: 0,\n          });\n          toast.success(\"Listed on marketplace successfully\");\n          setShowUpdate(false);\n          setIsProcessing(false);\n        }\n      }\n    } catch (err) {\n      setIsSale((prev) => !prev);\n      setShowUpdate(false);\n      toast.error(\"Fail to update: \" + err);\n      setIsProcessing(false);\n    }\n  };\n\n  const showUpdates = () => {\n    if (isSale && !showUpdate) updateSale(true);\n    setShowUpdate(!isSale);\n    setIsSale((prev) => !prev);\n  };\n\n  // const creatProfile = async (user_account) => {\n  //   const author = {\n  //     avatar: \"/assets/img/avatars/avatar.jpg\",\n  //     imageCover: \"/assets/img/bg/bg.png\",\n  //     ownerAvatar: \"/assets/img/avatars/avatar.jpg\",\n  //     firstName: \"User\",\n  //     lastName: \"\",\n  //     nickName: \"@user\",\n  //     account: user_account,\n  //     bio: \"\",\n  //     twitter: \"\",\n  //     telegram: \"\",\n  //     instagram: \"\",\n  //     subscribe: \"\",\n  //     followers: [],\n  //   };\n  //   await firestore.collection(\"users\").doc(user_account).set(author);\n  // };\n\n  const dispatchUser = async (user_id) => {\n    if (user_id) {\n      const userInfo = (\n        await firestore.collection(\"users\").doc(user_id).get()\n      ).data();\n      dispatch({ type: \"SET_PROFILE\", userInfo });\n      setUser(userInfo);\n    }\n  };\n  useEffect(() => {\n    dispatchUser(account);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [account]);\n\n  console.log(parseUnits(item.price.toString()));\n\n  const buyNft = async () => {\n    if (active) {\n      setIsProcessing(true);\n      try {\n        const userExist = (\n          await firestore.collection(\"users\").doc(account).get()\n        ).exists;\n        if (!userExist) {\n          // await creatProfile(account);\n          toast.error(\"Please create your profile first.\");\n          setIsProcessing(false);\n          return;\n        }\n\n        const contract = new Contract(\n          CONTRACT_ADDRESS,\n          Market_INFO.abi,\n          library.getSigner()\n        );\n        const nftContract = new Contract(\n          NFT_CONTRACT_ADDRESS,\n          NFT_INFO.abi,\n          library.getSigner()\n        );\n        const {\n          tokenId,\n          tokenURI,\n          price,\n          id,\n          royalties,\n          paymentType,\n          creator,\n        } = item;\n\n        const isApproved = await nftContract.isApprovedForAll(\n          account,\n          NFT_MARKET_ADDRESS\n        );\n        if (!isApproved) {\n          const approve = await nftContract.setApprovalForAll(\n            NFT_MARKET_ADDRESS,\n            true\n          );\n          await approve.wait();\n        }\n\n        // const approve = await nftContract.approve(\n        //   CONTRACT_ADDRESS,\n        //   parseUnits(price.toString())\n        // );\n        // await approve.wait();\n\n        // const tokenContract = new Contract(\n        //   PAYMENT_TOKEN[paymentType].tokenAddress,\n        //   PAYMENT_TOKEN[paymentType].abi,\n        //   library.getSigner()\n        // );\n        // const approve = await tokenContract.approve(\n        //   NFT_MARKET_ADDRESS,\n        //   parseUnits(price.toString())\n        // );\n        // await approve.wait();\n\n        //console.log(isApproved);\n        // if (!isApproved) {\n        //   const approve = await nftContract.setApprovalForAll(\n        //     NFT_MARKET_ADDRESS,\n        //     true\n        //   );\n        //   await approve.wait();\n        // }\n        let res;\n        // contract.setTokenAddress(\n        //   paymentType,\n        //   PAYMENT_TOKEN[paymentType].tokenAddress,\n        //   NFT_ADDRESS\n        // );\n\n        if (tokenId === 0) {\n          if (paymentType === \"BNB\") {\n            console.log(\n              JSON.stringify({\n                tokenId,\n                creator,\n                price: parseUnits(price.toString()),\n                paymentType,\n                royalties,\n                tokenURI,\n                from: account,\n                value: parseUnits(price.toString()),\n              }),\n              null,\n              2\n            );\n\n            res = await contract.buyNew(\n              tokenId,\n              creator,\n              parseUnits(price.toString()),\n              paymentType,\n              royalties,\n              tokenURI,\n              { from: account, value: parseUnits(price.toString()) }\n            );\n            // res = await contract.buy(\n            //   tokenId,\n            //   parseUnits(price.toString()),\n            //   paymentType,\n            //   { from: account, value: parseUnits(price.toString()) }\n            // );\n          } else {\n            const tokenContract = new Contract(\n              PAYMENT_TOKEN[paymentType].tokenAddress,\n              PAYMENT_TOKEN[paymentType].abi,\n              library.getSigner()\n            );\n            const approve = await tokenContract.approve(\n              NFT_CONTRACT_ADDRESS,\n              parseUnits(price.toString())\n            );\n            await approve.wait();\n\n            res = await contract.buyNew(\n              tokenId,\n              creator,\n              parseUnits(price.toString()),\n              paymentType,\n              royalties,\n              tokenURI,\n              { from: account, value: parseUnits(price.toString()) }\n            );\n          }\n        } else {\n          if (paymentType === \"BNB\") {\n            res = await contract.buy(\n              tokenId,\n              parseUnits(price.toString()),\n              paymentType,\n              { from: account, value: parseUnits(price.toString()) }\n            );\n          } else {\n            const tokenContract = new Contract(\n              PAYMENT_TOKEN[paymentType].tokenAddress,\n              PAYMENT_TOKEN[paymentType].abi,\n              library.getSigner()\n            );\n            const approve = await tokenContract.approve(\n              NFT_MARKET_ADDRESS,\n              parseUnits(price.toString())\n            );\n            await approve.wait();\n            res = await contract.buy(\n              tokenId,\n              parseUnits(price.toString()),\n              paymentType,\n              { from: account, value: parseUnits(price.toString()) }\n            );\n          }\n        }\n\n        res\n          .wait()\n          .then(async (result) => {\n            console.log(result);\n            let nftId = 0;\n            const events = result?.events;\n            if (events.length > 0) {\n              nftId = events[events.length - 1].args[\"nftID\"].toString();\n            }\n            await firestore\n              .collection(\"nfts\")\n              .doc(id)\n              .update({\n                tokenId: parseInt(nftId),\n                isSale: false,\n                owner: account,\n                time: 0,\n                saleType: \"fix\",\n              });\n            const old_owner = item.owner;\n            dispatchNftItem({\n              ...item,\n              tokenId: parseInt(nftId),\n              isSale: false,\n              owner: account,\n              time: 0,\n              saleType: \"fix\",\n            });\n            setIsSale(false);\n\n            firestore.collection(\"history\").add({\n              userId: account,\n              oldUserId: old_owner,\n              nftId: id,\n              actionType: 1,\n              price: parseFloat(price),\n              time: moment().valueOf(),\n            });\n            getHistory(id);\n            setIsProcessing(false);\n            setIsAccept(false);\n            toast.success(\"You bought a NFT successfully\");\n          })\n          .catch((err) => {\n            toast.error(\"Failed to Buy\");\n            setIsProcessing(false);\n          });\n      } catch (err) {\n        console.log(err);\n        toast.error(\n          err?.data?.message ? err.data.message : \"Failed to buy NFT\"\n        );\n        setIsProcessing(false);\n      }\n    } else {\n      toast.error(\"Please connect your wallet first.\");\n      setIsProcessing(false);\n    }\n  };\n\n  const bidNft = async () => {\n    if (active) {\n      if (\n        price < item.price ||\n        (parseFloat(auctionInfo.amount) > 0 && price < item.price * 1.1)\n      ) {\n        toast.error(\"Bid amount must not less than minimum bid\");\n        return;\n      }\n      setIsProcessing(true);\n      try {\n        const userExist = (\n          await firestore.collection(\"users\").doc(account).get()\n        ).exists;\n        if (!userExist) {\n          // await creatProfile(account);\n          toast.error(\"Please create your profile first.\");\n          setIsProcessing(false);\n          return;\n        }\n        const contract = new Contract(\n          NFT_MARKET_ADDRESS,\n          Market_INFO.abi,\n          library.getSigner()\n        );\n\n        const { tokenId, paymentType } = item;\n        let res;\n        if (paymentType === \"BNB\") {\n          res = await contract.createBid(\n            tokenId,\n            paymentType,\n            parseUnits(price.toString()),\n            {\n              from: account,\n              value: parseUnits(price.toString()),\n            }\n          );\n        } else {\n          res = await contract.createBid(\n            tokenId,\n            paymentType,\n            parseUnits(price.toString()),\n            {\n              from: account,\n              value: parseUnits(price.toString()),\n            }\n          );\n        }\n\n        res\n          .wait()\n          .then(async (result) => {\n            const auction_info = await contract.auctions(tokenId);\n            await firestore\n              .collection(\"nfts\")\n              .doc(id)\n              .update({\n                price: parseFloat(price),\n                // owner: account,\n                saleType: \"auction\",\n                time:\n                  (parseInt(auction_info.duration) +\n                    parseInt(auction_info.firstBidTime)) *\n                  1000,\n              });\n            dispatchNftItem({\n              ...item,\n              price: parseFloat(price),\n              // owner: account,\n              saleType: \"auction\",\n              time:\n                (parseInt(auction_info.duration) +\n                  parseInt(auction_info.firstBidTime)) *\n                1000,\n            });\n            setAuctionInfo(null);\n            setIsAccept(false);\n            toast.success(\"You have placed bid this auction\");\n\n            firestore.collection(\"history\").add({\n              userId: account,\n              oldUserId: account,\n              nftId: id,\n              actionType: 2,\n              price: parseFloat(price),\n              time: moment().valueOf(),\n            });\n            getHistory(id);\n            setIsBid(false);\n            setIsProcessing(false);\n          })\n          .catch((err) => {\n            toast.error(\"Failed to bid auction\");\n            setIsBid(false);\n            setIsProcessing(false);\n          });\n      } catch (err) {\n        toast.error(\"Failed to bid auction\");\n        setIsBid(false);\n        setIsProcessing(false);\n      }\n    } else {\n      toast.error(\"Please connect your wallet first.\");\n    }\n  };\n\n  const startAuction = async () => {\n    if (active) {\n      setIsProcessing(true);\n      try {\n        const contract = new Contract(\n          NFT_MARKET_ADDRESS,\n          Market_INFO.abi,\n          library.getSigner()\n        );\n        const nftContract = new Contract(\n          NFT_ADDRESS,\n          NFT_INFO.abi,\n          library.getSigner()\n        );\n        await nftContract.nftContract;\n\n        const { tokenId, tokenURI, paymentType } = item;\n        const auction_length = parseInt(auctionLength) * 3600;\n        // const auction_length = 1200;\n        // const isApproved = await nftContract.isApprovedForAll(\n        //   account,\n        //   NFT_MARKET_ADDRESS\n        // );\n        // console.log(\n        //   \"isApproved\",\n        //   isApproved,\n        //   newPrice,\n        //   auction_length,\n        //   account\n        // );\n        // if (!isApproved) {\n        //   const approve = await nftContract.setApprovalForAll(\n        //     NFT_MARKET_ADDRESS,\n        //     true\n        //   );\n        //   await approve.wait();\n        // }\n        const res = await contract.createAuction(\n          tokenId,\n          tokenId === 0,\n          tokenURI,\n          auction_length,\n          parseUnits(newPrice.toString()),\n          paymentType,\n          account,\n          { from: account, value: parseUnits(newPrice.toString()) }\n        );\n        res\n          .wait()\n          .then(async (result) => {\n            const events = result?.events;\n            if (events.length > 0) {\n              const args = events[events.length - 1].args;\n              await firestore\n                .collection(\"nfts\")\n                .doc(id)\n                .update({\n                  isSale: true,\n                  saleType: \"auction\",\n                  tokenId: parseInt(args.tokenId),\n                  auctionCreator: account,\n                  auctionLength: auction_length,\n                  time:\n                    (parseInt(args.duration) + parseInt(args.auctionStart)) *\n                    1000,\n                  price: parseFloat(newPrice),\n                });\n              dispatchNftItem({\n                ...item,\n                isSale: true,\n                saleType: \"auction\",\n                auctionLength: auction_length,\n                auctionCreator: account,\n                tokenId: parseInt(args.tokenId),\n                time:\n                  (parseInt(args.duration) + parseInt(args.auctionStart)) *\n                  1000,\n                price: parseFloat(newPrice),\n              });\n              const auction_info = await contract.auctions(\n                parseInt(args.tokenId)\n              );\n              setAuctionInfo(auction_info);\n              firestore.collection(\"history\").add({\n                userId: account,\n                oldUserId: account,\n                nftId: id,\n                actionType: 3,\n                price: parseFloat(newPrice),\n                time: moment().valueOf(),\n              });\n              getHistory(id);\n              setShowUpdate(false);\n              setIsProcessing(false);\n              setIsAccept(false);\n              toast.success(\"You create an auction\");\n            }\n          })\n          .catch((err) => {\n            setShowUpdate(false);\n            setIsProcessing(false);\n            toast.error(\"Failed to create auction\");\n          });\n      } catch (err) {\n        toast.error(\"Failed to create auction\");\n        setShowUpdate(false);\n        setIsProcessing(false);\n      }\n    } else {\n      toast.error(\"Please connect your wallet first\");\n      setIsProcessing(false);\n    }\n  };\n\n  const cancelAuction = async () => {\n    if (active) {\n      setIsProcessing(true);\n      try {\n        const contract = new Contract(\n          NFT_MARKET_ADDRESS,\n          Market_INFO.abi,\n          library.getSigner()\n        );\n        const { tokenId } = item;\n        const res = await contract.cancelAuction(tokenId);\n        res\n          .wait()\n          .then(async (result) => {\n            await firestore.collection(\"nfts\").doc(id).update({\n              time: 0,\n              saleType: \"fix\",\n              auctionCreator: null,\n              isSale: false,\n            });\n            dispatchNftItem({\n              ...item,\n              saleType: \"fix\",\n              time: 0,\n              auctionCreator: null,\n              isSale: false,\n            });\n            setIsSale(false);\n            setAuctionInfo(null);\n\n            firestore.collection(\"history\").add({\n              userId: account,\n              oldUserId: account,\n              nftId: id,\n              actionType: 5,\n              price: item.price,\n              time: moment().valueOf(),\n            });\n            getHistory(id);\n            toast.success(\"Auction is canceled\");\n            setIsProcessing(false);\n            setIsAccept(false);\n          })\n          .catch((err) => {\n            toast.error(\"Failed to cancel auction\");\n            setIsProcessing(false);\n          });\n      } catch (err) {\n        toast.error(\"Failed to cancel auction\");\n        setIsProcessing(false);\n      }\n    } else {\n      toast.error(\"Please connect your wallet first\");\n    }\n  };\n\n  const endAuction = async () => {\n    if (active) {\n      setIsProcessing(true);\n      try {\n        const contract = new Contract(\n          NFT_MARKET_ADDRESS,\n          Market_INFO.abi,\n          library.getSigner()\n        );\n        const nftContract = new Contract(\n          NFT_ADDRESS,\n          NFT_INFO.abi,\n          library.getSigner()\n        );\n        const { tokenId } = item;\n        const isApproved = await nftContract.isApprovedForAll(\n          account,\n          NFT_MARKET_ADDRESS\n        );\n        if (!isApproved) {\n          const approve = await nftContract.setApprovalForAll(\n            NFT_MARKET_ADDRESS,\n            true\n          );\n          await approve.wait();\n        }\n        const res = await contract.endAuction(tokenId);\n        res\n          .wait()\n          .then(async (result) => {\n            await firestore\n              .collection(\"nfts\")\n              .doc(id)\n              .update({\n                saleType: \"fix\",\n                time: 0,\n                auctionLength: null,\n                auctionCreator: null,\n                isSale: false,\n                owner:\n                  auctionInfo.bidder !==\n                  \"0x0000000000000000000000000000000000000000\"\n                    ? auctionInfo.bidder\n                    : auctionInfo.Creator,\n              });\n            dispatchNftItem({\n              ...item,\n              saleType: \"fix\",\n              time: 0,\n              auctionLength: null,\n              auctionCreator: null,\n              isSale: false,\n              owner:\n                auctionInfo.bidder !==\n                \"0x0000000000000000000000000000000000000000\"\n                  ? auctionInfo.bidder\n                  : auctionInfo.Creator,\n            });\n            setIsSale(false);\n\n            if (\n              auctionInfo.bidder !==\n              \"0x0000000000000000000000000000000000000000\"\n            )\n              firestore.collection(\"history\").add({\n                userId: auctionInfo.bidder,\n                oldUserId: auctionInfo.Creator,\n                nftId: id,\n                actionType: 1,\n                price: item.price,\n                time: moment().valueOf(),\n              });\n            firestore.collection(\"history\").add({\n              userId: account,\n              oldUserId: account,\n              nftId: id,\n              actionType: 4,\n              price: item.price,\n              time: moment().valueOf(),\n            });\n            getHistory(id);\n            setAuctionInfo(null);\n            setIsAccept(false);\n            toast.success(\"Auction is completed\");\n            setIsProcessing(false);\n          })\n          .catch((err) => {\n            toast.error(\"Failed to complete auction\");\n            setIsProcessing(false);\n          });\n      } catch (err) {\n        toast.error(\"Failed to complete auction\");\n        setIsProcessing(false);\n      }\n    } else {\n      toast.error(\"Please connect your wallet first.\");\n    }\n  };\n\n  useEffect(() => {\n    updatePrice(item.paymentType);\n  }, [item.paymentType]);\n\n  const updatePrice = (_newPaymentType) => {\n    const token = _newPaymentType === \"BNB\" ? \"binancecoin\" : \"flokinomics\";\n    axios\n      .get(\n        `https://api.coingecko.com/api/v3/simple/price?ids=${token}&vs_currencies=usd`\n      )\n      .then((res) => {\n        console.log(\"res:\", res);\n        if (res.status === 200) {\n          const cur_rate = res.data[token]?.usd;\n          if (cur_rate) setRate(cur_rate);\n        }\n      })\n      .catch((err) => console.log(err));\n  };\n  useEffect(() => {\n    getItem(id);\n    getHistory(id);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [active, id]);\n\n  useEffect(() => {\n    if (parseFloat(auctionInfo?.amount) > 0) setCurrentPrice(item.price * 1.1);\n    else setCurrentPrice(item.price);\n  }, [item.price, auctionInfo]);\n\n  const renderer = ({ days, hours, minutes, seconds, completed }) => {\n    return (\n      <div\n        style={{\n          textAlign: \"center\",\n          color: \"white\",\n          marginTop: 10,\n          fontSize: 18,\n        }}\n      >\n        {days} Days {hours}:{minutes}:{seconds}\n      </div>\n    );\n  };\n  // const sss = async () => {\n  //   console.log(active);\n  //   if (active) {\n  //     const contract = new Contract(\n  //       \"0xed5E765Ac8702eF748f058e6828A1106aE2996AE\",\n  //       NFT_INFO.abi,\n  //       library.getSigner()\n  //     );\n\n  //     const nftContract = new Contract(\n  //       \"0xA96E7654330f2C8cF1acD07d3600BAeD6Bf7a417\",\n  //       NFT_INFO.abi,\n  //       library.getSigner()\n  //     );\n  //     let a = [],\n  //       b = [],\n  //       c = [],\n  //       d = [],\n  //       e = [],\n  //       f = [];\n  //     // console.log(await nftContract.ownerOf(417));\n  //     for (let i = 401; i < 420; i++) {\n  //       // const ccreator = await nftContract.creatorMap(i);\n  //       // const cprice = await nftContract.price(i);\n  //       // const cowner = await nftContract.ownerMap(i);\n  //       // // const bowner = await contract.ownerOf(i);\n  //       // const croyalty = await nftContract.royaltyMap(i);\n  //       // const clist = await nftContract.listedMap(i);\n  //       // const uris = await nftContract.tokenURI(i);\n  //       // console.log(uris);\n  //       // a.push(ccowner);\n  //       const res = await firestore\n  //         .collection(\"nfts\")\n  //         .where(\"tokenId\", \"==\", i)\n  //         .get();\n  //       let ccowner;\n  //       let uris;\n  //       if (res.docs.length > 0) {\n  //         console.log(\"exist\");\n  //         ccowner = (await res.docs[0].data()).owner;\n  //         uris = (await res.docs[0].data()).tokenURI;\n  //         b.push(ccowner);\n  //         a.push(uris);\n  //         c.push(BigNumber.from(i));\n  //       } else {\n  //         ccowner = \"\";\n  //         uris = \"\";\n  //       }\n  //       // a.push(i);\n  //       // b.push(ccreator);\n  //       // c.push(cprice);\n  //       // d.push(cowner);\n  //       // e.push(croyalty);\n  //       // f.push(false);\n  //       // const tt = new BigNumber();\n  //       // console.log(\n  //       //   i,\n  //       //   // clist,\n  //       //   cowner,\n  //       //   // bowner,\n  //       //   // ccowner,\n  //       //   // cowner === bowner && cowner === ccowner\n  //       // );\n  //     }\n  //     // console.log(c, a, b);\n  //     // await contract.addCreatorMap(false, a, b, c, d, e, f);\n  //     console.log(\"done\");\n  //     await contract.mintAll(c, b, a);\n  //   }\n  // };\n  // const sss = async () => {\n  //   if (active) {\n  //     // const contract = new Contract(\n  //     //   \"0xA96E7654330f2C8cF1acD07d3600BAeD6Bf7a417\",\n  //     //   NFT_INFO.abi,\n  //     //   library.getSigner()\n  //     // );\n\n  //     const nftContract = new Contract(\n  //       \"0xA96E7654330f2C8cF1acD07d3600BAeD6Bf7a417\",\n  //       Market_INFO.abi,\n  //       library.getSigner()\n  //     );\n  //     const ress = await firestore.collection(\"nfts\").get();\n  //     console.log(ress);\n  //     for (let i = 0; i < ress.docs.length; i++) {\n  //       const temp = await ress.docs[i].data();\n  //       if (!temp.time)\n  //         await firestore\n  //           .collection(\"nfts\")\n  //           .doc(ress.docs[i].id)\n  //           .update({ time: 0 });\n  //       console.log(temp.time);\n  //     }\n  //     // console.log(contract);\n  //     // let a = [],\n  //     //   b = [],\n  //     //   c = [];\n  //     // for (let i = 181; i < 244; i++) {\n  //     //   const res = await firestore\n  //     //     .collection(\"nfts\")\n  //     //     // .where(\"tokenId\", \"==\", i)\n  //     //     .get();\n  //     //   let ccowner, uris;\n  //     //   if (res.docs.length > 0) {\n  //     //     console.log(\"exist\");\n  //     //     const temp = await res.docs[0].data();\n  //     //     ccowner = temp.owner;\n  //     //     uris = temp.tokenURI;\n  //     //     a.push(ccowner);\n  //     //     b.push(uris);\n  //     //     // c.push(BigNumber.from(i));\n  //     //   } else {\n  //     //     ccowner = \"\";\n  //     //     uris = \"\";\n  //     //     console.log(i);\n  //     //   }\n  //     // }\n  //     // console.log(c, a, b);\n  //     // await contract.mintAll(c, a, b);\n  //     // console.log(\"done\");\n  //   }\n  // };\n\n  return (\n    <main className=\"main\">\n      <div className=\"container\">\n        <div className=\"row row--grid\">\n          {/* <!-- breadcrumb --> */}\n          <div className=\"col-12\">\n            <BreadCrumb data={breadcrumb} />\n            {/* <button onClick={sss}>\n              <span>sdfsdfsdfsd</span>\n            </button> */}\n          </div>\n          {/* <!-- end breadcrumb --> */}\n\n          <div className=\"col-12\">\n            <div className=\"main__title main__title--page\">\n              <h1>{item.name}</h1>\n            </div>\n          </div>\n          <div className=\"col-12 d-flex align-items-end justify-content-end\">\n            <p className=\"sign__text mb-0 d-flex justify-content-end mr-2\">\n              <span className=\"mt-0\">For sale:</span>\n            </p>\n            <Switch\n              onChange={showUpdates}\n              checked={isSale}\n              disabled={item.owner !== account || item.time > 0}\n              height={26}\n            />\n          </div>\n        </div>\n\n        <div className=\"row\">\n          {/* <!-- content --> */}\n          <div className=\"col-12 col-md-5  cardAssetPreview\">\n            <AssetItem data={item} />\n          </div>\n          {/* <!-- end content --> */}\n\n          {/* <!-- sidebar --> */}\n          <div className=\"col-12 col-md-7 bleuFrosted cardAssetDetails\">\n            <div className=\"asset__info\">\n              <div className=\"asset__desc\">\n                <span class=\"cardAssetDetailsLabel\">Description</span>\n                <p>{item.description}</p>\n              </div>\n\n              <AssetAuthor data={item} />\n\n              <div className=\"itemActivity\">\n                <Tabs\n                  historyData={historyData}\n                  bidsData={bidsData}\n                  item={item}\n                  docId={id}\n\n                />\n              </div>\n\n              <div className=\"asset__wrap\">\n                <div className=\"asset__timer\">\n                  {item.saleType !== \"fix\" &&\n                    (item.time > 0 ? (\n                      <>\n                        <span>\n                          <svg\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            viewBox=\"0 0 24 24\"\n                          >\n                            <path d=\"M18.3,8.59l.91-.9a1,1,0,0,0-1.42-1.42l-.9.91a8,8,0,0,0-9.79,0l-.91-.92A1,1,0,0,0,4.77,7.69l.92.91A7.92,7.92,0,0,0,4,13.5,8,8,0,1,0,18.3,8.59ZM12,19.5a6,6,0,1,1,6-6A6,6,0,0,1,12,19.5Zm-2-15h4a1,1,0,0,0,0-2H10a1,1,0,0,0,0,2Zm3,6a1,1,0,0,0-2,0v1.89a1.5,1.5,0,1,0,2,0Z\" />\n                          </svg>{\" \"}\n                          Auction ends in\n                        </span>\n                        <div className=\"card__clock\">\n                          <Countdown date={item.time} renderer={renderer} />\n                        </div>\n                      </>\n                    ) : (\n                      <div className=\"sign__group\">\n                        <label className=\"sign__label\" htmlFor=\"length\">\n                          Auction Length\n                        </label>\n                        <select\n                          id=\"length\"\n                          name=\"length\"\n                          className=\"sign__select\"\n                          value={auctionLength}\n                          disabled\n                          onChange={(e) => setAuctionLength(e.target.value)}\n                        >\n                          <option value=\"12\">12 hours</option>\n                          <option value=\"24\">24 hours</option>\n                          <option value=\"48\">2 days</option>\n                          <option value=\"72\">3 days</option>\n                          <option value=\"168\">7 days</option>\n                        </select>\n                      </div>\n                    ))}\n                </div>\n\n                <div className=\"asset__price\">\n                  <span>\n                    {item.saleType === \"fix\" ? \"Price\" : \"Minimum bid\"}\n                  </span>\n                  {item.isSale && (\n                    <span>\n                      {parseFloat(currentPrice).toFixed(2)} {item.paymentType}{\" \"}\n                      <br />\n                      (${(parseFloat(currentPrice) * rate).toFixed(2)} USD)\n                    </span>\n                  )}\n                  {item.isSale && (\n                    <div className=\"pie-chart\">\n                      <div className=\"relative\">\n                        <ApexCharts\n                          options={chartOption}\n                          series={[\n                            item.royalties,\n                            item.paymentType === \"BNB\" ? 5 : 3,\n                            100 -\n                              item.royalties -\n                              (item.paymentType === \"BNB\" ? 5 : 3),\n                          ]}\n                          type=\"pie\"\n                          width={380}\n                        />\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </div>\n              {/* <!-- actions --> */}\n              {isSale && (\n                <>\n                  <div className=\"sign__group filter__checkboxes mb-1 mt-5\">\n                    <input\n                      id=\"private\"\n                      type=\"checkbox\"\n                      name=\"private\"\n                      checked={isAccept}\n                      onChange={() => {\n                        setIsAccept(!isAccept);\n                      }}\n                    />\n                    <label className=\"sign__label\" htmlFor=\"private\">\n                      I agree to the{\" \"}\n                      <a\n                        href=\"assets/terms/Terms and Conditions for Purchasers.pdf\"\n                        target=\"_blank\"\n                        className=\"ml-1 linkTerms\"\n                      >\n                        Terms and conditions\n                      </a>\n                    </label>\n                  </div>\n                  {isAccept && (\n                    <div className=\"asset__btns\">\n                      {item.saleType === \"fix\" ? (\n                        <button\n                          className=\"asset__btn asset__btn asset__btn--clr mx-auto\"\n                          onClick={buyNft}\n                        >\n                          {isProcessing ? \"Waiting...\" : \"Buy\"}\n                        </button>\n                      ) : item.time > 0 ? (\n                        <>\n                          {!(auctionInfo?.Creator === account) && (\n                            <button\n                              disabled={\n                                isProcessing ||\n                                item.time < moment().valueOf() ||\n                                auctionInfo?.Creator === account ||\n                                auctionInfo?.bidder === account\n                              }\n                              className=\"asset__btn asset__btn--full asset__btn--clr open-modal mr-0\"\n                              onClick={() => {\n                                setIsBid(true);\n                              }}\n                            >\n                              Place a bid\n                            </button>\n                          )}\n                          {auctionInfo?.Creator === account &&\n                            item.time > moment().valueOf() &&\n                            (parseInt(auctionInfo?.amount) === 0 ? (\n                              <button\n                                disabled={isProcessing}\n                                className=\"asset__btn asset__btn--full asset__btn--clr\"\n                                onClick={cancelAuction}\n                              >\n                                {isProcessing ? \"Waiting...\" : \"Cancel Auction\"}\n                              </button>\n                            ) : (\n                              <button\n                                disabled={true}\n                                className=\"asset__btn asset__btn--full asset__btn--clr\"\n                              >\n                                Auction is started\n                              </button>\n                            ))}\n                          {(auctionInfo?.Creator === account ||\n                            auctionInfo?.bidder === account) &&\n                            item.time < moment().valueOf() && (\n                              <button\n                                disabled={isProcessing}\n                                className=\"asset__btn asset__btn--full asset__btn--clr\"\n                                onClick={endAuction}\n                              >\n                                {isProcessing ? \"Waiting...\" : \"End Auction\"}\n                              </button>\n                            )}\n                        </>\n                      ) : (\n                        item.owner === account && (\n                          <button\n                            disabled={isProcessing}\n                            className=\"asset__btn asset__btn--full asset__btn--clr\"\n                            onClick={startAuction}\n                          >\n                            {isProcessing ? \"Waiting...\" : \"Start Auction\"}\n                          </button>\n                        )\n                      )}\n                    </div>\n                  )}\n                </>\n              )}\n              {/* <!-- end actions --> */}\n            </div>\n          </div>\n          {/* <!-- end sidebar --> */}\n        </div>\n      </div>\n      {isBid && (\n        <div className=\"mfp-wrap\">\n          <div className=\"mfp-container\">\n            <div\n              className=\"mfp-backdrop\"\n              onClick={() => {\n                setIsBid(false);\n              }}\n            ></div>\n            <div className=\"zoom-anim-dialog mfp-preloader modal modal--form\">\n              <button\n                className=\"modal__close\"\n                onClick={() => {\n                  setIsBid(false);\n                }}\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                  <path d=\"M13.41,12l4.3-4.29a1,1,0,1,0-1.42-1.42L12,10.59,7.71,6.29A1,1,0,0,0,6.29,7.71L10.59,12l-4.3,4.29a1,1,0,0,0,0,1.42,1,1,0,0,0,1.42,0L12,13.41l4.29,4.3a1,1,0,0,0,1.42,0,1,1,0,0,0,0-1.42Z\" />\n                </svg>\n              </button>\n              <h4 className=\"sign__title\">Place a bid</h4>\n              <div className=\"sign__group sign__group--row\">\n                <label className=\"sign__label\" htmlFor=\"placebid\">\n                  Your Highest bid\n                </label>\n                <input\n                  id=\"placebid\"\n                  type=\"number\"\n                  value={price}\n                  placeholder={`Place your highest bid in ${item.paymentType}.`}\n                  className=\"sign__input\"\n                  onChange={(e) => setPrice(e.target.value)}\n                />\n                <span className=\"sign__text sign__text--small\">\n                  Price in USD : {(price * rate).toFixed(2)}\n                </span>\n                <span className=\"sign__text sign__text--small\">\n                  Minimum Bid : {currentPrice.toFixed(2)}\n                </span>\n              </div>\n              <button\n                className=\"sign__btn\"\n                onClick={bidNft}\n                disabled={isProcessing}\n              >\n                {isProcessing ? \"Waiting...\" : \"Take a bid\"}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n      {showUpdate && (\n        <div className=\"mfp-wrap\">\n          <div className=\"mfp-container\">\n            <div className=\"mfp-backdrop\" onClick={showUpdates}></div>\n            <div className=\"zoom-anim-dialog mfp-preloader modal modal--form\">\n              <button className=\"modal__close\" onClick={showUpdates}>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                  <path d=\"M13.41,12l4.3-4.29a1,1,0,1,0-1.42-1.42L12,10.59,7.71,6.29A1,1,0,0,0,6.29,7.71L10.59,12l-4.3,4.29a1,1,0,0,0,0,1.42,1,1,0,0,0,1.42,0L12,13.41l4.29,4.3a1,1,0,0,0,1.42,0,1,1,0,0,0,0-1.42Z\" />\n                </svg>\n              </button>\n              <h4 className=\"sign__title\">List For Sale</h4>\n              <div className=\"sign__group sign__group--row\">\n                <label className=\"sign__label\" htmlFor=\"saleType\">\n                  Sale Type:\n                </label>\n                <select\n                  id=\"saleType\"\n                  name=\"saleType\"\n                  className=\"sign__select height-sm mt-0 mb-4\"\n                  value={saleType}\n                  onChange={(e) => {\n                    setNewPrice(item.price);\n                    setSaleType(e.target.value);\n                  }}\n                >\n                  <option value=\"fix\">Fixed</option>\n                  <option value=\"auction\">Auction</option>\n                </select>\n                {saleType === \"auction\" && (\n                  <div className=\"sign__group\">\n                    <label className=\"sign__label\" htmlFor=\"length\">\n                      Auction Length\n                    </label>\n                    <select\n                      id=\"length\"\n                      name=\"length\"\n                      className=\"sign__select\"\n                      value={auctionLength}\n                      onChange={(e) => setAuctionLength(e.target.value)}\n                    >\n                      <option value=\"12\">12 hours</option>\n                      <option value=\"24\">24 hours</option>\n                      <option value=\"48\">2 days</option>\n                      <option value=\"72\">3 days</option>\n                      <option value=\"168\">7 days</option>\n                    </select>\n                  </div>\n                )}\n                <label className=\"sign__label\" htmlFor=\"updatePrice\">\n                  {saleType === \"fix\" ? \"Update\" : \"First\"} Price:\n                </label>\n                <input\n                  id=\"updatePrice\"\n                  type=\"number\"\n                  name=\"updatePrice\"\n                  className=\"sign__input height-sm\"\n                  placeholder=\"Type update price.\"\n                  value={newPrice || 0}\n                  onChange={(e) => {\n                    setNewPrice(e.target.value);\n                  }}\n                />\n              </div>\n              <button\n                className=\"sign__btn\"\n                onClick={() => {\n                  updateSale(false);\n                }}\n                disabled={isProcessing}\n              >\n                {isProcessing ? \"Waiting...\" : \"List for sale\"}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </main>\n  );\n}\n\nexport default Item;\n"]},"metadata":{},"sourceType":"module"}