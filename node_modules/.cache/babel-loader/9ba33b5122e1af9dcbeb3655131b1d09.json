{"ast":null,"code":"var _jsxFileName = \"/home/hp/Desktop/Bluefi/bleufi-frontend/src/pages/Asset/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport BreadCrumb from \"components/BreadCrumb\";\nimport AssetItem from \"components/AssetItem\";\nimport AssetAuthor from \"components/AssetAuthor\";\nimport ApexCharts from \"react-apexcharts\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport Market_INFO from \"artifacts/contracts/Marketplace.sol/FlokinomicsNFTMarketplace.json\";\nimport NFT_INFO from \"artifacts/contracts/FlokinomicsNFT.sol/FlokinomicsNFT.json\";\nimport { NFT_ADDRESS, CONTRACT_ADDRESS, PAYMENT_TOKEN, NFT_MARKET_ADDRESS, NFT_CONTRACT_ADDRESS } from \"../../constants\";\nimport { parseUnits } from \"@ethersproject/units\";\nimport Axios from \"axios\";\nimport Tabs from \"./Tabs\";\nimport Switch from \"react-switch\";\nimport \"styles/activity.css\";\nimport { useParams } from \"react-router-dom\";\nimport { firestore } from \"../../firebase\";\nimport { toast } from \"react-toastify\";\nimport Countdown from \"react-countdown\";\nimport moment from \"moment\";\nimport axios from \"axios\"; // import { BigNumber } from \"ethers\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst breadcrumb = [{\n  title: \"Home\",\n  page: \"/\"\n}, {\n  title: \"Item\",\n  page: \"/item\"\n}];\n\nfunction Item() {\n  _s();\n\n  const {\n    library,\n    active,\n    account\n  } = useWeb3React();\n  const {\n    id\n  } = useParams();\n  const [price, setPrice] = useState(0);\n  const [user, setUser] = useState({\n    account: account,\n    avatar: \"assets/img/avatars/avatar.jpg\",\n    ownerAvatar: \"assets/img/avatars/avatar.jpg\",\n    imageCover: \"/assets/img/bg/bg.png\",\n    firstName: \"User\",\n    lastName: \"\",\n    nickName: \"@user\",\n    bio: \"\",\n    twitter: \"\",\n    telegram: \"\",\n    instagram: \"\",\n    subscribe: \"\",\n    followers: []\n  });\n  const [currentPrice, setCurrentPrice] = useState(0);\n  const [auctionLength, setAuctionLength] = useState(\"12\");\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [item, setItem] = useState({\n    name: \"\",\n    description: \"\",\n    owner: account || null,\n    time: 0,\n    saleType: \"fix\",\n    likes: [],\n    price: 0,\n    paymentType: \"BNB\"\n  });\n  const [isSale, setIsSale] = useState(false);\n  const [isOwner, setIsOwner] = useState(false);\n  const [isBid, setIsBid] = useState(false);\n  const [isAccept, setIsAccept] = useState(false);\n  const [auctionInfo, setAuctionInfo] = useState(null);\n  const [historyData, setHistoryData] = useState([]);\n  const [bidsData, setBidsData] = useState([]);\n  const [rate, setRate] = useState(10);\n  const [showUpdate, setShowUpdate] = useState(false);\n  const [newPrice, setNewPrice] = useState(item.price);\n  const [saleType, setSaleType] = useState(item.saleType);\n  const [chartOption] = useState({\n    chart: {\n      width: 380,\n      type: \"pie\"\n    },\n    labels: [\"Creator's Royalty\", \"Platform fee\", \"Seller\"],\n    theme: {\n      monochrome: {\n        enabled: true,\n        color: \"#0000ff\"\n      }\n    },\n    responsive: [{\n      breakpoint: 480,\n      options: {\n        chart: {\n          id: \"pie-chart\",\n          width: 200\n        },\n        legend: {\n          position: \"bottom\"\n        }\n      }\n    }]\n  });\n  const dispatch = useDispatch();\n\n  const dispatchNftItem = payload => {\n    dispatch({\n      type: \"SET_SELECTED\",\n      payload\n    });\n    setItem(payload);\n    setNewPrice(payload.price);\n    setSaleType(payload.saleType);\n  };\n\n  const getHistory = async item_id => {\n    const res = await firestore.collection(\"history\").where(\"nftId\", \"==\", item_id).get();\n    let nft_history = [];\n\n    for (let i = 0; i < res.docs.length; i++) {\n      const x = res.docs[i];\n      const temp = x.data();\n      const user_info = (await firestore.collection(\"users\").doc(temp.userId).get()).data();\n      const kcsPrice = temp.price;\n      const timespace = parseInt((moment().valueOf() - temp.time) / 60000);\n      const timeAgo = timespace < 1 ? \"less than a minute\" : timespace < 60 ? `${timespace} min ago` : timespace < 24 * 60 ? `${parseInt(timespace / 60)} hrs ago` : moment(temp.time).format(\"YYYY/MM/DD\");\n      nft_history.push({\n        avatar: (user_info === null || user_info === void 0 ? void 0 : user_info.avatar) || \"/assets/img/avatars/avatar.jpg\",\n        kcsPrice,\n        timeAgo,\n        nickName: user_info === null || user_info === void 0 ? void 0 : user_info.nickName,\n        verified: true,\n        time: temp.time,\n        actionType: temp.actionType\n      });\n    }\n\n    const history_data = nft_history.sort((a, b) => b.time - a.time);\n    setHistoryData(history_data);\n    setBidsData(history_data.filter(e => e.actionType > 1));\n  };\n\n  const getItem = async item_id => {\n    const res = await firestore.collection(\"nfts\").doc(item_id).get();\n    let nft_item = res.data();\n    console.log(nft_item.owner);\n    console.log(account);\n    setIsOwner(nft_item.owner);\n    let nftInfo = {\n      data: {}\n    };\n\n    try {\n      nftInfo = await Axios.get(nft_item.tokenURI);\n    } catch (err) {\n      console.log(err);\n    }\n\n    dispatchNftItem({\n      id,\n      ...user,\n      ...nft_item,\n      ...nftInfo.data\n    });\n\n    if (active) {\n      const contract = new Contract(NFT_MARKET_ADDRESS, Market_INFO.abi, library.getSigner()); // const cur_price = await contract.listedMap(nft_item.tokenId);\n      // console.log(cur_price);\n      // const prov = ethers.getDefaultProvider();\n      // const pp = await contract.balanceOf((await prov.getSigners())[0].address);\n      // const bal = await prov.getBalance(account);\n\n      if ((nft_item === null || nft_item === void 0 ? void 0 : nft_item.tokenId) !== 0) {\n        const auction_info = await contract.auctions(nft_item.tokenId);\n        setAuctionInfo(auction_info);\n      }\n    }\n\n    setIsSale(nft_item === null || nft_item === void 0 ? void 0 : nft_item.isSale);\n  };\n\n  const updateSale = async function () {\n    let lock = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    setIsProcessing(true);\n\n    try {\n      const userExist = (await firestore.collection(\"users\").doc(account).get()).exists;\n\n      if (!userExist) {\n        // await creatProfile(account);\n        toast.error(\"Please create your profile first.\");\n        setIsProcessing(false);\n        return;\n      }\n\n      const contract = new Contract(NFT_MARKET_ADDRESS, Market_INFO.abi, library.getSigner());\n      const nftContract = new Contract(NFT_ADDRESS, NFT_INFO.abi, library.getSigner());\n\n      if (item.isSale) {\n        if (item.tokenId !== 0) {\n          const res = await contract.closeTrade(item.tokenId);\n          await res.wait();\n        }\n\n        await firestore.collection(\"nfts\").doc(id).update({\n          isSale: false,\n          time: 0,\n          saleType: \"fix\"\n        });\n        setItem({ ...item,\n          isSale: false,\n          time: 0,\n          saleType: \"fix\"\n        });\n        toast.success(\"Delisted from marketplace successfully\");\n        setShowUpdate(false);\n        setIsProcessing(false);\n      } else {\n        if (newPrice <= 0) {\n          toast.error(\"Price should not be zero.\");\n          setIsProcessing(false);\n          return;\n        }\n\n        if (saleType === \"auction\") {\n          await startAuction();\n        } else {\n          if (item.tokenId !== 0) {\n            const isApproved = await nftContract.isApprovedForAll(account, NFT_MARKET_ADDRESS);\n\n            if (!isApproved) {\n              const approve = await nftContract.setApprovalForAll(NFT_MARKET_ADDRESS, true);\n              await approve.wait();\n            }\n\n            const res = await contract.openTrade(item.tokenId, parseUnits(newPrice.toString()), item.paymentType);\n            await res.wait();\n          }\n\n          await firestore.collection(\"nfts\").doc(id).update({\n            price: parseFloat(newPrice),\n            saleType: \"fix\",\n            isSale: true,\n            time: 0\n          });\n          setItem({ ...item,\n            price: parseFloat(newPrice),\n            saleType: \"fix\",\n            isSale: true,\n            time: 0\n          });\n          toast.success(\"Listed on marketplace successfully\");\n          setShowUpdate(false);\n          setIsProcessing(false);\n        }\n      }\n    } catch (err) {\n      setIsSale(prev => !prev);\n      setShowUpdate(false);\n      toast.error(\"Fail to update: \" + err);\n      setIsProcessing(false);\n    }\n  };\n\n  const showUpdates = () => {\n    if (isSale && !showUpdate) updateSale(true);\n    setShowUpdate(!isSale);\n    setIsSale(prev => !prev);\n  }; // const creatProfile = async (user_account) => {\n  //   const author = {\n  //     avatar: \"/assets/img/avatars/avatar.jpg\",\n  //     imageCover: \"/assets/img/bg/bg.png\",\n  //     ownerAvatar: \"/assets/img/avatars/avatar.jpg\",\n  //     firstName: \"User\",\n  //     lastName: \"\",\n  //     nickName: \"@user\",\n  //     account: user_account,\n  //     bio: \"\",\n  //     twitter: \"\",\n  //     telegram: \"\",\n  //     instagram: \"\",\n  //     subscribe: \"\",\n  //     followers: [],\n  //   };\n  //   await firestore.collection(\"users\").doc(user_account).set(author);\n  // };\n\n\n  const dispatchUser = async user_id => {\n    if (user_id) {\n      const userInfo = (await firestore.collection(\"users\").doc(user_id).get()).data();\n      dispatch({\n        type: \"SET_PROFILE\",\n        userInfo\n      });\n      setUser(userInfo);\n    }\n  };\n\n  useEffect(() => {\n    dispatchUser(account); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [account]);\n  console.log(parseUnits(item.price.toString()));\n\n  const buyNft = async () => {\n    if (active) {\n      setIsProcessing(true);\n\n      try {\n        const userExist = (await firestore.collection(\"users\").doc(account).get()).exists;\n\n        if (!userExist) {\n          // await creatProfile(account);\n          toast.error(\"Please create your profile first.\");\n          setIsProcessing(false);\n          return;\n        }\n\n        const contract = new Contract(CONTRACT_ADDRESS, Market_INFO.abi, library.getSigner());\n        const nftContract = new Contract(NFT_CONTRACT_ADDRESS, NFT_INFO.abi, library.getSigner());\n        const {\n          tokenId,\n          tokenURI,\n          price,\n          id,\n          royalties,\n          paymentType,\n          creator\n        } = item;\n        const isApproved = await nftContract.isApprovedForAll(account, NFT_MARKET_ADDRESS);\n\n        if (!isApproved) {\n          const approve = await nftContract.setApprovalForAll(NFT_MARKET_ADDRESS, true);\n          await approve.wait();\n        } // const approve = await nftContract.approve(\n        //   CONTRACT_ADDRESS,\n        //   parseUnits(price.toString())\n        // );\n        // await approve.wait();\n        // const tokenContract = new Contract(\n        //   PAYMENT_TOKEN[paymentType].tokenAddress,\n        //   PAYMENT_TOKEN[paymentType].abi,\n        //   library.getSigner()\n        // );\n        // const approve = await tokenContract.approve(\n        //   NFT_MARKET_ADDRESS,\n        //   parseUnits(price.toString())\n        // );\n        // await approve.wait();\n        //console.log(isApproved);\n        // if (!isApproved) {\n        //   const approve = await nftContract.setApprovalForAll(\n        //     NFT_MARKET_ADDRESS,\n        //     true\n        //   );\n        //   await approve.wait();\n        // }\n\n\n        let res; // contract.setTokenAddress(\n        //   paymentType,\n        //   PAYMENT_TOKEN[paymentType].tokenAddress,\n        //   NFT_ADDRESS\n        // );\n\n        if (tokenId === 0) {\n          if (paymentType === \"BNB\") {\n            console.log(JSON.stringify({\n              tokenId,\n              creator,\n              price: parseUnits(price.toString()),\n              paymentType,\n              royalties,\n              tokenURI,\n              from: account,\n              value: parseUnits(price.toString())\n            }), null, 2);\n            res = await contract.buyNew(tokenId, creator, parseUnits(price.toString()), paymentType, royalties, tokenURI, {\n              from: account,\n              value: parseUnits(price.toString())\n            }); // res = await contract.buy(\n            //   tokenId,\n            //   parseUnits(price.toString()),\n            //   paymentType,\n            //   { from: account, value: parseUnits(price.toString()) }\n            // );\n          } else {\n            const tokenContract = new Contract(PAYMENT_TOKEN[paymentType].tokenAddress, PAYMENT_TOKEN[paymentType].abi, library.getSigner());\n            const approve = await tokenContract.approve(NFT_CONTRACT_ADDRESS, parseUnits(price.toString()));\n            await approve.wait();\n            res = await contract.buyNew(tokenId, creator, parseUnits(price.toString()), paymentType, royalties, tokenURI, {\n              from: account,\n              value: parseUnits(price.toString())\n            });\n          }\n        } else {\n          if (paymentType === \"BNB\") {\n            res = await contract.buy(tokenId, parseUnits(price.toString()), paymentType, {\n              from: account,\n              value: parseUnits(price.toString())\n            });\n          } else {\n            const tokenContract = new Contract(PAYMENT_TOKEN[paymentType].tokenAddress, PAYMENT_TOKEN[paymentType].abi, library.getSigner());\n            const approve = await tokenContract.approve(NFT_MARKET_ADDRESS, parseUnits(price.toString()));\n            await approve.wait();\n            res = await contract.buy(tokenId, parseUnits(price.toString()), paymentType, {\n              from: account,\n              value: parseUnits(price.toString())\n            });\n          }\n        }\n\n        res.wait().then(async result => {\n          console.log(result);\n          let nftId = 0;\n          const events = result === null || result === void 0 ? void 0 : result.events;\n\n          if (events.length > 0) {\n            nftId = events[events.length - 1].args[\"nftID\"].toString();\n          }\n\n          await firestore.collection(\"nfts\").doc(id).update({\n            tokenId: parseInt(nftId),\n            isSale: false,\n            owner: account,\n            time: 0,\n            saleType: \"fix\"\n          });\n          const old_owner = item.owner;\n          dispatchNftItem({ ...item,\n            tokenId: parseInt(nftId),\n            isSale: false,\n            owner: account,\n            time: 0,\n            saleType: \"fix\"\n          });\n          setIsSale(false);\n          firestore.collection(\"history\").add({\n            userId: account,\n            oldUserId: old_owner,\n            nftId: id,\n            actionType: 1,\n            price: parseFloat(price),\n            time: moment().valueOf()\n          });\n          getHistory(id);\n          setIsProcessing(false);\n          setIsAccept(false);\n          toast.success(\"You bought a NFT successfully\");\n        }).catch(err => {\n          toast.error(\"Failed to Buy\");\n          setIsProcessing(false);\n        });\n      } catch (err) {\n        var _err$data;\n\n        console.log(err);\n        toast.error((err === null || err === void 0 ? void 0 : (_err$data = err.data) === null || _err$data === void 0 ? void 0 : _err$data.message) ? err.data.message : \"Failed to buy NFT\");\n        setIsProcessing(false);\n      }\n    } else {\n      toast.error(\"Please connect your wallet first.\");\n      setIsProcessing(false);\n    }\n  };\n\n  const bidNft = async () => {\n    if (active) {\n      if (price < item.price || parseFloat(auctionInfo.amount) > 0 && price < item.price * 1.1) {\n        toast.error(\"Bid amount must not less than minimum bid\");\n        return;\n      }\n\n      setIsProcessing(true);\n\n      try {\n        const userExist = (await firestore.collection(\"users\").doc(account).get()).exists;\n\n        if (!userExist) {\n          // await creatProfile(account);\n          toast.error(\"Please create your profile first.\");\n          setIsProcessing(false);\n          return;\n        }\n\n        const contract = new Contract(NFT_MARKET_ADDRESS, Market_INFO.abi, library.getSigner());\n        const {\n          tokenId,\n          paymentType\n        } = item;\n        let res;\n\n        if (paymentType === \"BNB\") {\n          res = await contract.createBid(tokenId, paymentType, parseUnits(price.toString()), {\n            from: account,\n            value: parseUnits(price.toString())\n          });\n        } else {\n          res = await contract.createBid(tokenId, paymentType, parseUnits(price.toString()), {\n            from: account,\n            value: parseUnits(price.toString())\n          });\n        }\n\n        res.wait().then(async result => {\n          const auction_info = await contract.auctions(tokenId);\n          await firestore.collection(\"nfts\").doc(id).update({\n            price: parseFloat(price),\n            // owner: account,\n            saleType: \"auction\",\n            time: (parseInt(auction_info.duration) + parseInt(auction_info.firstBidTime)) * 1000\n          });\n          dispatchNftItem({ ...item,\n            price: parseFloat(price),\n            // owner: account,\n            saleType: \"auction\",\n            time: (parseInt(auction_info.duration) + parseInt(auction_info.firstBidTime)) * 1000\n          });\n          setAuctionInfo(null);\n          setIsAccept(false);\n          toast.success(\"You have placed bid this auction\");\n          firestore.collection(\"history\").add({\n            userId: account,\n            oldUserId: account,\n            nftId: id,\n            actionType: 2,\n            price: parseFloat(price),\n            time: moment().valueOf()\n          });\n          getHistory(id);\n          setIsBid(false);\n          setIsProcessing(false);\n        }).catch(err => {\n          toast.error(\"Failed to bid auction\");\n          setIsBid(false);\n          setIsProcessing(false);\n        });\n      } catch (err) {\n        toast.error(\"Failed to bid auction\");\n        setIsBid(false);\n        setIsProcessing(false);\n      }\n    } else {\n      toast.error(\"Please connect your wallet first.\");\n    }\n  };\n\n  const startAuction = async () => {\n    if (active) {\n      setIsProcessing(true);\n\n      try {\n        const contract = new Contract(NFT_MARKET_ADDRESS, Market_INFO.abi, library.getSigner());\n        const nftContract = new Contract(NFT_ADDRESS, NFT_INFO.abi, library.getSigner());\n        await nftContract.nftContract;\n        const {\n          tokenId,\n          tokenURI,\n          paymentType\n        } = item;\n        const auction_length = parseInt(auctionLength) * 3600; // const auction_length = 1200;\n        // const isApproved = await nftContract.isApprovedForAll(\n        //   account,\n        //   NFT_MARKET_ADDRESS\n        // );\n        // console.log(\n        //   \"isApproved\",\n        //   isApproved,\n        //   newPrice,\n        //   auction_length,\n        //   account\n        // );\n        // if (!isApproved) {\n        //   const approve = await nftContract.setApprovalForAll(\n        //     NFT_MARKET_ADDRESS,\n        //     true\n        //   );\n        //   await approve.wait();\n        // }\n\n        const res = await contract.createAuction(tokenId, tokenId === 0, tokenURI, auction_length, parseUnits(newPrice.toString()), paymentType, account, {\n          from: account,\n          value: parseUnits(newPrice.toString())\n        });\n        res.wait().then(async result => {\n          const events = result === null || result === void 0 ? void 0 : result.events;\n\n          if (events.length > 0) {\n            const args = events[events.length - 1].args;\n            await firestore.collection(\"nfts\").doc(id).update({\n              isSale: true,\n              saleType: \"auction\",\n              tokenId: parseInt(args.tokenId),\n              auctionCreator: account,\n              auctionLength: auction_length,\n              time: (parseInt(args.duration) + parseInt(args.auctionStart)) * 1000,\n              price: parseFloat(newPrice)\n            });\n            dispatchNftItem({ ...item,\n              isSale: true,\n              saleType: \"auction\",\n              auctionLength: auction_length,\n              auctionCreator: account,\n              tokenId: parseInt(args.tokenId),\n              time: (parseInt(args.duration) + parseInt(args.auctionStart)) * 1000,\n              price: parseFloat(newPrice)\n            });\n            const auction_info = await contract.auctions(parseInt(args.tokenId));\n            setAuctionInfo(auction_info);\n            firestore.collection(\"history\").add({\n              userId: account,\n              oldUserId: account,\n              nftId: id,\n              actionType: 3,\n              price: parseFloat(newPrice),\n              time: moment().valueOf()\n            });\n            getHistory(id);\n            setShowUpdate(false);\n            setIsProcessing(false);\n            setIsAccept(false);\n            toast.success(\"You create an auction\");\n          }\n        }).catch(err => {\n          setIsSale(false);\n          setShowUpdate(false);\n          setIsProcessing(false);\n          toast.error(\"Failed to create auction\");\n        });\n      } catch (err) {\n        setIsSale(false);\n        toast.error(\"Failed to create auction\");\n        setShowUpdate(false);\n        setIsProcessing(false);\n      }\n    } else {\n      toast.error(\"Please connect your wallet first\");\n      setIsProcessing(false);\n    }\n  };\n\n  const cancelAuction = async () => {\n    if (active) {\n      setIsProcessing(true);\n\n      try {\n        const contract = new Contract(NFT_MARKET_ADDRESS, Market_INFO.abi, library.getSigner());\n        const {\n          tokenId\n        } = item;\n        const res = await contract.cancelAuction(tokenId);\n        res.wait().then(async result => {\n          await firestore.collection(\"nfts\").doc(id).update({\n            time: 0,\n            saleType: \"fix\",\n            auctionCreator: null,\n            isSale: false\n          });\n          dispatchNftItem({ ...item,\n            saleType: \"fix\",\n            time: 0,\n            auctionCreator: null,\n            isSale: false\n          });\n          setIsSale(false);\n          setAuctionInfo(null);\n          firestore.collection(\"history\").add({\n            userId: account,\n            oldUserId: account,\n            nftId: id,\n            actionType: 5,\n            price: item.price,\n            time: moment().valueOf()\n          });\n          getHistory(id);\n          toast.success(\"Auction is canceled\");\n          setIsProcessing(false);\n          setIsAccept(false);\n        }).catch(err => {\n          toast.error(\"Failed to cancel auction\");\n          setIsProcessing(false);\n        });\n      } catch (err) {\n        toast.error(\"Failed to cancel auction\");\n        setIsProcessing(false);\n      }\n    } else {\n      toast.error(\"Please connect your wallet first\");\n    }\n  };\n\n  const endAuction = async () => {\n    if (active) {\n      setIsProcessing(true);\n\n      try {\n        const contract = new Contract(NFT_MARKET_ADDRESS, Market_INFO.abi, library.getSigner());\n        const nftContract = new Contract(NFT_ADDRESS, NFT_INFO.abi, library.getSigner());\n        const {\n          tokenId\n        } = item;\n        const isApproved = await nftContract.isApprovedForAll(account, NFT_MARKET_ADDRESS);\n\n        if (!isApproved) {\n          const approve = await nftContract.setApprovalForAll(NFT_MARKET_ADDRESS, true);\n          await approve.wait();\n        }\n\n        const res = await contract.endAuction(tokenId);\n        res.wait().then(async result => {\n          await firestore.collection(\"nfts\").doc(id).update({\n            saleType: \"fix\",\n            time: 0,\n            auctionLength: null,\n            auctionCreator: null,\n            isSale: false,\n            owner: auctionInfo.bidder !== \"0x0000000000000000000000000000000000000000\" ? auctionInfo.bidder : auctionInfo.Creator\n          });\n          dispatchNftItem({ ...item,\n            saleType: \"fix\",\n            time: 0,\n            auctionLength: null,\n            auctionCreator: null,\n            isSale: false,\n            owner: auctionInfo.bidder !== \"0x0000000000000000000000000000000000000000\" ? auctionInfo.bidder : auctionInfo.Creator\n          });\n          setIsSale(false);\n          if (auctionInfo.bidder !== \"0x0000000000000000000000000000000000000000\") firestore.collection(\"history\").add({\n            userId: auctionInfo.bidder,\n            oldUserId: auctionInfo.Creator,\n            nftId: id,\n            actionType: 1,\n            price: item.price,\n            time: moment().valueOf()\n          });\n          firestore.collection(\"history\").add({\n            userId: account,\n            oldUserId: account,\n            nftId: id,\n            actionType: 4,\n            price: item.price,\n            time: moment().valueOf()\n          });\n          getHistory(id);\n          setAuctionInfo(null);\n          setIsAccept(false);\n          toast.success(\"Auction is completed\");\n          setIsProcessing(false);\n        }).catch(err => {\n          toast.error(\"Failed to complete auction\");\n          setIsProcessing(false);\n        });\n      } catch (err) {\n        toast.error(\"Failed to complete auction\");\n        setIsProcessing(false);\n      }\n    } else {\n      toast.error(\"Please connect your wallet first.\");\n    }\n  };\n\n  useEffect(() => {\n    updatePrice(item.paymentType);\n  }, [item.paymentType]);\n\n  const updatePrice = _newPaymentType => {\n    const token = _newPaymentType === \"BNB\" ? \"binancecoin\" : \"flokinomics\";\n    axios.get(`https://api.coingecko.com/api/v3/simple/price?ids=${token}&vs_currencies=usd`).then(res => {\n      console.log(\"res:\", res);\n\n      if (res.status === 200) {\n        var _res$data$token;\n\n        const cur_rate = (_res$data$token = res.data[token]) === null || _res$data$token === void 0 ? void 0 : _res$data$token.usd;\n        if (cur_rate) setRate(cur_rate);\n      }\n    }).catch(err => console.log(err));\n  };\n\n  useEffect(() => {\n    getItem(id);\n    getHistory(id); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [active, id]);\n  useEffect(() => {\n    if (parseFloat(auctionInfo === null || auctionInfo === void 0 ? void 0 : auctionInfo.amount) > 0) setCurrentPrice(item.price * 1.1);else setCurrentPrice(item.price);\n  }, [item.price, auctionInfo]);\n\n  const renderer = _ref => {\n    let {\n      days,\n      hours,\n      minutes,\n      seconds,\n      completed\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: \"center\",\n        color: \"white\",\n        marginTop: 10,\n        fontSize: 18\n      },\n      children: [days, \" Days \", hours, \":\", minutes, \":\", seconds]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 956,\n      columnNumber: 7\n    }, this);\n  }; // const sss = async () => {\n  //   console.log(active);\n  //   if (active) {\n  //     const contract = new Contract(\n  //       \"0xed5E765Ac8702eF748f058e6828A1106aE2996AE\",\n  //       NFT_INFO.abi,\n  //       library.getSigner()\n  //     );\n  //     const nftContract = new Contract(\n  //       \"0xA96E7654330f2C8cF1acD07d3600BAeD6Bf7a417\",\n  //       NFT_INFO.abi,\n  //       library.getSigner()\n  //     );\n  //     let a = [],\n  //       b = [],\n  //       c = [],\n  //       d = [],\n  //       e = [],\n  //       f = [];\n  //     // console.log(await nftContract.ownerOf(417));\n  //     for (let i = 401; i < 420; i++) {\n  //       // const ccreator = await nftContract.creatorMap(i);\n  //       // const cprice = await nftContract.price(i);\n  //       // const cowner = await nftContract.ownerMap(i);\n  //       // // const bowner = await contract.ownerOf(i);\n  //       // const croyalty = await nftContract.royaltyMap(i);\n  //       // const clist = await nftContract.listedMap(i);\n  //       // const uris = await nftContract.tokenURI(i);\n  //       // console.log(uris);\n  //       // a.push(ccowner);\n  //       const res = await firestore\n  //         .collection(\"nfts\")\n  //         .where(\"tokenId\", \"==\", i)\n  //         .get();\n  //       let ccowner;\n  //       let uris;\n  //       if (res.docs.length > 0) {\n  //         console.log(\"exist\");\n  //         ccowner = (await res.docs[0].data()).owner;\n  //         uris = (await res.docs[0].data()).tokenURI;\n  //         b.push(ccowner);\n  //         a.push(uris);\n  //         c.push(BigNumber.from(i));\n  //       } else {\n  //         ccowner = \"\";\n  //         uris = \"\";\n  //       }\n  //       // a.push(i);\n  //       // b.push(ccreator);\n  //       // c.push(cprice);\n  //       // d.push(cowner);\n  //       // e.push(croyalty);\n  //       // f.push(false);\n  //       // const tt = new BigNumber();\n  //       // console.log(\n  //       //   i,\n  //       //   // clist,\n  //       //   cowner,\n  //       //   // bowner,\n  //       //   // ccowner,\n  //       //   // cowner === bowner && cowner === ccowner\n  //       // );\n  //     }\n  //     // console.log(c, a, b);\n  //     // await contract.addCreatorMap(false, a, b, c, d, e, f);\n  //     console.log(\"done\");\n  //     await contract.mintAll(c, b, a);\n  //   }\n  // };\n  // const sss = async () => {\n  //   if (active) {\n  //     // const contract = new Contract(\n  //     //   \"0xA96E7654330f2C8cF1acD07d3600BAeD6Bf7a417\",\n  //     //   NFT_INFO.abi,\n  //     //   library.getSigner()\n  //     // );\n  //     const nftContract = new Contract(\n  //       \"0xA96E7654330f2C8cF1acD07d3600BAeD6Bf7a417\",\n  //       Market_INFO.abi,\n  //       library.getSigner()\n  //     );\n  //     const ress = await firestore.collection(\"nfts\").get();\n  //     console.log(ress);\n  //     for (let i = 0; i < ress.docs.length; i++) {\n  //       const temp = await ress.docs[i].data();\n  //       if (!temp.time)\n  //         await firestore\n  //           .collection(\"nfts\")\n  //           .doc(ress.docs[i].id)\n  //           .update({ time: 0 });\n  //       console.log(temp.time);\n  //     }\n  //     // console.log(contract);\n  //     // let a = [],\n  //     //   b = [],\n  //     //   c = [];\n  //     // for (let i = 181; i < 244; i++) {\n  //     //   const res = await firestore\n  //     //     .collection(\"nfts\")\n  //     //     // .where(\"tokenId\", \"==\", i)\n  //     //     .get();\n  //     //   let ccowner, uris;\n  //     //   if (res.docs.length > 0) {\n  //     //     console.log(\"exist\");\n  //     //     const temp = await res.docs[0].data();\n  //     //     ccowner = temp.owner;\n  //     //     uris = temp.tokenURI;\n  //     //     a.push(ccowner);\n  //     //     b.push(uris);\n  //     //     // c.push(BigNumber.from(i));\n  //     //   } else {\n  //     //     ccowner = \"\";\n  //     //     uris = \"\";\n  //     //     console.log(i);\n  //     //   }\n  //     // }\n  //     // console.log(c, a, b);\n  //     // await contract.mintAll(c, a, b);\n  //     // console.log(\"done\");\n  //   }\n  // };\n\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row row--grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12\",\n          children: /*#__PURE__*/_jsxDEV(BreadCrumb, {\n            data: breadcrumb\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1098,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1097,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"main__title main__title--page\",\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1107,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1106,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 d-flex align-items-end justify-content-end\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"sign__text mb-0 d-flex justify-content-end mr-2\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"mt-0\",\n              children: \"For sale:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1112,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Switch, {\n            onChange: showUpdates,\n            checked: isSale,\n            disabled: item.owner !== account || item.time > 0,\n            height: 26\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1114,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1095,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 col-md-5  cardAssetPreview\",\n          children: /*#__PURE__*/_jsxDEV(AssetItem, {\n            data: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1126,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 col-md-7 bleuFrosted cardAssetDetails\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"asset__info\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"asset__desc\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                class: \"cardAssetDetailsLabel\",\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1134,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: item.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1135,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1133,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(AssetAuthor, {\n              data: item\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1138,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"itemActivity\",\n              children: /*#__PURE__*/_jsxDEV(Tabs, {\n                historyData: historyData,\n                bidsData: bidsData,\n                item: item,\n                docId: id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1141,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1140,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"asset__wrap\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"asset__timer\",\n                children: item.saleType !== \"fix\" && (item.time > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                      xmlns: \"http://www.w3.org/2000/svg\",\n                      viewBox: \"0 0 24 24\",\n                      children: /*#__PURE__*/_jsxDEV(\"path\", {\n                        d: \"M18.3,8.59l.91-.9a1,1,0,0,0-1.42-1.42l-.9.91a8,8,0,0,0-9.79,0l-.91-.92A1,1,0,0,0,4.77,7.69l.92.91A7.92,7.92,0,0,0,4,13.5,8,8,0,1,0,18.3,8.59ZM12,19.5a6,6,0,1,1,6-6A6,6,0,0,1,12,19.5Zm-2-15h4a1,1,0,0,0,0-2H10a1,1,0,0,0,0,2Zm3,6a1,1,0,0,0-2,0v1.89a1.5,1.5,0,1,0,2,0Z\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1160,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1156,\n                      columnNumber: 27\n                    }, this), \" \", \"Auction ends in\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1155,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"card__clock\",\n                    children: /*#__PURE__*/_jsxDEV(Countdown, {\n                      date: item.time,\n                      renderer: renderer\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1165,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1164,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"sign__group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"sign__label\",\n                    htmlFor: \"length\",\n                    children: \"Auction Length\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1170,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                    id: \"length\",\n                    name: \"length\",\n                    className: \"sign__select\",\n                    value: auctionLength,\n                    disabled: true,\n                    onChange: e => setAuctionLength(e.target.value),\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"12\",\n                      children: \"12 hours\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1181,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"24\",\n                      children: \"24 hours\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1182,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"48\",\n                      children: \"2 days\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1183,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"72\",\n                      children: \"3 days\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1184,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"168\",\n                      children: \"7 days\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1185,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1173,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1169,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1151,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"asset__price\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: item.saleType === \"fix\" ? \"Price\" : \"Minimum bid\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1192,\n                  columnNumber: 19\n                }, this), item.isSale && /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [parseFloat(currentPrice).toFixed(2), \" \", item.paymentType, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1198,\n                    columnNumber: 23\n                  }, this), \"($\", (parseFloat(currentPrice) * rate).toFixed(2), \" USD)\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1196,\n                  columnNumber: 21\n                }, this), item.isSale && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"pie-chart\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"relative\",\n                    children: /*#__PURE__*/_jsxDEV(ApexCharts, {\n                      options: chartOption,\n                      series: [item.royalties, item.paymentType === \"BNB\" ? 5 : 3, 100 - item.royalties - (item.paymentType === \"BNB\" ? 5 : 3)],\n                      type: \"pie\",\n                      width: 380\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1205,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1204,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1203,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1191,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1150,\n              columnNumber: 15\n            }, this), isSale && account == isOwner && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"sign__group filter__checkboxes mb-1 mt-5\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"private\",\n                  type: \"checkbox\",\n                  name: \"private\",\n                  checked: isAccept,\n                  onChange: () => {\n                    setIsAccept(!isAccept);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1226,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"sign__label\",\n                  htmlFor: \"private\",\n                  children: [\"I agree to the\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: \"assets/terms/Terms and Conditions for Purchasers.pdf\",\n                    target: \"_blank\",\n                    className: \"ml-1 linkTerms\",\n                    children: \"Terms and conditions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1237,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1235,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1225,\n                columnNumber: 19\n              }, this), isAccept && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"asset__btns\",\n                children: item.saleType === \"fix\" ? /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"asset__btn asset__btn asset__btn--clr mx-auto\",\n                  onClick: buyNft,\n                  children: isProcessing ? \"Waiting...\" : \"Buy\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1249,\n                  columnNumber: 25\n                }, this) : item.time > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [!((auctionInfo === null || auctionInfo === void 0 ? void 0 : auctionInfo.Creator) === account) && /*#__PURE__*/_jsxDEV(\"button\", {\n                    disabled: isProcessing || item.time < moment().valueOf() || (auctionInfo === null || auctionInfo === void 0 ? void 0 : auctionInfo.Creator) === account || (auctionInfo === null || auctionInfo === void 0 ? void 0 : auctionInfo.bidder) === account,\n                    className: \"asset__btn asset__btn--full asset__btn--clr open-modal mr-0\",\n                    onClick: () => {\n                      setIsBid(true);\n                    },\n                    children: \"Place a bid\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1258,\n                    columnNumber: 29\n                  }, this), (auctionInfo === null || auctionInfo === void 0 ? void 0 : auctionInfo.Creator) === account && item.time > moment().valueOf() && (parseInt(auctionInfo === null || auctionInfo === void 0 ? void 0 : auctionInfo.amount) === 0 ? /*#__PURE__*/_jsxDEV(\"button\", {\n                    disabled: isProcessing,\n                    className: \"asset__btn asset__btn--full asset__btn--clr\",\n                    onClick: cancelAuction,\n                    children: isProcessing ? \"Waiting...\" : \"Cancel Auction\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1276,\n                    columnNumber: 31\n                  }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                    disabled: true,\n                    className: \"asset__btn asset__btn--full asset__btn--clr\",\n                    children: \"Auction is started\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1284,\n                    columnNumber: 31\n                  }, this)), ((auctionInfo === null || auctionInfo === void 0 ? void 0 : auctionInfo.Creator) === account || (auctionInfo === null || auctionInfo === void 0 ? void 0 : auctionInfo.bidder) === account) && item.time < moment().valueOf() && /*#__PURE__*/_jsxDEV(\"button\", {\n                    disabled: isProcessing,\n                    className: \"asset__btn asset__btn--full asset__btn--clr\",\n                    onClick: endAuction,\n                    children: isProcessing ? \"Waiting...\" : \"End Auction\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1294,\n                    columnNumber: 31\n                  }, this)]\n                }, void 0, true) : item.owner === account && /*#__PURE__*/_jsxDEV(\"button\", {\n                  disabled: isProcessing,\n                  className: \"asset__btn asset__btn--full asset__btn--clr\",\n                  onClick: startAuction,\n                  children: isProcessing ? \"Waiting...\" : \"Start Auction\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1305,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1247,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1132,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1094,\n      columnNumber: 7\n    }, this), isBid && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mfp-wrap\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mfp-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mfp-backdrop\",\n          onClick: () => {\n            setIsBid(false);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1327,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"zoom-anim-dialog mfp-preloader modal modal--form\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modal__close\",\n            onClick: () => {\n              setIsBid(false);\n            },\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              viewBox: \"0 0 24 24\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M13.41,12l4.3-4.29a1,1,0,1,0-1.42-1.42L12,10.59,7.71,6.29A1,1,0,0,0,6.29,7.71L10.59,12l-4.3,4.29a1,1,0,0,0,0,1.42,1,1,0,0,0,1.42,0L12,13.41l4.29,4.3a1,1,0,0,0,1.42,0,1,1,0,0,0,0-1.42Z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1341,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1340,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1334,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"sign__title\",\n            children: \"Place a bid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1344,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sign__group sign__group--row\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"sign__label\",\n              htmlFor: \"placebid\",\n              children: \"Your Highest bid\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1346,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"placebid\",\n              type: \"number\",\n              value: price,\n              placeholder: `Place your highest bid in ${item.paymentType}.`,\n              className: \"sign__input\",\n              onChange: e => setPrice(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1349,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"sign__text sign__text--small\",\n              children: [\"Price in USD : \", (price * rate).toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1357,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"sign__text sign__text--small\",\n              children: [\"Minimum Bid : \", currentPrice.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1360,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1345,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"sign__btn\",\n            onClick: bidNft,\n            disabled: isProcessing,\n            children: isProcessing ? \"Waiting...\" : \"Take a bid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1364,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1333,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1326,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1325,\n      columnNumber: 9\n    }, this), showUpdate && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mfp-wrap\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mfp-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mfp-backdrop\",\n          onClick: showUpdates\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1378,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"zoom-anim-dialog mfp-preloader modal modal--form\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modal__close\",\n            onClick: showUpdates,\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              viewBox: \"0 0 24 24\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M13.41,12l4.3-4.29a1,1,0,1,0-1.42-1.42L12,10.59,7.71,6.29A1,1,0,0,0,6.29,7.71L10.59,12l-4.3,4.29a1,1,0,0,0,0,1.42,1,1,0,0,0,1.42,0L12,13.41l4.29,4.3a1,1,0,0,0,1.42,0,1,1,0,0,0,0-1.42Z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1382,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1381,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1380,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"sign__title\",\n            children: \"List For Sale\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1385,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sign__group sign__group--row\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"sign__label\",\n              htmlFor: \"saleType\",\n              children: \"Sale Type:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1387,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"saleType\",\n              name: \"saleType\",\n              className: \"sign__select height-sm mt-0 mb-4\",\n              value: saleType,\n              onChange: e => {\n                setNewPrice(item.price);\n                setSaleType(e.target.value);\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"fix\",\n                children: \"Fixed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1400,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"auction\",\n                children: \"Auction\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1401,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1390,\n              columnNumber: 17\n            }, this), saleType === \"auction\" && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sign__group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"sign__label\",\n                htmlFor: \"length\",\n                children: \"Auction Length\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1405,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"length\",\n                name: \"length\",\n                className: \"sign__select\",\n                value: auctionLength,\n                onChange: e => setAuctionLength(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"12\",\n                  children: \"12 hours\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1415,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"24\",\n                  children: \"24 hours\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1416,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"48\",\n                  children: \"2 days\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1417,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"72\",\n                  children: \"3 days\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1418,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"168\",\n                  children: \"7 days\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1419,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1408,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1404,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"sign__label\",\n              htmlFor: \"updatePrice\",\n              children: [saleType === \"fix\" ? \"Update\" : \"First\", \" Price:\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1423,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"updatePrice\",\n              type: \"number\",\n              name: \"updatePrice\",\n              className: \"sign__input height-sm\",\n              placeholder: \"Type update price.\",\n              value: newPrice || 0,\n              onChange: e => {\n                setNewPrice(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1426,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1386,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"sign__btn\",\n            onClick: () => {\n              updateSale(false);\n            },\n            disabled: isProcessing,\n            children: isProcessing ? \"Waiting...\" : \"List for sale\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1438,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1379,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1377,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1376,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1093,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Item, \"mLicB4+FoVQVTaqsTzQnb4g2iOo=\", false, function () {\n  return [useWeb3React, useParams, useDispatch];\n});\n\n_c = Item;\nexport default Item;\n\nvar _c;\n\n$RefreshReg$(_c, \"Item\");","map":{"version":3,"sources":["/home/hp/Desktop/Bluefi/bleufi-frontend/src/pages/Asset/index.js"],"names":["React","useEffect","useState","useDispatch","BreadCrumb","AssetItem","AssetAuthor","ApexCharts","useWeb3React","Contract","Market_INFO","NFT_INFO","NFT_ADDRESS","CONTRACT_ADDRESS","PAYMENT_TOKEN","NFT_MARKET_ADDRESS","NFT_CONTRACT_ADDRESS","parseUnits","Axios","Tabs","Switch","useParams","firestore","toast","Countdown","moment","axios","breadcrumb","title","page","Item","library","active","account","id","price","setPrice","user","setUser","avatar","ownerAvatar","imageCover","firstName","lastName","nickName","bio","twitter","telegram","instagram","subscribe","followers","currentPrice","setCurrentPrice","auctionLength","setAuctionLength","isProcessing","setIsProcessing","item","setItem","name","description","owner","time","saleType","likes","paymentType","isSale","setIsSale","isOwner","setIsOwner","isBid","setIsBid","isAccept","setIsAccept","auctionInfo","setAuctionInfo","historyData","setHistoryData","bidsData","setBidsData","rate","setRate","showUpdate","setShowUpdate","newPrice","setNewPrice","setSaleType","chartOption","chart","width","type","labels","theme","monochrome","enabled","color","responsive","breakpoint","options","legend","position","dispatch","dispatchNftItem","payload","getHistory","item_id","res","collection","where","get","nft_history","i","docs","length","x","temp","data","user_info","doc","userId","kcsPrice","timespace","parseInt","valueOf","timeAgo","format","push","verified","actionType","history_data","sort","a","b","filter","e","getItem","nft_item","console","log","nftInfo","tokenURI","err","contract","abi","getSigner","tokenId","auction_info","auctions","updateSale","lock","userExist","exists","error","nftContract","closeTrade","wait","update","success","startAuction","isApproved","isApprovedForAll","approve","setApprovalForAll","openTrade","toString","parseFloat","prev","showUpdates","dispatchUser","user_id","userInfo","buyNft","royalties","creator","JSON","stringify","from","value","buyNew","tokenContract","tokenAddress","buy","then","result","nftId","events","args","old_owner","add","oldUserId","catch","message","bidNft","amount","createBid","duration","firstBidTime","auction_length","createAuction","auctionCreator","auctionStart","cancelAuction","endAuction","bidder","Creator","updatePrice","_newPaymentType","token","status","cur_rate","usd","renderer","days","hours","minutes","seconds","completed","textAlign","marginTop","fontSize","target","toFixed"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,SAASC,QAAT,QAAyB,0BAAzB;AACA,OAAOC,WAAP,MAAwB,oEAAxB;AACA,OAAOC,QAAP,MAAqB,4DAArB;AACA,SACEC,WADF,EAEEC,gBAFF,EAGEC,aAHF,EAIEC,kBAJF,EAKEC,oBALF,QAMO,iBANP;AAOA,SAASC,UAAT,QAA2B,sBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAO,qBAAP;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,SAAT,QAA0B,gBAA1B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;;;AAEA,MAAMC,UAAU,GAAG,CACjB;AAAEC,EAAAA,KAAK,EAAE,MAAT;AAAiBC,EAAAA,IAAI,EAAE;AAAvB,CADiB,EAEjB;AAAED,EAAAA,KAAK,EAAE,MAAT;AAAiBC,EAAAA,IAAI,EAAE;AAAvB,CAFiB,CAAnB;;AAKA,SAASC,IAAT,GAAgB;AAAA;;AACd,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,MAAX;AAAmBC,IAAAA;AAAnB,MAA+BzB,YAAY,EAAjD;AACA,QAAM;AAAE0B,IAAAA;AAAF,MAASb,SAAS,EAAxB;AACA,QAAM,CAACc,KAAD,EAAQC,QAAR,IAAoBlC,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACmC,IAAD,EAAOC,OAAP,IAAkBpC,QAAQ,CAAC;AAC/B+B,IAAAA,OAAO,EAAEA,OADsB;AAE/BM,IAAAA,MAAM,EAAE,+BAFuB;AAG/BC,IAAAA,WAAW,EAAE,+BAHkB;AAI/BC,IAAAA,UAAU,EAAE,uBAJmB;AAK/BC,IAAAA,SAAS,EAAE,MALoB;AAM/BC,IAAAA,QAAQ,EAAE,EANqB;AAO/BC,IAAAA,QAAQ,EAAE,OAPqB;AAQ/BC,IAAAA,GAAG,EAAE,EAR0B;AAS/BC,IAAAA,OAAO,EAAE,EATsB;AAU/BC,IAAAA,QAAQ,EAAE,EAVqB;AAW/BC,IAAAA,SAAS,EAAE,EAXoB;AAY/BC,IAAAA,SAAS,EAAE,EAZoB;AAa/BC,IAAAA,SAAS,EAAE;AAboB,GAAD,CAAhC;AAeA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkClD,QAAQ,CAAC,CAAD,CAAhD;AACA,QAAM,CAACmD,aAAD,EAAgBC,gBAAhB,IAAoCpD,QAAQ,CAAC,IAAD,CAAlD;AACA,QAAM,CAACqD,YAAD,EAAeC,eAAf,IAAkCtD,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACuD,IAAD,EAAOC,OAAP,IAAkBxD,QAAQ,CAAC;AAC/ByD,IAAAA,IAAI,EAAE,EADyB;AAE/BC,IAAAA,WAAW,EAAE,EAFkB;AAG/BC,IAAAA,KAAK,EAAE5B,OAAO,IAAI,IAHa;AAI/B6B,IAAAA,IAAI,EAAE,CAJyB;AAK/BC,IAAAA,QAAQ,EAAE,KALqB;AAM/BC,IAAAA,KAAK,EAAE,EANwB;AAO/B7B,IAAAA,KAAK,EAAE,CAPwB;AAQ/B8B,IAAAA,WAAW,EAAE;AARkB,GAAD,CAAhC;AAUA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBjE,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACkE,OAAD,EAAUC,UAAV,IAAwBnE,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACoE,KAAD,EAAQC,QAAR,IAAoBrE,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACsE,QAAD,EAAWC,WAAX,IAA0BvE,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACwE,WAAD,EAAcC,cAAd,IAAgCzE,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM,CAAC0E,WAAD,EAAcC,cAAd,IAAgC3E,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAAC4E,QAAD,EAAWC,WAAX,IAA0B7E,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAAC8E,IAAD,EAAOC,OAAP,IAAkB/E,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACgF,UAAD,EAAaC,aAAb,IAA8BjF,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACkF,QAAD,EAAWC,WAAX,IAA0BnF,QAAQ,CAACuD,IAAI,CAACtB,KAAN,CAAxC;AACA,QAAM,CAAC4B,QAAD,EAAWuB,WAAX,IAA0BpF,QAAQ,CAACuD,IAAI,CAACM,QAAN,CAAxC;AAEA,QAAM,CAACwB,WAAD,IAAgBrF,QAAQ,CAAC;AAC7BsF,IAAAA,KAAK,EAAE;AACLC,MAAAA,KAAK,EAAE,GADF;AAELC,MAAAA,IAAI,EAAE;AAFD,KADsB;AAK7BC,IAAAA,MAAM,EAAE,CAAC,mBAAD,EAAsB,cAAtB,EAAsC,QAAtC,CALqB;AAM7BC,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAE;AACVC,QAAAA,OAAO,EAAE,IADC;AAEVC,QAAAA,KAAK,EAAE;AAFG;AADP,KANsB;AAY7BC,IAAAA,UAAU,EAAE,CACV;AACEC,MAAAA,UAAU,EAAE,GADd;AAEEC,MAAAA,OAAO,EAAE;AACPV,QAAAA,KAAK,EAAE;AACLtD,UAAAA,EAAE,EAAE,WADC;AAELuD,UAAAA,KAAK,EAAE;AAFF,SADA;AAKPU,QAAAA,MAAM,EAAE;AACNC,UAAAA,QAAQ,EAAE;AADJ;AALD;AAFX,KADU;AAZiB,GAAD,CAA9B;AA4BA,QAAMC,QAAQ,GAAGlG,WAAW,EAA5B;;AAEA,QAAMmG,eAAe,GAAIC,OAAD,IAAa;AACnCF,IAAAA,QAAQ,CAAC;AAAEX,MAAAA,IAAI,EAAE,cAAR;AAAwBa,MAAAA;AAAxB,KAAD,CAAR;AACA7C,IAAAA,OAAO,CAAC6C,OAAD,CAAP;AACAlB,IAAAA,WAAW,CAACkB,OAAO,CAACpE,KAAT,CAAX;AACAmD,IAAAA,WAAW,CAACiB,OAAO,CAACxC,QAAT,CAAX;AACD,GALD;;AAOA,QAAMyC,UAAU,GAAG,MAAOC,OAAP,IAAmB;AACpC,UAAMC,GAAG,GAAG,MAAMpF,SAAS,CACxBqF,UADe,CACJ,SADI,EAEfC,KAFe,CAET,OAFS,EAEA,IAFA,EAEMH,OAFN,EAGfI,GAHe,EAAlB;AAIA,QAAIC,WAAW,GAAG,EAAlB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,GAAG,CAACM,IAAJ,CAASC,MAA7B,EAAqCF,CAAC,EAAtC,EAA0C;AACxC,YAAMG,CAAC,GAAGR,GAAG,CAACM,IAAJ,CAASD,CAAT,CAAV;AACA,YAAMI,IAAI,GAAGD,CAAC,CAACE,IAAF,EAAb;AACA,YAAMC,SAAS,GAAG,CAChB,MAAM/F,SAAS,CAACqF,UAAV,CAAqB,OAArB,EAA8BW,GAA9B,CAAkCH,IAAI,CAACI,MAAvC,EAA+CV,GAA/C,EADU,EAEhBO,IAFgB,EAAlB;AAGA,YAAMI,QAAQ,GAAGL,IAAI,CAAChF,KAAtB;AACA,YAAMsF,SAAS,GAAGC,QAAQ,CAAC,CAACjG,MAAM,GAAGkG,OAAT,KAAqBR,IAAI,CAACrD,IAA3B,IAAmC,KAApC,CAA1B;AACA,YAAM8D,OAAO,GACXH,SAAS,GAAG,CAAZ,GACI,oBADJ,GAEIA,SAAS,GAAG,EAAZ,GACC,GAAEA,SAAU,UADb,GAEAA,SAAS,GAAG,KAAK,EAAjB,GACC,GAAEC,QAAQ,CAACD,SAAS,GAAG,EAAb,CAAiB,UAD5B,GAEAhG,MAAM,CAAC0F,IAAI,CAACrD,IAAN,CAAN,CAAkB+D,MAAlB,CAAyB,YAAzB,CAPN;AAQAf,MAAAA,WAAW,CAACgB,IAAZ,CAAiB;AACfvF,QAAAA,MAAM,EAAE,CAAA8E,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAE9E,MAAX,KAAqB,gCADd;AAEfiF,QAAAA,QAFe;AAGfI,QAAAA,OAHe;AAIfhF,QAAAA,QAAQ,EAAEyE,SAAF,aAAEA,SAAF,uBAAEA,SAAS,CAAEzE,QAJN;AAKfmF,QAAAA,QAAQ,EAAE,IALK;AAMfjE,QAAAA,IAAI,EAAEqD,IAAI,CAACrD,IANI;AAOfkE,QAAAA,UAAU,EAAEb,IAAI,CAACa;AAPF,OAAjB;AASD;;AACD,UAAMC,YAAY,GAAGnB,WAAW,CAACoB,IAAZ,CAAiB,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAACtE,IAAF,GAASqE,CAAC,CAACrE,IAAtC,CAArB;AACAe,IAAAA,cAAc,CAACoD,YAAD,CAAd;AACAlD,IAAAA,WAAW,CAACkD,YAAY,CAACI,MAAb,CAAqBC,CAAD,IAAOA,CAAC,CAACN,UAAF,GAAe,CAA1C,CAAD,CAAX;AACD,GAnCD;;AAoCA,QAAMO,OAAO,GAAG,MAAO9B,OAAP,IAAmB;AACjC,UAAMC,GAAG,GAAG,MAAMpF,SAAS,CAACqF,UAAV,CAAqB,MAArB,EAA6BW,GAA7B,CAAiCb,OAAjC,EAA0CI,GAA1C,EAAlB;AACA,QAAI2B,QAAQ,GAAG9B,GAAG,CAACU,IAAJ,EAAf;AACAqB,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAAC3E,KAArB;AACA4E,IAAAA,OAAO,CAACC,GAAR,CAAYzG,OAAZ;AACAoC,IAAAA,UAAU,CAACmE,QAAQ,CAAC3E,KAAV,CAAV;AACA,QAAI8E,OAAO,GAAG;AAAEvB,MAAAA,IAAI,EAAE;AAAR,KAAd;;AACA,QAAI;AACFuB,MAAAA,OAAO,GAAG,MAAMzH,KAAK,CAAC2F,GAAN,CAAU2B,QAAQ,CAACI,QAAnB,CAAhB;AACD,KAFD,CAEE,OAAOC,GAAP,EAAY;AACZJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACD;;AACDvC,IAAAA,eAAe,CAAC;AAAEpE,MAAAA,EAAF;AAAM,SAAGG,IAAT;AAAe,SAAGmG,QAAlB;AAA4B,SAAGG,OAAO,CAACvB;AAAvC,KAAD,CAAf;;AACA,QAAIpF,MAAJ,EAAY;AACV,YAAM8G,QAAQ,GAAG,IAAIrI,QAAJ,CACfM,kBADe,EAEfL,WAAW,CAACqI,GAFG,EAGfhH,OAAO,CAACiH,SAAR,EAHe,CAAjB,CADU,CAMV;AACA;AACA;AACA;AAEA;;AAEA,UAAI,CAAAR,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAES,OAAV,MAAsB,CAA1B,EAA6B;AAC3B,cAAMC,YAAY,GAAG,MAAMJ,QAAQ,CAACK,QAAT,CAAkBX,QAAQ,CAACS,OAA3B,CAA3B;AACAtE,QAAAA,cAAc,CAACuE,YAAD,CAAd;AACD;AACF;;AACD/E,IAAAA,SAAS,CAACqE,QAAD,aAACA,QAAD,uBAACA,QAAQ,CAAEtE,MAAX,CAAT;AACD,GAhCD;;AAkCA,QAAMkF,UAAU,GAAG,kBAAwB;AAAA,QAAjBC,IAAiB,uEAAV,KAAU;AACzC7F,IAAAA,eAAe,CAAC,IAAD,CAAf;;AACA,QAAI;AACF,YAAM8F,SAAS,GAAG,CAAC,MAAMhI,SAAS,CAACqF,UAAV,CAAqB,OAArB,EAA8BW,GAA9B,CAAkCrF,OAAlC,EAA2C4E,GAA3C,EAAP,EACf0C,MADH;;AAEA,UAAI,CAACD,SAAL,EAAgB;AACd;AACA/H,QAAAA,KAAK,CAACiI,KAAN,CAAY,mCAAZ;AACAhG,QAAAA,eAAe,CAAC,KAAD,CAAf;AACA;AACD;;AAED,YAAMsF,QAAQ,GAAG,IAAIrI,QAAJ,CACfM,kBADe,EAEfL,WAAW,CAACqI,GAFG,EAGfhH,OAAO,CAACiH,SAAR,EAHe,CAAjB;AAKA,YAAMS,WAAW,GAAG,IAAIhJ,QAAJ,CAClBG,WADkB,EAElBD,QAAQ,CAACoI,GAFS,EAGlBhH,OAAO,CAACiH,SAAR,EAHkB,CAApB;;AAKA,UAAIvF,IAAI,CAACS,MAAT,EAAiB;AACf,YAAIT,IAAI,CAACwF,OAAL,KAAiB,CAArB,EAAwB;AACtB,gBAAMvC,GAAG,GAAG,MAAMoC,QAAQ,CAACY,UAAT,CAAoBjG,IAAI,CAACwF,OAAzB,CAAlB;AACA,gBAAMvC,GAAG,CAACiD,IAAJ,EAAN;AACD;;AACD,cAAMrI,SAAS,CAACqF,UAAV,CAAqB,MAArB,EAA6BW,GAA7B,CAAiCpF,EAAjC,EAAqC0H,MAArC,CAA4C;AAChD1F,UAAAA,MAAM,EAAE,KADwC;AAEhDJ,UAAAA,IAAI,EAAE,CAF0C;AAGhDC,UAAAA,QAAQ,EAAE;AAHsC,SAA5C,CAAN;AAKAL,QAAAA,OAAO,CAAC,EACN,GAAGD,IADG;AAENS,UAAAA,MAAM,EAAE,KAFF;AAGNJ,UAAAA,IAAI,EAAE,CAHA;AAINC,UAAAA,QAAQ,EAAE;AAJJ,SAAD,CAAP;AAMAxC,QAAAA,KAAK,CAACsI,OAAN,CAAc,wCAAd;AACA1E,QAAAA,aAAa,CAAC,KAAD,CAAb;AACA3B,QAAAA,eAAe,CAAC,KAAD,CAAf;AACD,OAnBD,MAmBO;AACL,YAAI4B,QAAQ,IAAI,CAAhB,EAAmB;AACjB7D,UAAAA,KAAK,CAACiI,KAAN,CAAY,2BAAZ;AACAhG,UAAAA,eAAe,CAAC,KAAD,CAAf;AACA;AACD;;AACD,YAAIO,QAAQ,KAAK,SAAjB,EAA4B;AAC1B,gBAAM+F,YAAY,EAAlB;AACD,SAFD,MAEO;AACL,cAAIrG,IAAI,CAACwF,OAAL,KAAiB,CAArB,EAAwB;AACtB,kBAAMc,UAAU,GAAG,MAAMN,WAAW,CAACO,gBAAZ,CACvB/H,OADuB,EAEvBlB,kBAFuB,CAAzB;;AAIA,gBAAI,CAACgJ,UAAL,EAAiB;AACf,oBAAME,OAAO,GAAG,MAAMR,WAAW,CAACS,iBAAZ,CACpBnJ,kBADoB,EAEpB,IAFoB,CAAtB;AAIA,oBAAMkJ,OAAO,CAACN,IAAR,EAAN;AACD;;AACD,kBAAMjD,GAAG,GAAG,MAAMoC,QAAQ,CAACqB,SAAT,CAChB1G,IAAI,CAACwF,OADW,EAEhBhI,UAAU,CAACmE,QAAQ,CAACgF,QAAT,EAAD,CAFM,EAGhB3G,IAAI,CAACQ,WAHW,CAAlB;AAKA,kBAAMyC,GAAG,CAACiD,IAAJ,EAAN;AACD;;AACD,gBAAMrI,SAAS,CACZqF,UADG,CACQ,MADR,EAEHW,GAFG,CAECpF,EAFD,EAGH0H,MAHG,CAGI;AACNzH,YAAAA,KAAK,EAAEkI,UAAU,CAACjF,QAAD,CADX;AAENrB,YAAAA,QAAQ,EAAE,KAFJ;AAGNG,YAAAA,MAAM,EAAE,IAHF;AAINJ,YAAAA,IAAI,EAAE;AAJA,WAHJ,CAAN;AASAJ,UAAAA,OAAO,CAAC,EACN,GAAGD,IADG;AAENtB,YAAAA,KAAK,EAAEkI,UAAU,CAACjF,QAAD,CAFX;AAGNrB,YAAAA,QAAQ,EAAE,KAHJ;AAING,YAAAA,MAAM,EAAE,IAJF;AAKNJ,YAAAA,IAAI,EAAE;AALA,WAAD,CAAP;AAOAvC,UAAAA,KAAK,CAACsI,OAAN,CAAc,oCAAd;AACA1E,UAAAA,aAAa,CAAC,KAAD,CAAb;AACA3B,UAAAA,eAAe,CAAC,KAAD,CAAf;AACD;AACF;AACF,KAxFD,CAwFE,OAAOqF,GAAP,EAAY;AACZ1E,MAAAA,SAAS,CAAEmG,IAAD,IAAU,CAACA,IAAZ,CAAT;AACAnF,MAAAA,aAAa,CAAC,KAAD,CAAb;AACA5D,MAAAA,KAAK,CAACiI,KAAN,CAAY,qBAAqBX,GAAjC;AACArF,MAAAA,eAAe,CAAC,KAAD,CAAf;AACD;AACF,GAhGD;;AAkGA,QAAM+G,WAAW,GAAG,MAAM;AACxB,QAAIrG,MAAM,IAAI,CAACgB,UAAf,EAA2BkE,UAAU,CAAC,IAAD,CAAV;AAC3BjE,IAAAA,aAAa,CAAC,CAACjB,MAAF,CAAb;AACAC,IAAAA,SAAS,CAAEmG,IAAD,IAAU,CAACA,IAAZ,CAAT;AACD,GAJD,CAzPc,CA+Pd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,QAAME,YAAY,GAAG,MAAOC,OAAP,IAAmB;AACtC,QAAIA,OAAJ,EAAa;AACX,YAAMC,QAAQ,GAAG,CACf,MAAMpJ,SAAS,CAACqF,UAAV,CAAqB,OAArB,EAA8BW,GAA9B,CAAkCmD,OAAlC,EAA2C5D,GAA3C,EADS,EAEfO,IAFe,EAAjB;AAGAf,MAAAA,QAAQ,CAAC;AAAEX,QAAAA,IAAI,EAAE,aAAR;AAAuBgF,QAAAA;AAAvB,OAAD,CAAR;AACApI,MAAAA,OAAO,CAACoI,QAAD,CAAP;AACD;AACF,GARD;;AASAzK,EAAAA,SAAS,CAAC,MAAM;AACduK,IAAAA,YAAY,CAACvI,OAAD,CAAZ,CADc,CAEd;AACD,GAHQ,EAGN,CAACA,OAAD,CAHM,CAAT;AAKAwG,EAAAA,OAAO,CAACC,GAAR,CAAYzH,UAAU,CAACwC,IAAI,CAACtB,KAAL,CAAWiI,QAAX,EAAD,CAAtB;;AAEA,QAAMO,MAAM,GAAG,YAAY;AACzB,QAAI3I,MAAJ,EAAY;AACVwB,MAAAA,eAAe,CAAC,IAAD,CAAf;;AACA,UAAI;AACF,cAAM8F,SAAS,GAAG,CAChB,MAAMhI,SAAS,CAACqF,UAAV,CAAqB,OAArB,EAA8BW,GAA9B,CAAkCrF,OAAlC,EAA2C4E,GAA3C,EADU,EAEhB0C,MAFF;;AAGA,YAAI,CAACD,SAAL,EAAgB;AACd;AACA/H,UAAAA,KAAK,CAACiI,KAAN,CAAY,mCAAZ;AACAhG,UAAAA,eAAe,CAAC,KAAD,CAAf;AACA;AACD;;AAED,cAAMsF,QAAQ,GAAG,IAAIrI,QAAJ,CACfI,gBADe,EAEfH,WAAW,CAACqI,GAFG,EAGfhH,OAAO,CAACiH,SAAR,EAHe,CAAjB;AAKA,cAAMS,WAAW,GAAG,IAAIhJ,QAAJ,CAClBO,oBADkB,EAElBL,QAAQ,CAACoI,GAFS,EAGlBhH,OAAO,CAACiH,SAAR,EAHkB,CAApB;AAKA,cAAM;AACJC,UAAAA,OADI;AAEJL,UAAAA,QAFI;AAGJzG,UAAAA,KAHI;AAIJD,UAAAA,EAJI;AAKJ0I,UAAAA,SALI;AAMJ3G,UAAAA,WANI;AAOJ4G,UAAAA;AAPI,YAQFpH,IARJ;AAUA,cAAMsG,UAAU,GAAG,MAAMN,WAAW,CAACO,gBAAZ,CACvB/H,OADuB,EAEvBlB,kBAFuB,CAAzB;;AAIA,YAAI,CAACgJ,UAAL,EAAiB;AACf,gBAAME,OAAO,GAAG,MAAMR,WAAW,CAACS,iBAAZ,CACpBnJ,kBADoB,EAEpB,IAFoB,CAAtB;AAIA,gBAAMkJ,OAAO,CAACN,IAAR,EAAN;AACD,SAzCC,CA2CF;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,YAAIjD,GAAJ,CApEE,CAqEF;AACA;AACA;AACA;AACA;;AAEA,YAAIuC,OAAO,KAAK,CAAhB,EAAmB;AACjB,cAAIhF,WAAW,KAAK,KAApB,EAA2B;AACzBwE,YAAAA,OAAO,CAACC,GAAR,CACEoC,IAAI,CAACC,SAAL,CAAe;AACb9B,cAAAA,OADa;AAEb4B,cAAAA,OAFa;AAGb1I,cAAAA,KAAK,EAAElB,UAAU,CAACkB,KAAK,CAACiI,QAAN,EAAD,CAHJ;AAIbnG,cAAAA,WAJa;AAKb2G,cAAAA,SALa;AAMbhC,cAAAA,QANa;AAOboC,cAAAA,IAAI,EAAE/I,OAPO;AAQbgJ,cAAAA,KAAK,EAAEhK,UAAU,CAACkB,KAAK,CAACiI,QAAN,EAAD;AARJ,aAAf,CADF,EAWE,IAXF,EAYE,CAZF;AAeA1D,YAAAA,GAAG,GAAG,MAAMoC,QAAQ,CAACoC,MAAT,CACVjC,OADU,EAEV4B,OAFU,EAGV5J,UAAU,CAACkB,KAAK,CAACiI,QAAN,EAAD,CAHA,EAIVnG,WAJU,EAKV2G,SALU,EAMVhC,QANU,EAOV;AAAEoC,cAAAA,IAAI,EAAE/I,OAAR;AAAiBgJ,cAAAA,KAAK,EAAEhK,UAAU,CAACkB,KAAK,CAACiI,QAAN,EAAD;AAAlC,aAPU,CAAZ,CAhByB,CAyBzB;AACA;AACA;AACA;AACA;AACA;AACD,WA/BD,MA+BO;AACL,kBAAMe,aAAa,GAAG,IAAI1K,QAAJ,CACpBK,aAAa,CAACmD,WAAD,CAAb,CAA2BmH,YADP,EAEpBtK,aAAa,CAACmD,WAAD,CAAb,CAA2B8E,GAFP,EAGpBhH,OAAO,CAACiH,SAAR,EAHoB,CAAtB;AAKA,kBAAMiB,OAAO,GAAG,MAAMkB,aAAa,CAAClB,OAAd,CACpBjJ,oBADoB,EAEpBC,UAAU,CAACkB,KAAK,CAACiI,QAAN,EAAD,CAFU,CAAtB;AAIA,kBAAMH,OAAO,CAACN,IAAR,EAAN;AAEAjD,YAAAA,GAAG,GAAG,MAAMoC,QAAQ,CAACoC,MAAT,CACVjC,OADU,EAEV4B,OAFU,EAGV5J,UAAU,CAACkB,KAAK,CAACiI,QAAN,EAAD,CAHA,EAIVnG,WAJU,EAKV2G,SALU,EAMVhC,QANU,EAOV;AAAEoC,cAAAA,IAAI,EAAE/I,OAAR;AAAiBgJ,cAAAA,KAAK,EAAEhK,UAAU,CAACkB,KAAK,CAACiI,QAAN,EAAD;AAAlC,aAPU,CAAZ;AASD;AACF,SAtDD,MAsDO;AACL,cAAInG,WAAW,KAAK,KAApB,EAA2B;AACzByC,YAAAA,GAAG,GAAG,MAAMoC,QAAQ,CAACuC,GAAT,CACVpC,OADU,EAEVhI,UAAU,CAACkB,KAAK,CAACiI,QAAN,EAAD,CAFA,EAGVnG,WAHU,EAIV;AAAE+G,cAAAA,IAAI,EAAE/I,OAAR;AAAiBgJ,cAAAA,KAAK,EAAEhK,UAAU,CAACkB,KAAK,CAACiI,QAAN,EAAD;AAAlC,aAJU,CAAZ;AAMD,WAPD,MAOO;AACL,kBAAMe,aAAa,GAAG,IAAI1K,QAAJ,CACpBK,aAAa,CAACmD,WAAD,CAAb,CAA2BmH,YADP,EAEpBtK,aAAa,CAACmD,WAAD,CAAb,CAA2B8E,GAFP,EAGpBhH,OAAO,CAACiH,SAAR,EAHoB,CAAtB;AAKA,kBAAMiB,OAAO,GAAG,MAAMkB,aAAa,CAAClB,OAAd,CACpBlJ,kBADoB,EAEpBE,UAAU,CAACkB,KAAK,CAACiI,QAAN,EAAD,CAFU,CAAtB;AAIA,kBAAMH,OAAO,CAACN,IAAR,EAAN;AACAjD,YAAAA,GAAG,GAAG,MAAMoC,QAAQ,CAACuC,GAAT,CACVpC,OADU,EAEVhI,UAAU,CAACkB,KAAK,CAACiI,QAAN,EAAD,CAFA,EAGVnG,WAHU,EAIV;AAAE+G,cAAAA,IAAI,EAAE/I,OAAR;AAAiBgJ,cAAAA,KAAK,EAAEhK,UAAU,CAACkB,KAAK,CAACiI,QAAN,EAAD;AAAlC,aAJU,CAAZ;AAMD;AACF;;AAED1D,QAAAA,GAAG,CACAiD,IADH,GAEG2B,IAFH,CAEQ,MAAOC,MAAP,IAAkB;AACtB9C,UAAAA,OAAO,CAACC,GAAR,CAAY6C,MAAZ;AACA,cAAIC,KAAK,GAAG,CAAZ;AACA,gBAAMC,MAAM,GAAGF,MAAH,aAAGA,MAAH,uBAAGA,MAAM,CAAEE,MAAvB;;AACA,cAAIA,MAAM,CAACxE,MAAP,GAAgB,CAApB,EAAuB;AACrBuE,YAAAA,KAAK,GAAGC,MAAM,CAACA,MAAM,CAACxE,MAAP,GAAgB,CAAjB,CAAN,CAA0ByE,IAA1B,CAA+B,OAA/B,EAAwCtB,QAAxC,EAAR;AACD;;AACD,gBAAM9I,SAAS,CACZqF,UADG,CACQ,MADR,EAEHW,GAFG,CAECpF,EAFD,EAGH0H,MAHG,CAGI;AACNX,YAAAA,OAAO,EAAEvB,QAAQ,CAAC8D,KAAD,CADX;AAENtH,YAAAA,MAAM,EAAE,KAFF;AAGNL,YAAAA,KAAK,EAAE5B,OAHD;AAIN6B,YAAAA,IAAI,EAAE,CAJA;AAKNC,YAAAA,QAAQ,EAAE;AALJ,WAHJ,CAAN;AAUA,gBAAM4H,SAAS,GAAGlI,IAAI,CAACI,KAAvB;AACAyC,UAAAA,eAAe,CAAC,EACd,GAAG7C,IADW;AAEdwF,YAAAA,OAAO,EAAEvB,QAAQ,CAAC8D,KAAD,CAFH;AAGdtH,YAAAA,MAAM,EAAE,KAHM;AAIdL,YAAAA,KAAK,EAAE5B,OAJO;AAKd6B,YAAAA,IAAI,EAAE,CALQ;AAMdC,YAAAA,QAAQ,EAAE;AANI,WAAD,CAAf;AAQAI,UAAAA,SAAS,CAAC,KAAD,CAAT;AAEA7C,UAAAA,SAAS,CAACqF,UAAV,CAAqB,SAArB,EAAgCiF,GAAhC,CAAoC;AAClCrE,YAAAA,MAAM,EAAEtF,OAD0B;AAElC4J,YAAAA,SAAS,EAAEF,SAFuB;AAGlCH,YAAAA,KAAK,EAAEtJ,EAH2B;AAIlC8F,YAAAA,UAAU,EAAE,CAJsB;AAKlC7F,YAAAA,KAAK,EAAEkI,UAAU,CAAClI,KAAD,CALiB;AAMlC2B,YAAAA,IAAI,EAAErC,MAAM,GAAGkG,OAAT;AAN4B,WAApC;AAQAnB,UAAAA,UAAU,CAACtE,EAAD,CAAV;AACAsB,UAAAA,eAAe,CAAC,KAAD,CAAf;AACAiB,UAAAA,WAAW,CAAC,KAAD,CAAX;AACAlD,UAAAA,KAAK,CAACsI,OAAN,CAAc,+BAAd;AACD,SA1CH,EA2CGiC,KA3CH,CA2CUjD,GAAD,IAAS;AACdtH,UAAAA,KAAK,CAACiI,KAAN,CAAY,eAAZ;AACAhG,UAAAA,eAAe,CAAC,KAAD,CAAf;AACD,SA9CH;AA+CD,OA5MD,CA4ME,OAAOqF,GAAP,EAAY;AAAA;;AACZJ,QAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACAtH,QAAAA,KAAK,CAACiI,KAAN,CACE,CAAAX,GAAG,SAAH,IAAAA,GAAG,WAAH,yBAAAA,GAAG,CAAEzB,IAAL,wDAAW2E,OAAX,IAAqBlD,GAAG,CAACzB,IAAJ,CAAS2E,OAA9B,GAAwC,mBAD1C;AAGAvI,QAAAA,eAAe,CAAC,KAAD,CAAf;AACD;AACF,KArND,MAqNO;AACLjC,MAAAA,KAAK,CAACiI,KAAN,CAAY,mCAAZ;AACAhG,MAAAA,eAAe,CAAC,KAAD,CAAf;AACD;AACF,GA1ND;;AA4NA,QAAMwI,MAAM,GAAG,YAAY;AACzB,QAAIhK,MAAJ,EAAY;AACV,UACEG,KAAK,GAAGsB,IAAI,CAACtB,KAAb,IACCkI,UAAU,CAAC3F,WAAW,CAACuH,MAAb,CAAV,GAAiC,CAAjC,IAAsC9J,KAAK,GAAGsB,IAAI,CAACtB,KAAL,GAAa,GAF9D,EAGE;AACAZ,QAAAA,KAAK,CAACiI,KAAN,CAAY,2CAAZ;AACA;AACD;;AACDhG,MAAAA,eAAe,CAAC,IAAD,CAAf;;AACA,UAAI;AACF,cAAM8F,SAAS,GAAG,CAChB,MAAMhI,SAAS,CAACqF,UAAV,CAAqB,OAArB,EAA8BW,GAA9B,CAAkCrF,OAAlC,EAA2C4E,GAA3C,EADU,EAEhB0C,MAFF;;AAGA,YAAI,CAACD,SAAL,EAAgB;AACd;AACA/H,UAAAA,KAAK,CAACiI,KAAN,CAAY,mCAAZ;AACAhG,UAAAA,eAAe,CAAC,KAAD,CAAf;AACA;AACD;;AACD,cAAMsF,QAAQ,GAAG,IAAIrI,QAAJ,CACfM,kBADe,EAEfL,WAAW,CAACqI,GAFG,EAGfhH,OAAO,CAACiH,SAAR,EAHe,CAAjB;AAMA,cAAM;AAAEC,UAAAA,OAAF;AAAWhF,UAAAA;AAAX,YAA2BR,IAAjC;AACA,YAAIiD,GAAJ;;AACA,YAAIzC,WAAW,KAAK,KAApB,EAA2B;AACzByC,UAAAA,GAAG,GAAG,MAAMoC,QAAQ,CAACoD,SAAT,CACVjD,OADU,EAEVhF,WAFU,EAGVhD,UAAU,CAACkB,KAAK,CAACiI,QAAN,EAAD,CAHA,EAIV;AACEY,YAAAA,IAAI,EAAE/I,OADR;AAEEgJ,YAAAA,KAAK,EAAEhK,UAAU,CAACkB,KAAK,CAACiI,QAAN,EAAD;AAFnB,WAJU,CAAZ;AASD,SAVD,MAUO;AACL1D,UAAAA,GAAG,GAAG,MAAMoC,QAAQ,CAACoD,SAAT,CACVjD,OADU,EAEVhF,WAFU,EAGVhD,UAAU,CAACkB,KAAK,CAACiI,QAAN,EAAD,CAHA,EAIV;AACEY,YAAAA,IAAI,EAAE/I,OADR;AAEEgJ,YAAAA,KAAK,EAAEhK,UAAU,CAACkB,KAAK,CAACiI,QAAN,EAAD;AAFnB,WAJU,CAAZ;AASD;;AAED1D,QAAAA,GAAG,CACAiD,IADH,GAEG2B,IAFH,CAEQ,MAAOC,MAAP,IAAkB;AACtB,gBAAMrC,YAAY,GAAG,MAAMJ,QAAQ,CAACK,QAAT,CAAkBF,OAAlB,CAA3B;AACA,gBAAM3H,SAAS,CACZqF,UADG,CACQ,MADR,EAEHW,GAFG,CAECpF,EAFD,EAGH0H,MAHG,CAGI;AACNzH,YAAAA,KAAK,EAAEkI,UAAU,CAAClI,KAAD,CADX;AAEN;AACA4B,YAAAA,QAAQ,EAAE,SAHJ;AAIND,YAAAA,IAAI,EACF,CAAC4D,QAAQ,CAACwB,YAAY,CAACiD,QAAd,CAAR,GACCzE,QAAQ,CAACwB,YAAY,CAACkD,YAAd,CADV,IAEA;AAPI,WAHJ,CAAN;AAYA9F,UAAAA,eAAe,CAAC,EACd,GAAG7C,IADW;AAEdtB,YAAAA,KAAK,EAAEkI,UAAU,CAAClI,KAAD,CAFH;AAGd;AACA4B,YAAAA,QAAQ,EAAE,SAJI;AAKdD,YAAAA,IAAI,EACF,CAAC4D,QAAQ,CAACwB,YAAY,CAACiD,QAAd,CAAR,GACCzE,QAAQ,CAACwB,YAAY,CAACkD,YAAd,CADV,IAEA;AARY,WAAD,CAAf;AAUAzH,UAAAA,cAAc,CAAC,IAAD,CAAd;AACAF,UAAAA,WAAW,CAAC,KAAD,CAAX;AACAlD,UAAAA,KAAK,CAACsI,OAAN,CAAc,kCAAd;AAEAvI,UAAAA,SAAS,CAACqF,UAAV,CAAqB,SAArB,EAAgCiF,GAAhC,CAAoC;AAClCrE,YAAAA,MAAM,EAAEtF,OAD0B;AAElC4J,YAAAA,SAAS,EAAE5J,OAFuB;AAGlCuJ,YAAAA,KAAK,EAAEtJ,EAH2B;AAIlC8F,YAAAA,UAAU,EAAE,CAJsB;AAKlC7F,YAAAA,KAAK,EAAEkI,UAAU,CAAClI,KAAD,CALiB;AAMlC2B,YAAAA,IAAI,EAAErC,MAAM,GAAGkG,OAAT;AAN4B,WAApC;AAQAnB,UAAAA,UAAU,CAACtE,EAAD,CAAV;AACAqC,UAAAA,QAAQ,CAAC,KAAD,CAAR;AACAf,UAAAA,eAAe,CAAC,KAAD,CAAf;AACD,SAzCH,EA0CGsI,KA1CH,CA0CUjD,GAAD,IAAS;AACdtH,UAAAA,KAAK,CAACiI,KAAN,CAAY,uBAAZ;AACAjF,UAAAA,QAAQ,CAAC,KAAD,CAAR;AACAf,UAAAA,eAAe,CAAC,KAAD,CAAf;AACD,SA9CH;AA+CD,OAvFD,CAuFE,OAAOqF,GAAP,EAAY;AACZtH,QAAAA,KAAK,CAACiI,KAAN,CAAY,uBAAZ;AACAjF,QAAAA,QAAQ,CAAC,KAAD,CAAR;AACAf,QAAAA,eAAe,CAAC,KAAD,CAAf;AACD;AACF,KArGD,MAqGO;AACLjC,MAAAA,KAAK,CAACiI,KAAN,CAAY,mCAAZ;AACD;AACF,GAzGD;;AA2GA,QAAMM,YAAY,GAAG,YAAY;AAC/B,QAAI9H,MAAJ,EAAY;AACVwB,MAAAA,eAAe,CAAC,IAAD,CAAf;;AACA,UAAI;AACF,cAAMsF,QAAQ,GAAG,IAAIrI,QAAJ,CACfM,kBADe,EAEfL,WAAW,CAACqI,GAFG,EAGfhH,OAAO,CAACiH,SAAR,EAHe,CAAjB;AAKA,cAAMS,WAAW,GAAG,IAAIhJ,QAAJ,CAClBG,WADkB,EAElBD,QAAQ,CAACoI,GAFS,EAGlBhH,OAAO,CAACiH,SAAR,EAHkB,CAApB;AAKA,cAAMS,WAAW,CAACA,WAAlB;AAEA,cAAM;AAAER,UAAAA,OAAF;AAAWL,UAAAA,QAAX;AAAqB3E,UAAAA;AAArB,YAAqCR,IAA3C;AACA,cAAM4I,cAAc,GAAG3E,QAAQ,CAACrE,aAAD,CAAR,GAA0B,IAAjD,CAdE,CAeF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,cAAMqD,GAAG,GAAG,MAAMoC,QAAQ,CAACwD,aAAT,CAChBrD,OADgB,EAEhBA,OAAO,KAAK,CAFI,EAGhBL,QAHgB,EAIhByD,cAJgB,EAKhBpL,UAAU,CAACmE,QAAQ,CAACgF,QAAT,EAAD,CALM,EAMhBnG,WANgB,EAOhBhC,OAPgB,EAQhB;AAAE+I,UAAAA,IAAI,EAAE/I,OAAR;AAAiBgJ,UAAAA,KAAK,EAAEhK,UAAU,CAACmE,QAAQ,CAACgF,QAAT,EAAD;AAAlC,SARgB,CAAlB;AAUA1D,QAAAA,GAAG,CACAiD,IADH,GAEG2B,IAFH,CAEQ,MAAOC,MAAP,IAAkB;AACtB,gBAAME,MAAM,GAAGF,MAAH,aAAGA,MAAH,uBAAGA,MAAM,CAAEE,MAAvB;;AACA,cAAIA,MAAM,CAACxE,MAAP,GAAgB,CAApB,EAAuB;AACrB,kBAAMyE,IAAI,GAAGD,MAAM,CAACA,MAAM,CAACxE,MAAP,GAAgB,CAAjB,CAAN,CAA0ByE,IAAvC;AACA,kBAAMpK,SAAS,CACZqF,UADG,CACQ,MADR,EAEHW,GAFG,CAECpF,EAFD,EAGH0H,MAHG,CAGI;AACN1F,cAAAA,MAAM,EAAE,IADF;AAENH,cAAAA,QAAQ,EAAE,SAFJ;AAGNkF,cAAAA,OAAO,EAAEvB,QAAQ,CAACgE,IAAI,CAACzC,OAAN,CAHX;AAINsD,cAAAA,cAAc,EAAEtK,OAJV;AAKNoB,cAAAA,aAAa,EAAEgJ,cALT;AAMNvI,cAAAA,IAAI,EACF,CAAC4D,QAAQ,CAACgE,IAAI,CAACS,QAAN,CAAR,GAA0BzE,QAAQ,CAACgE,IAAI,CAACc,YAAN,CAAnC,IACA,IARI;AASNrK,cAAAA,KAAK,EAAEkI,UAAU,CAACjF,QAAD;AATX,aAHJ,CAAN;AAcAkB,YAAAA,eAAe,CAAC,EACd,GAAG7C,IADW;AAEdS,cAAAA,MAAM,EAAE,IAFM;AAGdH,cAAAA,QAAQ,EAAE,SAHI;AAIdV,cAAAA,aAAa,EAAEgJ,cAJD;AAKdE,cAAAA,cAAc,EAAEtK,OALF;AAMdgH,cAAAA,OAAO,EAAEvB,QAAQ,CAACgE,IAAI,CAACzC,OAAN,CANH;AAOdnF,cAAAA,IAAI,EACF,CAAC4D,QAAQ,CAACgE,IAAI,CAACS,QAAN,CAAR,GAA0BzE,QAAQ,CAACgE,IAAI,CAACc,YAAN,CAAnC,IACA,IATY;AAUdrK,cAAAA,KAAK,EAAEkI,UAAU,CAACjF,QAAD;AAVH,aAAD,CAAf;AAYA,kBAAM8D,YAAY,GAAG,MAAMJ,QAAQ,CAACK,QAAT,CACzBzB,QAAQ,CAACgE,IAAI,CAACzC,OAAN,CADiB,CAA3B;AAGAtE,YAAAA,cAAc,CAACuE,YAAD,CAAd;AACA5H,YAAAA,SAAS,CAACqF,UAAV,CAAqB,SAArB,EAAgCiF,GAAhC,CAAoC;AAClCrE,cAAAA,MAAM,EAAEtF,OAD0B;AAElC4J,cAAAA,SAAS,EAAE5J,OAFuB;AAGlCuJ,cAAAA,KAAK,EAAEtJ,EAH2B;AAIlC8F,cAAAA,UAAU,EAAE,CAJsB;AAKlC7F,cAAAA,KAAK,EAAEkI,UAAU,CAACjF,QAAD,CALiB;AAMlCtB,cAAAA,IAAI,EAAErC,MAAM,GAAGkG,OAAT;AAN4B,aAApC;AAQAnB,YAAAA,UAAU,CAACtE,EAAD,CAAV;AACAiD,YAAAA,aAAa,CAAC,KAAD,CAAb;AACA3B,YAAAA,eAAe,CAAC,KAAD,CAAf;AACAiB,YAAAA,WAAW,CAAC,KAAD,CAAX;AACAlD,YAAAA,KAAK,CAACsI,OAAN,CAAc,uBAAd;AACD;AACF,SAlDH,EAmDGiC,KAnDH,CAmDUjD,GAAD,IAAS;AACd1E,UAAAA,SAAS,CAAC,KAAD,CAAT;AACAgB,UAAAA,aAAa,CAAC,KAAD,CAAb;AACA3B,UAAAA,eAAe,CAAC,KAAD,CAAf;AACAjC,UAAAA,KAAK,CAACiI,KAAN,CAAY,0BAAZ;AACD,SAxDH;AAyDD,OArGD,CAqGE,OAAOX,GAAP,EAAY;AACZ1E,QAAAA,SAAS,CAAC,KAAD,CAAT;AACA5C,QAAAA,KAAK,CAACiI,KAAN,CAAY,0BAAZ;AACArE,QAAAA,aAAa,CAAC,KAAD,CAAb;AACA3B,QAAAA,eAAe,CAAC,KAAD,CAAf;AACD;AACF,KA7GD,MA6GO;AACLjC,MAAAA,KAAK,CAACiI,KAAN,CAAY,kCAAZ;AACAhG,MAAAA,eAAe,CAAC,KAAD,CAAf;AACD;AACF,GAlHD;;AAoHA,QAAMiJ,aAAa,GAAG,YAAY;AAChC,QAAIzK,MAAJ,EAAY;AACVwB,MAAAA,eAAe,CAAC,IAAD,CAAf;;AACA,UAAI;AACF,cAAMsF,QAAQ,GAAG,IAAIrI,QAAJ,CACfM,kBADe,EAEfL,WAAW,CAACqI,GAFG,EAGfhH,OAAO,CAACiH,SAAR,EAHe,CAAjB;AAKA,cAAM;AAAEC,UAAAA;AAAF,YAAcxF,IAApB;AACA,cAAMiD,GAAG,GAAG,MAAMoC,QAAQ,CAAC2D,aAAT,CAAuBxD,OAAvB,CAAlB;AACAvC,QAAAA,GAAG,CACAiD,IADH,GAEG2B,IAFH,CAEQ,MAAOC,MAAP,IAAkB;AACtB,gBAAMjK,SAAS,CAACqF,UAAV,CAAqB,MAArB,EAA6BW,GAA7B,CAAiCpF,EAAjC,EAAqC0H,MAArC,CAA4C;AAChD9F,YAAAA,IAAI,EAAE,CAD0C;AAEhDC,YAAAA,QAAQ,EAAE,KAFsC;AAGhDwI,YAAAA,cAAc,EAAE,IAHgC;AAIhDrI,YAAAA,MAAM,EAAE;AAJwC,WAA5C,CAAN;AAMAoC,UAAAA,eAAe,CAAC,EACd,GAAG7C,IADW;AAEdM,YAAAA,QAAQ,EAAE,KAFI;AAGdD,YAAAA,IAAI,EAAE,CAHQ;AAIdyI,YAAAA,cAAc,EAAE,IAJF;AAKdrI,YAAAA,MAAM,EAAE;AALM,WAAD,CAAf;AAOAC,UAAAA,SAAS,CAAC,KAAD,CAAT;AACAQ,UAAAA,cAAc,CAAC,IAAD,CAAd;AAEArD,UAAAA,SAAS,CAACqF,UAAV,CAAqB,SAArB,EAAgCiF,GAAhC,CAAoC;AAClCrE,YAAAA,MAAM,EAAEtF,OAD0B;AAElC4J,YAAAA,SAAS,EAAE5J,OAFuB;AAGlCuJ,YAAAA,KAAK,EAAEtJ,EAH2B;AAIlC8F,YAAAA,UAAU,EAAE,CAJsB;AAKlC7F,YAAAA,KAAK,EAAEsB,IAAI,CAACtB,KALsB;AAMlC2B,YAAAA,IAAI,EAAErC,MAAM,GAAGkG,OAAT;AAN4B,WAApC;AAQAnB,UAAAA,UAAU,CAACtE,EAAD,CAAV;AACAX,UAAAA,KAAK,CAACsI,OAAN,CAAc,qBAAd;AACArG,UAAAA,eAAe,CAAC,KAAD,CAAf;AACAiB,UAAAA,WAAW,CAAC,KAAD,CAAX;AACD,SA/BH,EAgCGqH,KAhCH,CAgCUjD,GAAD,IAAS;AACdtH,UAAAA,KAAK,CAACiI,KAAN,CAAY,0BAAZ;AACAhG,UAAAA,eAAe,CAAC,KAAD,CAAf;AACD,SAnCH;AAoCD,OA5CD,CA4CE,OAAOqF,GAAP,EAAY;AACZtH,QAAAA,KAAK,CAACiI,KAAN,CAAY,0BAAZ;AACAhG,QAAAA,eAAe,CAAC,KAAD,CAAf;AACD;AACF,KAlDD,MAkDO;AACLjC,MAAAA,KAAK,CAACiI,KAAN,CAAY,kCAAZ;AACD;AACF,GAtDD;;AAwDA,QAAMkD,UAAU,GAAG,YAAY;AAC7B,QAAI1K,MAAJ,EAAY;AACVwB,MAAAA,eAAe,CAAC,IAAD,CAAf;;AACA,UAAI;AACF,cAAMsF,QAAQ,GAAG,IAAIrI,QAAJ,CACfM,kBADe,EAEfL,WAAW,CAACqI,GAFG,EAGfhH,OAAO,CAACiH,SAAR,EAHe,CAAjB;AAKA,cAAMS,WAAW,GAAG,IAAIhJ,QAAJ,CAClBG,WADkB,EAElBD,QAAQ,CAACoI,GAFS,EAGlBhH,OAAO,CAACiH,SAAR,EAHkB,CAApB;AAKA,cAAM;AAAEC,UAAAA;AAAF,YAAcxF,IAApB;AACA,cAAMsG,UAAU,GAAG,MAAMN,WAAW,CAACO,gBAAZ,CACvB/H,OADuB,EAEvBlB,kBAFuB,CAAzB;;AAIA,YAAI,CAACgJ,UAAL,EAAiB;AACf,gBAAME,OAAO,GAAG,MAAMR,WAAW,CAACS,iBAAZ,CACpBnJ,kBADoB,EAEpB,IAFoB,CAAtB;AAIA,gBAAMkJ,OAAO,CAACN,IAAR,EAAN;AACD;;AACD,cAAMjD,GAAG,GAAG,MAAMoC,QAAQ,CAAC4D,UAAT,CAAoBzD,OAApB,CAAlB;AACAvC,QAAAA,GAAG,CACAiD,IADH,GAEG2B,IAFH,CAEQ,MAAOC,MAAP,IAAkB;AACtB,gBAAMjK,SAAS,CACZqF,UADG,CACQ,MADR,EAEHW,GAFG,CAECpF,EAFD,EAGH0H,MAHG,CAGI;AACN7F,YAAAA,QAAQ,EAAE,KADJ;AAEND,YAAAA,IAAI,EAAE,CAFA;AAGNT,YAAAA,aAAa,EAAE,IAHT;AAINkJ,YAAAA,cAAc,EAAE,IAJV;AAKNrI,YAAAA,MAAM,EAAE,KALF;AAMNL,YAAAA,KAAK,EACHa,WAAW,CAACiI,MAAZ,KACA,4CADA,GAEIjI,WAAW,CAACiI,MAFhB,GAGIjI,WAAW,CAACkI;AAVZ,WAHJ,CAAN;AAeAtG,UAAAA,eAAe,CAAC,EACd,GAAG7C,IADW;AAEdM,YAAAA,QAAQ,EAAE,KAFI;AAGdD,YAAAA,IAAI,EAAE,CAHQ;AAIdT,YAAAA,aAAa,EAAE,IAJD;AAKdkJ,YAAAA,cAAc,EAAE,IALF;AAMdrI,YAAAA,MAAM,EAAE,KANM;AAOdL,YAAAA,KAAK,EACHa,WAAW,CAACiI,MAAZ,KACA,4CADA,GAEIjI,WAAW,CAACiI,MAFhB,GAGIjI,WAAW,CAACkI;AAXJ,WAAD,CAAf;AAaAzI,UAAAA,SAAS,CAAC,KAAD,CAAT;AAEA,cACEO,WAAW,CAACiI,MAAZ,KACA,4CAFF,EAIErL,SAAS,CAACqF,UAAV,CAAqB,SAArB,EAAgCiF,GAAhC,CAAoC;AAClCrE,YAAAA,MAAM,EAAE7C,WAAW,CAACiI,MADc;AAElCd,YAAAA,SAAS,EAAEnH,WAAW,CAACkI,OAFW;AAGlCpB,YAAAA,KAAK,EAAEtJ,EAH2B;AAIlC8F,YAAAA,UAAU,EAAE,CAJsB;AAKlC7F,YAAAA,KAAK,EAAEsB,IAAI,CAACtB,KALsB;AAMlC2B,YAAAA,IAAI,EAAErC,MAAM,GAAGkG,OAAT;AAN4B,WAApC;AAQFrG,UAAAA,SAAS,CAACqF,UAAV,CAAqB,SAArB,EAAgCiF,GAAhC,CAAoC;AAClCrE,YAAAA,MAAM,EAAEtF,OAD0B;AAElC4J,YAAAA,SAAS,EAAE5J,OAFuB;AAGlCuJ,YAAAA,KAAK,EAAEtJ,EAH2B;AAIlC8F,YAAAA,UAAU,EAAE,CAJsB;AAKlC7F,YAAAA,KAAK,EAAEsB,IAAI,CAACtB,KALsB;AAMlC2B,YAAAA,IAAI,EAAErC,MAAM,GAAGkG,OAAT;AAN4B,WAApC;AAQAnB,UAAAA,UAAU,CAACtE,EAAD,CAAV;AACAyC,UAAAA,cAAc,CAAC,IAAD,CAAd;AACAF,UAAAA,WAAW,CAAC,KAAD,CAAX;AACAlD,UAAAA,KAAK,CAACsI,OAAN,CAAc,sBAAd;AACArG,UAAAA,eAAe,CAAC,KAAD,CAAf;AACD,SA1DH,EA2DGsI,KA3DH,CA2DUjD,GAAD,IAAS;AACdtH,UAAAA,KAAK,CAACiI,KAAN,CAAY,4BAAZ;AACAhG,UAAAA,eAAe,CAAC,KAAD,CAAf;AACD,SA9DH;AA+DD,OAvFD,CAuFE,OAAOqF,GAAP,EAAY;AACZtH,QAAAA,KAAK,CAACiI,KAAN,CAAY,4BAAZ;AACAhG,QAAAA,eAAe,CAAC,KAAD,CAAf;AACD;AACF,KA7FD,MA6FO;AACLjC,MAAAA,KAAK,CAACiI,KAAN,CAAY,mCAAZ;AACD;AACF,GAjGD;;AAmGAvJ,EAAAA,SAAS,CAAC,MAAM;AACd4M,IAAAA,WAAW,CAACpJ,IAAI,CAACQ,WAAN,CAAX;AACD,GAFQ,EAEN,CAACR,IAAI,CAACQ,WAAN,CAFM,CAAT;;AAIA,QAAM4I,WAAW,GAAIC,eAAD,IAAqB;AACvC,UAAMC,KAAK,GAAGD,eAAe,KAAK,KAApB,GAA4B,aAA5B,GAA4C,aAA1D;AACApL,IAAAA,KAAK,CACFmF,GADH,CAEK,qDAAoDkG,KAAM,oBAF/D,EAIGzB,IAJH,CAIS5E,GAAD,IAAS;AACb+B,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBhC,GAApB;;AACA,UAAIA,GAAG,CAACsG,MAAJ,KAAe,GAAnB,EAAwB;AAAA;;AACtB,cAAMC,QAAQ,sBAAGvG,GAAG,CAACU,IAAJ,CAAS2F,KAAT,CAAH,oDAAG,gBAAiBG,GAAlC;AACA,YAAID,QAAJ,EAAchI,OAAO,CAACgI,QAAD,CAAP;AACf;AACF,KAVH,EAWGnB,KAXH,CAWUjD,GAAD,IAASJ,OAAO,CAACC,GAAR,CAAYG,GAAZ,CAXlB;AAYD,GAdD;;AAeA5I,EAAAA,SAAS,CAAC,MAAM;AACdsI,IAAAA,OAAO,CAACrG,EAAD,CAAP;AACAsE,IAAAA,UAAU,CAACtE,EAAD,CAAV,CAFc,CAGd;AACD,GAJQ,EAIN,CAACF,MAAD,EAASE,EAAT,CAJM,CAAT;AAMAjC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIoK,UAAU,CAAC3F,WAAD,aAACA,WAAD,uBAACA,WAAW,CAAEuH,MAAd,CAAV,GAAkC,CAAtC,EAAyC7I,eAAe,CAACK,IAAI,CAACtB,KAAL,GAAa,GAAd,CAAf,CAAzC,KACKiB,eAAe,CAACK,IAAI,CAACtB,KAAN,CAAf;AACN,GAHQ,EAGN,CAACsB,IAAI,CAACtB,KAAN,EAAauC,WAAb,CAHM,CAAT;;AAKA,QAAMyI,QAAQ,GAAG,QAAkD;AAAA,QAAjD;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,KAAR;AAAeC,MAAAA,OAAf;AAAwBC,MAAAA,OAAxB;AAAiCC,MAAAA;AAAjC,KAAiD;AACjE,wBACE;AACE,MAAA,KAAK,EAAE;AACLC,QAAAA,SAAS,EAAE,QADN;AAEL1H,QAAAA,KAAK,EAAE,OAFF;AAGL2H,QAAAA,SAAS,EAAE,EAHN;AAILC,QAAAA,QAAQ,EAAE;AAJL,OADT;AAAA,iBAQGP,IARH,YAQeC,KARf,OAQuBC,OARvB,OAQiCC,OARjC;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAYD,GAbD,CAt5Bc,CAo6BdsBACE;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCAEE;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA,iCACE,QAAC,UAAD;AAAY,YAAA,IAAI,EAAE5L;AAAlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF,eAUE;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,+BAAf;AAAA,mCACE;AAAA,wBAAK8B,IAAI,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAVF,eAeE;AAAK,UAAA,SAAS,EAAC,mDAAf;AAAA,kCACE;AAAG,YAAA,SAAS,EAAC,iDAAb;AAAA,mCACE;AAAM,cAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,MAAD;AACE,YAAA,QAAQ,EAAE4G,WADZ;AAEE,YAAA,OAAO,EAAErG,MAFX;AAGE,YAAA,QAAQ,EAAET,IAAI,CAACI,KAAL,KAAe5B,OAAf,IAA0BwB,IAAI,CAACK,IAAL,GAAY,CAHlD;AAIE,YAAA,MAAM,EAAE;AAJV;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eA6BE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,gCAEE;AAAK,UAAA,SAAS,EAAC,mCAAf;AAAA,iCACE,QAAC,SAAD;AAAW,YAAA,IAAI,EAAEL;AAAjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF,eAQE;AAAK,UAAA,SAAS,EAAC,8CAAf;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,oCACE;AAAK,cAAA,SAAS,EAAC,aAAf;AAAA,sCACE;AAAM,gBAAA,KAAK,EAAC,uBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAA,0BAAIA,IAAI,CAACG;AAAT;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAME,QAAC,WAAD;AAAa,cAAA,IAAI,EAAEH;AAAnB;AAAA;AAAA;AAAA;AAAA,oBANF,eAQE;AAAK,cAAA,SAAS,EAAC,cAAf;AAAA,qCACE,QAAC,IAAD;AACE,gBAAA,WAAW,EAAEmB,WADf;AAEE,gBAAA,QAAQ,EAAEE,QAFZ;AAGE,gBAAA,IAAI,EAAErB,IAHR;AAIE,gBAAA,KAAK,EAAEvB;AAJT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBARF,eAkBE;AAAK,cAAA,SAAS,EAAC,aAAf;AAAA,sCACE;AAAK,gBAAA,SAAS,EAAC,cAAf;AAAA,0BACGuB,IAAI,CAACM,QAAL,KAAkB,KAAlB,KACEN,IAAI,CAACK,IAAL,GAAY,CAAZ,gBACC;AAAA,0CACE;AAAA,4CACE;AACE,sBAAA,KAAK,EAAC,4BADR;AAEE,sBAAA,OAAO,EAAC,WAFV;AAAA,6CAIE;AAAM,wBAAA,CAAC,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,4BADF,EAMS,GANT;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAUE;AAAK,oBAAA,SAAS,EAAC,aAAf;AAAA,2CACE,QAAC,SAAD;AAAW,sBAAA,IAAI,EAAEL,IAAI,CAACK,IAAtB;AAA4B,sBAAA,QAAQ,EAAEqJ;AAAtC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,0BAVF;AAAA,gCADD,gBAgBC;AAAK,kBAAA,SAAS,EAAC,aAAf;AAAA,0CACE;AAAO,oBAAA,SAAS,EAAC,aAAjB;AAA+B,oBAAA,OAAO,EAAC,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAIE;AACE,oBAAA,EAAE,EAAC,QADL;AAEE,oBAAA,IAAI,EAAC,QAFP;AAGE,oBAAA,SAAS,EAAC,cAHZ;AAIE,oBAAA,KAAK,EAAE9J,aAJT;AAKE,oBAAA,QAAQ,MALV;AAME,oBAAA,QAAQ,EAAGiF,CAAD,IAAOhF,gBAAgB,CAACgF,CAAC,CAACsF,MAAF,CAAS3C,KAAV,CANnC;AAAA,4CAQE;AAAQ,sBAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BARF,eASE;AAAQ,sBAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BATF,eAUE;AAAQ,sBAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAVF,eAWE;AAAQ,sBAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAXF,eAYE;AAAQ,sBAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAZF;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJF;AAAA;AAAA;AAAA;AAAA;AAAA,wBAjBH;AADH;AAAA;AAAA;AAAA;AAAA,sBADF,eAyCE;AAAK,gBAAA,SAAS,EAAC,cAAf;AAAA,wCACE;AAAA,4BACGxH,IAAI,CAACM,QAAL,KAAkB,KAAlB,GAA0B,OAA1B,GAAoC;AADvC;AAAA;AAAA;AAAA;AAAA,wBADF,EAIGN,IAAI,CAACS,MAAL,iBACC;AAAA,6BACGmG,UAAU,CAAClH,YAAD,CAAV,CAAyB0K,OAAzB,CAAiC,CAAjC,CADH,OACyCpK,IAAI,CAACQ,WAD9C,EAC2D,GAD3D,eAEE;AAAA;AAAA;AAAA;AAAA,0BAFF,QAGK,CAACoG,UAAU,CAAClH,YAAD,CAAV,GAA2B6B,IAA5B,EAAkC6I,OAAlC,CAA0C,CAA1C,CAHL;AAAA;AAAA;AAAA;AAAA;AAAA,wBALJ,EAWGpK,IAAI,CAACS,MAAL,iBACC;AAAK,kBAAA,SAAS,EAAC,WAAf;AAAA,yCACE;AAAK,oBAAA,SAAS,EAAC,UAAf;AAAA,2CACE,QAAC,UAAD;AACE,sBAAA,OAAO,EAAEqB,WADX;AAEE,sBAAA,MAAM,EAAE,CACN9B,IAAI,CAACmH,SADC,EAENnH,IAAI,CAACQ,WAAL,KAAqB,KAArB,GAA6B,CAA7B,GAAiC,CAF3B,EAGN,MACER,IAAI,CAACmH,SADP,IAEGnH,IAAI,CAACQ,WAAL,KAAqB,KAArB,GAA6B,CAA7B,GAAiC,CAFpC,CAHM,CAFV;AASE,sBAAA,IAAI,EAAC,KATP;AAUE,sBAAA,KAAK,EAAE;AAVT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBAzCF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAlBF,EA2FIC,MAAM,IAAIjC,OAAO,IAAEmC,OAApB,iBACC;AAAA,sCACE;AAAK,gBAAA,SAAS,EAAC,0CAAf;AAAA,wCACE;AACE,kBAAA,EAAE,EAAC,SADL;AAEE,kBAAA,IAAI,EAAC,UAFP;AAGE,kBAAA,IAAI,EAAC,SAHP;AAIE,kBAAA,OAAO,EAAEI,QAJX;AAKE,kBAAA,QAAQ,EAAE,MAAM;AACdC,oBAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACD;AAPH;AAAA;AAAA;AAAA;AAAA,wBADF,eAUE;AAAO,kBAAA,SAAS,EAAC,aAAjB;AAA+B,kBAAA,OAAO,EAAC,SAAvC;AAAA,+CACiB,GADjB,eAEE;AACE,oBAAA,IAAI,EAAC,sDADP;AAEE,oBAAA,MAAM,EAAC,QAFT;AAGE,oBAAA,SAAS,EAAC,gBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFF;AAAA;AAAA;AAAA;AAAA;AAAA,wBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAsBGA,QAAQ,iBACP;AAAK,gBAAA,SAAS,EAAC,aAAf;AAAA,0BACGf,IAAI,CAACM,QAAL,KAAkB,KAAlB,gBACC;AACE,kBAAA,SAAS,EAAC,+CADZ;AAEE,kBAAA,OAAO,EAAE4G,MAFX;AAAA,4BAIGpH,YAAY,GAAG,YAAH,GAAkB;AAJjC;AAAA;AAAA;AAAA;AAAA,wBADD,GAOGE,IAAI,CAACK,IAAL,GAAY,CAAZ,gBACF;AAAA,6BACG,EAAE,CAAAY,WAAW,SAAX,IAAAA,WAAW,WAAX,YAAAA,WAAW,CAAEkI,OAAb,MAAyB3K,OAA3B,kBACC;AACE,oBAAA,QAAQ,EACNsB,YAAY,IACZE,IAAI,CAACK,IAAL,GAAYrC,MAAM,GAAGkG,OAAT,EADZ,IAEA,CAAAjD,WAAW,SAAX,IAAAA,WAAW,WAAX,YAAAA,WAAW,CAAEkI,OAAb,MAAyB3K,OAFzB,IAGA,CAAAyC,WAAW,SAAX,IAAAA,WAAW,WAAX,YAAAA,WAAW,CAAEiI,MAAb,MAAwB1K,OAL5B;AAOE,oBAAA,SAAS,EAAC,6DAPZ;AAQE,oBAAA,OAAO,EAAE,MAAM;AACbsC,sBAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,qBAVH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFJ,EAiBG,CAAAG,WAAW,SAAX,IAAAA,WAAW,WAAX,YAAAA,WAAW,CAAEkI,OAAb,MAAyB3K,OAAzB,IACCwB,IAAI,CAACK,IAAL,GAAYrC,MAAM,GAAGkG,OAAT,EADb,KAEED,QAAQ,CAAChD,WAAD,aAACA,WAAD,uBAACA,WAAW,CAAEuH,MAAd,CAAR,KAAkC,CAAlC,gBACC;AACE,oBAAA,QAAQ,EAAE1I,YADZ;AAEE,oBAAA,SAAS,EAAC,6CAFZ;AAGE,oBAAA,OAAO,EAAEkJ,aAHX;AAAA,8BAKGlJ,YAAY,GAAG,YAAH,GAAkB;AALjC;AAAA;AAAA;AAAA;AAAA,0BADD,gBASC;AACE,oBAAA,QAAQ,EAAE,IADZ;AAEE,oBAAA,SAAS,EAAC,6CAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAXH,CAjBH,EAmCG,CAAC,CAAAmB,WAAW,SAAX,IAAAA,WAAW,WAAX,YAAAA,WAAW,CAAEkI,OAAb,MAAyB3K,OAAzB,IACA,CAAAyC,WAAW,SAAX,IAAAA,WAAW,WAAX,YAAAA,WAAW,CAAEiI,MAAb,MAAwB1K,OADzB,KAECwB,IAAI,CAACK,IAAL,GAAYrC,MAAM,GAAGkG,OAAT,EAFb,iBAGG;AACE,oBAAA,QAAQ,EAAEpE,YADZ;AAEE,oBAAA,SAAS,EAAC,6CAFZ;AAGE,oBAAA,OAAO,EAAEmJ,UAHX;AAAA,8BAKGnJ,YAAY,GAAG,YAAH,GAAkB;AALjC;AAAA;AAAA;AAAA;AAAA,0BAtCN;AAAA,gCADE,GAiDFE,IAAI,CAACI,KAAL,KAAe5B,OAAf,iBACE;AACE,kBAAA,QAAQ,EAAEsB,YADZ;AAEE,kBAAA,SAAS,EAAC,6CAFZ;AAGE,kBAAA,OAAO,EAAEuG,YAHX;AAAA,4BAKGvG,YAAY,GAAG,YAAH,GAAkB;AALjC;AAAA;AAAA;AAAA;AAAA;AA1DN;AAAA;AAAA;AAAA;AAAA,sBAvBJ;AAAA,4BA5FJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cA7BF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAuOGe,KAAK,iBACJ;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACE;AACE,UAAA,SAAS,EAAC,cADZ;AAEE,UAAA,OAAO,EAAE,MAAM;AACbC,YAAAA,QAAQ,CAAC,KAAD,CAAR;AACD;AAJH;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE;AAAK,UAAA,SAAS,EAAC,kDAAf;AAAA,kCACE;AACE,YAAA,SAAS,EAAC,cADZ;AAEE,YAAA,OAAO,EAAE,MAAM;AACbA,cAAAA,QAAQ,CAAC,KAAD,CAAR;AACD,aAJH;AAAA,mCAME;AAAK,cAAA,KAAK,EAAC,4BAAX;AAAwC,cAAA,OAAO,EAAC,WAAhD;AAAA,qCACE;AAAM,gBAAA,CAAC,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,kBADF,eAWE;AAAI,YAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXF,eAYE;AAAK,YAAA,SAAS,EAAC,8BAAf;AAAA,oCACE;AAAO,cAAA,SAAS,EAAC,aAAjB;AAA+B,cAAA,OAAO,EAAC,UAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE;AACE,cAAA,EAAE,EAAC,UADL;AAEE,cAAA,IAAI,EAAC,QAFP;AAGE,cAAA,KAAK,EAAEpC,KAHT;AAIE,cAAA,WAAW,EAAG,6BAA4BsB,IAAI,CAACQ,WAAY,GAJ7D;AAKE,cAAA,SAAS,EAAC,aALZ;AAME,cAAA,QAAQ,EAAGqE,CAAD,IAAOlG,QAAQ,CAACkG,CAAC,CAACsF,MAAF,CAAS3C,KAAV;AAN3B;AAAA;AAAA;AAAA;AAAA,oBAJF,eAYE;AAAM,cAAA,SAAS,EAAC,8BAAhB;AAAA,4CACkB,CAAC9I,KAAK,GAAG6C,IAAT,EAAe6I,OAAf,CAAuB,CAAvB,CADlB;AAAA;AAAA;AAAA;AAAA;AAAA,oBAZF,eAeE;AAAM,cAAA,SAAS,EAAC,8BAAhB;AAAA,2CACiB1K,YAAY,CAAC0K,OAAb,CAAqB,CAArB,CADjB;AAAA;AAAA;AAAA;AAAA;AAAA,oBAfF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAZF,eA+BE;AACE,YAAA,SAAS,EAAC,WADZ;AAEE,YAAA,OAAO,EAAE7B,MAFX;AAGE,YAAA,QAAQ,EAAEzI,YAHZ;AAAA,sBAKGA,YAAY,GAAG,YAAH,GAAkB;AALjC;AAAA;AAAA;AAAA;AAAA,kBA/BF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAxOJ,EA0RG2B,UAAU,iBACT;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,cAAf;AAA8B,UAAA,OAAO,EAAEqF;AAAvC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,kDAAf;AAAA,kCACE;AAAQ,YAAA,SAAS,EAAC,cAAlB;AAAiC,YAAA,OAAO,EAAEA,WAA1C;AAAA,mCACE;AAAK,cAAA,KAAK,EAAC,4BAAX;AAAwC,cAAA,OAAO,EAAC,WAAhD;AAAA,qCACE;AAAM,gBAAA,CAAC,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAME;AAAI,YAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF,eAOE;AAAK,YAAA,SAAS,EAAC,8BAAf;AAAA,oCACE;AAAO,cAAA,SAAS,EAAC,aAAjB;AAA+B,cAAA,OAAO,EAAC,UAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE;AACE,cAAA,EAAE,EAAC,UADL;AAEE,cAAA,IAAI,EAAC,UAFP;AAGE,cAAA,SAAS,EAAC,kCAHZ;AAIE,cAAA,KAAK,EAAExG,QAJT;AAKE,cAAA,QAAQ,EAAGuE,CAAD,IAAO;AACfjD,gBAAAA,WAAW,CAAC5B,IAAI,CAACtB,KAAN,CAAX;AACAmD,gBAAAA,WAAW,CAACgD,CAAC,CAACsF,MAAF,CAAS3C,KAAV,CAAX;AACD,eARH;AAAA,sCAUE;AAAQ,gBAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAVF,eAWE;AAAQ,gBAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,EAiBGlH,QAAQ,KAAK,SAAb,iBACC;AAAK,cAAA,SAAS,EAAC,aAAf;AAAA,sCACE;AAAO,gBAAA,SAAS,EAAC,aAAjB;AAA+B,gBAAA,OAAO,EAAC,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAIE;AACE,gBAAA,EAAE,EAAC,QADL;AAEE,gBAAA,IAAI,EAAC,QAFP;AAGE,gBAAA,SAAS,EAAC,cAHZ;AAIE,gBAAA,KAAK,EAAEV,aAJT;AAKE,gBAAA,QAAQ,EAAGiF,CAAD,IAAOhF,gBAAgB,CAACgF,CAAC,CAACsF,MAAF,CAAS3C,KAAV,CALnC;AAAA,wCAOE;AAAQ,kBAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAPF,eAQE;AAAQ,kBAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBARF,eASE;AAAQ,kBAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBATF,eAUE;AAAQ,kBAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAVF,eAWE;AAAQ,kBAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAlBJ,eAqCE;AAAO,cAAA,SAAS,EAAC,aAAjB;AAA+B,cAAA,OAAO,EAAC,aAAvC;AAAA,yBACGlH,QAAQ,KAAK,KAAb,GAAqB,QAArB,GAAgC,OADnC;AAAA;AAAA;AAAA;AAAA;AAAA,oBArCF,eAwCE;AACE,cAAA,EAAE,EAAC,aADL;AAEE,cAAA,IAAI,EAAC,QAFP;AAGE,cAAA,IAAI,EAAC,aAHP;AAIE,cAAA,SAAS,EAAC,uBAJZ;AAKE,cAAA,WAAW,EAAC,oBALd;AAME,cAAA,KAAK,EAAEqB,QAAQ,IAAI,CANrB;AAOE,cAAA,QAAQ,EAAGkD,CAAD,IAAO;AACfjD,gBAAAA,WAAW,CAACiD,CAAC,CAACsF,MAAF,CAAS3C,KAAV,CAAX;AACD;AATH;AAAA;AAAA;AAAA;AAAA,oBAxCF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF,eA2DE;AACE,YAAA,SAAS,EAAC,WADZ;AAEE,YAAA,OAAO,EAAE,MAAM;AACb7B,cAAAA,UAAU,CAAC,KAAD,CAAV;AACD,aAJH;AAKE,YAAA,QAAQ,EAAE7F,YALZ;AAAA,sBAOGA,YAAY,GAAG,YAAH,GAAkB;AAPjC;AAAA;AAAA;AAAA;AAAA,kBA3DF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YA3RJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyWD;;GAz4CQzB,I;UAC8BtB,Y,EACtBa,S,EAsEElB,W;;;KAxEV2B,I;AA24CT,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport BreadCrumb from \"components/BreadCrumb\";\nimport AssetItem from \"components/AssetItem\";\nimport AssetAuthor from \"components/AssetAuthor\";\nimport ApexCharts from \"react-apexcharts\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport Market_INFO from \"artifacts/contracts/Marketplace.sol/FlokinomicsNFTMarketplace.json\";\nimport NFT_INFO from \"artifacts/contracts/FlokinomicsNFT.sol/FlokinomicsNFT.json\";\nimport {\n  NFT_ADDRESS,\n  CONTRACT_ADDRESS,\n  PAYMENT_TOKEN,\n  NFT_MARKET_ADDRESS,\n  NFT_CONTRACT_ADDRESS,\n} from \"../../constants\";\nimport { parseUnits } from \"@ethersproject/units\";\nimport Axios from \"axios\";\nimport Tabs from \"./Tabs\";\nimport Switch from \"react-switch\";\nimport \"styles/activity.css\";\nimport { useParams } from \"react-router-dom\";\nimport { firestore } from \"../../firebase\";\nimport { toast } from \"react-toastify\";\nimport Countdown from \"react-countdown\";\nimport moment from \"moment\";\nimport axios from \"axios\";\n// import { BigNumber } from \"ethers\";\n\nconst breadcrumb = [\n  { title: \"Home\", page: \"/\" },\n  { title: \"Item\", page: \"/item\" },\n];\n\nfunction Item() {\n  const { library, active, account } = useWeb3React();\n  const { id } = useParams();\n  const [price, setPrice] = useState(0);\n  const [user, setUser] = useState({\n    account: account,\n    avatar: \"assets/img/avatars/avatar.jpg\",\n    ownerAvatar: \"assets/img/avatars/avatar.jpg\",\n    imageCover: \"/assets/img/bg/bg.png\",\n    firstName: \"User\",\n    lastName: \"\",\n    nickName: \"@user\",\n    bio: \"\",\n    twitter: \"\",\n    telegram: \"\",\n    instagram: \"\",\n    subscribe: \"\",\n    followers: [],\n  });\n  const [currentPrice, setCurrentPrice] = useState(0);\n  const [auctionLength, setAuctionLength] = useState(\"12\");\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [item, setItem] = useState({\n    name: \"\",\n    description: \"\",\n    owner: account || null,\n    time: 0,\n    saleType: \"fix\",\n    likes: [],\n    price: 0,\n    paymentType: \"BNB\",\n  });\n  const [isSale, setIsSale] = useState(false);\n  const [isOwner, setIsOwner] = useState(false);\n  const [isBid, setIsBid] = useState(false);\n  const [isAccept, setIsAccept] = useState(false);\n  const [auctionInfo, setAuctionInfo] = useState(null);\n  const [historyData, setHistoryData] = useState([]);\n  const [bidsData, setBidsData] = useState([]);\n  const [rate, setRate] = useState(10);\n  const [showUpdate, setShowUpdate] = useState(false);\n  const [newPrice, setNewPrice] = useState(item.price);\n  const [saleType, setSaleType] = useState(item.saleType);\n\n  const [chartOption] = useState({\n    chart: {\n      width: 380,\n      type: \"pie\",\n    },\n    labels: [\"Creator's Royalty\", \"Platform fee\", \"Seller\"],\n    theme: {\n      monochrome: {\n        enabled: true,\n        color: \"#0000ff\",\n      },\n    },\n    responsive: [\n      {\n        breakpoint: 480,\n        options: {\n          chart: {\n            id: \"pie-chart\",\n            width: 200,\n          },\n          legend: {\n            position: \"bottom\",\n          },\n        },\n      },\n    ],\n  });\n\n  const dispatch = useDispatch();\n\n  const dispatchNftItem = (payload) => {\n    dispatch({ type: \"SET_SELECTED\", payload });\n    setItem(payload);\n    setNewPrice(payload.price);\n    setSaleType(payload.saleType);\n  };\n\n  const getHistory = async (item_id) => {\n    const res = await firestore\n      .collection(\"history\")\n      .where(\"nftId\", \"==\", item_id)\n      .get();\n    let nft_history = [];\n    for (let i = 0; i < res.docs.length; i++) {\n      const x = res.docs[i];\n      const temp = x.data();\n      const user_info = (\n        await firestore.collection(\"users\").doc(temp.userId).get()\n      ).data();\n      const kcsPrice = temp.price;\n      const timespace = parseInt((moment().valueOf() - temp.time) / 60000);\n      const timeAgo =\n        timespace < 1\n          ? \"less than a minute\"\n          : timespace < 60\n          ? `${timespace} min ago`\n          : timespace < 24 * 60\n          ? `${parseInt(timespace / 60)} hrs ago`\n          : moment(temp.time).format(\"YYYY/MM/DD\");\n      nft_history.push({\n        avatar: user_info?.avatar || \"/assets/img/avatars/avatar.jpg\",\n        kcsPrice,\n        timeAgo,\n        nickName: user_info?.nickName,\n        verified: true,\n        time: temp.time,\n        actionType: temp.actionType,\n      });\n    }\n    const history_data = nft_history.sort((a, b) => b.time - a.time);\n    setHistoryData(history_data);\n    setBidsData(history_data.filter((e) => e.actionType > 1));\n  };\n  const getItem = async (item_id) => {\n    const res = await firestore.collection(\"nfts\").doc(item_id).get();\n    let nft_item = res.data();\n    console.log(nft_item.owner)\n    console.log(account)\n    setIsOwner(nft_item.owner)\n    let nftInfo = { data: {} };\n    try {\n      nftInfo = await Axios.get(nft_item.tokenURI);\n    } catch (err) {\n      console.log(err);\n    }\n    dispatchNftItem({ id, ...user, ...nft_item, ...nftInfo.data });\n    if (active) {\n      const contract = new Contract(\n        NFT_MARKET_ADDRESS,\n        Market_INFO.abi,\n        library.getSigner()\n      );\n      // const cur_price = await contract.listedMap(nft_item.tokenId);\n      // console.log(cur_price);\n      // const prov = ethers.getDefaultProvider();\n      // const pp = await contract.balanceOf((await prov.getSigners())[0].address);\n\n      // const bal = await prov.getBalance(account);\n\n      if (nft_item?.tokenId !== 0) {\n        const auction_info = await contract.auctions(nft_item.tokenId);\n        setAuctionInfo(auction_info);\n      }\n    }\n    setIsSale(nft_item?.isSale);\n  };\n\n  const updateSale = async (lock = false) => {\n    setIsProcessing(true);\n    try {\n      const userExist = (await firestore.collection(\"users\").doc(account).get())\n        .exists;\n      if (!userExist) {\n        // await creatProfile(account);\n        toast.error(\"Please create your profile first.\");\n        setIsProcessing(false);\n        return;\n      }\n\n      const contract = new Contract(\n        NFT_MARKET_ADDRESS,\n        Market_INFO.abi,\n        library.getSigner()\n      );\n      const nftContract = new Contract(\n        NFT_ADDRESS,\n        NFT_INFO.abi,\n        library.getSigner()\n      );\n      if (item.isSale) {\n        if (item.tokenId !== 0) {\n          const res = await contract.closeTrade(item.tokenId);\n          await res.wait();\n        }\n        await firestore.collection(\"nfts\").doc(id).update({\n          isSale: false,\n          time: 0,\n          saleType: \"fix\",\n        });\n        setItem({\n          ...item,\n          isSale: false,\n          time: 0,\n          saleType: \"fix\",\n        });\n        toast.success(\"Delisted from marketplace successfully\");\n        setShowUpdate(false);\n        setIsProcessing(false);\n      } else {\n        if (newPrice <= 0) {\n          toast.error(\"Price should not be zero.\");\n          setIsProcessing(false);\n          return;\n        }\n        if (saleType === \"auction\") {\n          await startAuction();\n        } else {\n          if (item.tokenId !== 0) {\n            const isApproved = await nftContract.isApprovedForAll(\n              account,\n              NFT_MARKET_ADDRESS\n            );\n            if (!isApproved) {\n              const approve = await nftContract.setApprovalForAll(\n                NFT_MARKET_ADDRESS,\n                true\n              );\n              await approve.wait();\n            }\n            const res = await contract.openTrade(\n              item.tokenId,\n              parseUnits(newPrice.toString()),\n              item.paymentType\n            );\n            await res.wait();\n          }\n          await firestore\n            .collection(\"nfts\")\n            .doc(id)\n            .update({\n              price: parseFloat(newPrice),\n              saleType: \"fix\",\n              isSale: true,\n              time: 0,\n            });\n          setItem({\n            ...item,\n            price: parseFloat(newPrice),\n            saleType: \"fix\",\n            isSale: true,\n            time: 0,\n          });\n          toast.success(\"Listed on marketplace successfully\");\n          setShowUpdate(false);\n          setIsProcessing(false);\n        }\n      }\n    } catch (err) {\n      setIsSale((prev) => !prev);\n      setShowUpdate(false);\n      toast.error(\"Fail to update: \" + err);\n      setIsProcessing(false);\n    }\n  };\n\n  const showUpdates = () => {\n    if (isSale && !showUpdate) updateSale(true);\n    setShowUpdate(!isSale);\n    setIsSale((prev) => !prev);\n  };\n\n  // const creatProfile = async (user_account) => {\n  //   const author = {\n  //     avatar: \"/assets/img/avatars/avatar.jpg\",\n  //     imageCover: \"/assets/img/bg/bg.png\",\n  //     ownerAvatar: \"/assets/img/avatars/avatar.jpg\",\n  //     firstName: \"User\",\n  //     lastName: \"\",\n  //     nickName: \"@user\",\n  //     account: user_account,\n  //     bio: \"\",\n  //     twitter: \"\",\n  //     telegram: \"\",\n  //     instagram: \"\",\n  //     subscribe: \"\",\n  //     followers: [],\n  //   };\n  //   await firestore.collection(\"users\").doc(user_account).set(author);\n  // };\n\n  const dispatchUser = async (user_id) => {\n    if (user_id) {\n      const userInfo = (\n        await firestore.collection(\"users\").doc(user_id).get()\n      ).data();\n      dispatch({ type: \"SET_PROFILE\", userInfo });\n      setUser(userInfo);\n    }\n  };\n  useEffect(() => {\n    dispatchUser(account);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [account]);\n\n  console.log(parseUnits(item.price.toString()));\n\n  const buyNft = async () => {\n    if (active) {\n      setIsProcessing(true);\n      try {\n        const userExist = (\n          await firestore.collection(\"users\").doc(account).get()\n        ).exists;\n        if (!userExist) {\n          // await creatProfile(account);\n          toast.error(\"Please create your profile first.\");\n          setIsProcessing(false);\n          return;\n        }\n\n        const contract = new Contract(\n          CONTRACT_ADDRESS,\n          Market_INFO.abi,\n          library.getSigner()\n        );\n        const nftContract = new Contract(\n          NFT_CONTRACT_ADDRESS,\n          NFT_INFO.abi,\n          library.getSigner()\n        );\n        const {\n          tokenId,\n          tokenURI,\n          price,\n          id,\n          royalties,\n          paymentType,\n          creator,\n        } = item;\n\n        const isApproved = await nftContract.isApprovedForAll(\n          account,\n          NFT_MARKET_ADDRESS\n        );\n        if (!isApproved) {\n          const approve = await nftContract.setApprovalForAll(\n            NFT_MARKET_ADDRESS,\n            true\n          );\n          await approve.wait();\n        }\n\n        // const approve = await nftContract.approve(\n        //   CONTRACT_ADDRESS,\n        //   parseUnits(price.toString())\n        // );\n        // await approve.wait();\n\n        // const tokenContract = new Contract(\n        //   PAYMENT_TOKEN[paymentType].tokenAddress,\n        //   PAYMENT_TOKEN[paymentType].abi,\n        //   library.getSigner()\n        // );\n        // const approve = await tokenContract.approve(\n        //   NFT_MARKET_ADDRESS,\n        //   parseUnits(price.toString())\n        // );\n        // await approve.wait();\n\n        //console.log(isApproved);\n        // if (!isApproved) {\n        //   const approve = await nftContract.setApprovalForAll(\n        //     NFT_MARKET_ADDRESS,\n        //     true\n        //   );\n        //   await approve.wait();\n        // }\n        let res;\n        // contract.setTokenAddress(\n        //   paymentType,\n        //   PAYMENT_TOKEN[paymentType].tokenAddress,\n        //   NFT_ADDRESS\n        // );\n\n        if (tokenId === 0) {\n          if (paymentType === \"BNB\") {\n            console.log(\n              JSON.stringify({\n                tokenId,\n                creator,\n                price: parseUnits(price.toString()),\n                paymentType,\n                royalties,\n                tokenURI,\n                from: account,\n                value: parseUnits(price.toString()),\n              }),\n              null,\n              2\n            );\n\n            res = await contract.buyNew(\n              tokenId,\n              creator,\n              parseUnits(price.toString()),\n              paymentType,\n              royalties,\n              tokenURI,\n              { from: account, value: parseUnits(price.toString()) }\n            );\n            // res = await contract.buy(\n            //   tokenId,\n            //   parseUnits(price.toString()),\n            //   paymentType,\n            //   { from: account, value: parseUnits(price.toString()) }\n            // );\n          } else {\n            const tokenContract = new Contract(\n              PAYMENT_TOKEN[paymentType].tokenAddress,\n              PAYMENT_TOKEN[paymentType].abi,\n              library.getSigner()\n            );\n            const approve = await tokenContract.approve(\n              NFT_CONTRACT_ADDRESS,\n              parseUnits(price.toString())\n            );\n            await approve.wait();\n\n            res = await contract.buyNew(\n              tokenId,\n              creator,\n              parseUnits(price.toString()),\n              paymentType,\n              royalties,\n              tokenURI,\n              { from: account, value: parseUnits(price.toString()) }\n            );\n          }\n        } else {\n          if (paymentType === \"BNB\") {\n            res = await contract.buy(\n              tokenId,\n              parseUnits(price.toString()),\n              paymentType,\n              { from: account, value: parseUnits(price.toString()) }\n            );\n          } else {\n            const tokenContract = new Contract(\n              PAYMENT_TOKEN[paymentType].tokenAddress,\n              PAYMENT_TOKEN[paymentType].abi,\n              library.getSigner()\n            );\n            const approve = await tokenContract.approve(\n              NFT_MARKET_ADDRESS,\n              parseUnits(price.toString())\n            );\n            await approve.wait();\n            res = await contract.buy(\n              tokenId,\n              parseUnits(price.toString()),\n              paymentType,\n              { from: account, value: parseUnits(price.toString()) }\n            );\n          }\n        }\n\n        res\n          .wait()\n          .then(async (result) => {\n            console.log(result);\n            let nftId = 0;\n            const events = result?.events;\n            if (events.length > 0) {\n              nftId = events[events.length - 1].args[\"nftID\"].toString();\n            }\n            await firestore\n              .collection(\"nfts\")\n              .doc(id)\n              .update({\n                tokenId: parseInt(nftId),\n                isSale: false,\n                owner: account,\n                time: 0,\n                saleType: \"fix\",\n              });\n            const old_owner = item.owner;\n            dispatchNftItem({\n              ...item,\n              tokenId: parseInt(nftId),\n              isSale: false,\n              owner: account,\n              time: 0,\n              saleType: \"fix\",\n            });\n            setIsSale(false);\n\n            firestore.collection(\"history\").add({\n              userId: account,\n              oldUserId: old_owner,\n              nftId: id,\n              actionType: 1,\n              price: parseFloat(price),\n              time: moment().valueOf(),\n            });\n            getHistory(id);\n            setIsProcessing(false);\n            setIsAccept(false);\n            toast.success(\"You bought a NFT successfully\");\n          })\n          .catch((err) => {\n            toast.error(\"Failed to Buy\");\n            setIsProcessing(false);\n          });\n      } catch (err) {\n        console.log(err);\n        toast.error(\n          err?.data?.message ? err.data.message : \"Failed to buy NFT\"\n        );\n        setIsProcessing(false);\n      }\n    } else {\n      toast.error(\"Please connect your wallet first.\");\n      setIsProcessing(false);\n    }\n  };\n\n  const bidNft = async () => {\n    if (active) {\n      if (\n        price < item.price ||\n        (parseFloat(auctionInfo.amount) > 0 && price < item.price * 1.1)\n      ) {\n        toast.error(\"Bid amount must not less than minimum bid\");\n        return;\n      }\n      setIsProcessing(true);\n      try {\n        const userExist = (\n          await firestore.collection(\"users\").doc(account).get()\n        ).exists;\n        if (!userExist) {\n          // await creatProfile(account);\n          toast.error(\"Please create your profile first.\");\n          setIsProcessing(false);\n          return;\n        }\n        const contract = new Contract(\n          NFT_MARKET_ADDRESS,\n          Market_INFO.abi,\n          library.getSigner()\n        );\n\n        const { tokenId, paymentType } = item;\n        let res;\n        if (paymentType === \"BNB\") {\n          res = await contract.createBid(\n            tokenId,\n            paymentType,\n            parseUnits(price.toString()),\n            {\n              from: account,\n              value: parseUnits(price.toString()),\n            }\n          );\n        } else {\n          res = await contract.createBid(\n            tokenId,\n            paymentType,\n            parseUnits(price.toString()),\n            {\n              from: account,\n              value: parseUnits(price.toString()),\n            }\n          );\n        }\n\n        res\n          .wait()\n          .then(async (result) => {\n            const auction_info = await contract.auctions(tokenId);\n            await firestore\n              .collection(\"nfts\")\n              .doc(id)\n              .update({\n                price: parseFloat(price),\n                // owner: account,\n                saleType: \"auction\",\n                time:\n                  (parseInt(auction_info.duration) +\n                    parseInt(auction_info.firstBidTime)) *\n                  1000,\n              });\n            dispatchNftItem({\n              ...item,\n              price: parseFloat(price),\n              // owner: account,\n              saleType: \"auction\",\n              time:\n                (parseInt(auction_info.duration) +\n                  parseInt(auction_info.firstBidTime)) *\n                1000,\n            });\n            setAuctionInfo(null);\n            setIsAccept(false);\n            toast.success(\"You have placed bid this auction\");\n\n            firestore.collection(\"history\").add({\n              userId: account,\n              oldUserId: account,\n              nftId: id,\n              actionType: 2,\n              price: parseFloat(price),\n              time: moment().valueOf(),\n            });\n            getHistory(id);\n            setIsBid(false);\n            setIsProcessing(false);\n          })\n          .catch((err) => {\n            toast.error(\"Failed to bid auction\");\n            setIsBid(false);\n            setIsProcessing(false);\n          });\n      } catch (err) {\n        toast.error(\"Failed to bid auction\");\n        setIsBid(false);\n        setIsProcessing(false);\n      }\n    } else {\n      toast.error(\"Please connect your wallet first.\");\n    }\n  };\n\n  const startAuction = async () => {\n    if (active) {\n      setIsProcessing(true);\n      try {\n        const contract = new Contract(\n          NFT_MARKET_ADDRESS,\n          Market_INFO.abi,\n          library.getSigner()\n        );\n        const nftContract = new Contract(\n          NFT_ADDRESS,\n          NFT_INFO.abi,\n          library.getSigner()\n        );\n        await nftContract.nftContract;\n\n        const { tokenId, tokenURI, paymentType } = item;\n        const auction_length = parseInt(auctionLength) * 3600;\n        // const auction_length = 1200;\n        // const isApproved = await nftContract.isApprovedForAll(\n        //   account,\n        //   NFT_MARKET_ADDRESS\n        // );\n        // console.log(\n        //   \"isApproved\",\n        //   isApproved,\n        //   newPrice,\n        //   auction_length,\n        //   account\n        // );\n        // if (!isApproved) {\n        //   const approve = await nftContract.setApprovalForAll(\n        //     NFT_MARKET_ADDRESS,\n        //     true\n        //   );\n        //   await approve.wait();\n        // }\n        const res = await contract.createAuction(\n          tokenId,\n          tokenId === 0,\n          tokenURI,\n          auction_length,\n          parseUnits(newPrice.toString()),\n          paymentType,\n          account,\n          { from: account, value: parseUnits(newPrice.toString()) }\n        );\n        res\n          .wait()\n          .then(async (result) => {\n            const events = result?.events;\n            if (events.length > 0) {\n              const args = events[events.length - 1].args;\n              await firestore\n                .collection(\"nfts\")\n                .doc(id)\n                .update({\n                  isSale: true,\n                  saleType: \"auction\",\n                  tokenId: parseInt(args.tokenId),\n                  auctionCreator: account,\n                  auctionLength: auction_length,\n                  time:\n                    (parseInt(args.duration) + parseInt(args.auctionStart)) *\n                    1000,\n                  price: parseFloat(newPrice),\n                });\n              dispatchNftItem({\n                ...item,\n                isSale: true,\n                saleType: \"auction\",\n                auctionLength: auction_length,\n                auctionCreator: account,\n                tokenId: parseInt(args.tokenId),\n                time:\n                  (parseInt(args.duration) + parseInt(args.auctionStart)) *\n                  1000,\n                price: parseFloat(newPrice),\n              });\n              const auction_info = await contract.auctions(\n                parseInt(args.tokenId)\n              );\n              setAuctionInfo(auction_info);\n              firestore.collection(\"history\").add({\n                userId: account,\n                oldUserId: account,\n                nftId: id,\n                actionType: 3,\n                price: parseFloat(newPrice),\n                time: moment().valueOf(),\n              });\n              getHistory(id);\n              setShowUpdate(false);\n              setIsProcessing(false);\n              setIsAccept(false);\n              toast.success(\"You create an auction\");\n            }\n          })\n          .catch((err) => {\n            setIsSale(false);\n            setShowUpdate(false);\n            setIsProcessing(false);\n            toast.error(\"Failed to create auction\");\n          });\n      } catch (err) {\n        setIsSale(false);\n        toast.error(\"Failed to create auction\");\n        setShowUpdate(false);\n        setIsProcessing(false);\n      }\n    } else {\n      toast.error(\"Please connect your wallet first\");\n      setIsProcessing(false);\n    }\n  };\n\n  const cancelAuction = async () => {\n    if (active) {\n      setIsProcessing(true);\n      try {\n        const contract = new Contract(\n          NFT_MARKET_ADDRESS,\n          Market_INFO.abi,\n          library.getSigner()\n        );\n        const { tokenId } = item;\n        const res = await contract.cancelAuction(tokenId);\n        res\n          .wait()\n          .then(async (result) => {\n            await firestore.collection(\"nfts\").doc(id).update({\n              time: 0,\n              saleType: \"fix\",\n              auctionCreator: null,\n              isSale: false,\n            });\n            dispatchNftItem({\n              ...item,\n              saleType: \"fix\",\n              time: 0,\n              auctionCreator: null,\n              isSale: false,\n            });\n            setIsSale(false);\n            setAuctionInfo(null);\n\n            firestore.collection(\"history\").add({\n              userId: account,\n              oldUserId: account,\n              nftId: id,\n              actionType: 5,\n              price: item.price,\n              time: moment().valueOf(),\n            });\n            getHistory(id);\n            toast.success(\"Auction is canceled\");\n            setIsProcessing(false);\n            setIsAccept(false);\n          })\n          .catch((err) => {\n            toast.error(\"Failed to cancel auction\");\n            setIsProcessing(false);\n          });\n      } catch (err) {\n        toast.error(\"Failed to cancel auction\");\n        setIsProcessing(false);\n      }\n    } else {\n      toast.error(\"Please connect your wallet first\");\n    }\n  };\n\n  const endAuction = async () => {\n    if (active) {\n      setIsProcessing(true);\n      try {\n        const contract = new Contract(\n          NFT_MARKET_ADDRESS,\n          Market_INFO.abi,\n          library.getSigner()\n        );\n        const nftContract = new Contract(\n          NFT_ADDRESS,\n          NFT_INFO.abi,\n          library.getSigner()\n        );\n        const { tokenId } = item;\n        const isApproved = await nftContract.isApprovedForAll(\n          account,\n          NFT_MARKET_ADDRESS\n        );\n        if (!isApproved) {\n          const approve = await nftContract.setApprovalForAll(\n            NFT_MARKET_ADDRESS,\n            true\n          );\n          await approve.wait();\n        }\n        const res = await contract.endAuction(tokenId);\n        res\n          .wait()\n          .then(async (result) => {\n            await firestore\n              .collection(\"nfts\")\n              .doc(id)\n              .update({\n                saleType: \"fix\",\n                time: 0,\n                auctionLength: null,\n                auctionCreator: null,\n                isSale: false,\n                owner:\n                  auctionInfo.bidder !==\n                  \"0x0000000000000000000000000000000000000000\"\n                    ? auctionInfo.bidder\n                    : auctionInfo.Creator,\n              });\n            dispatchNftItem({\n              ...item,\n              saleType: \"fix\",\n              time: 0,\n              auctionLength: null,\n              auctionCreator: null,\n              isSale: false,\n              owner:\n                auctionInfo.bidder !==\n                \"0x0000000000000000000000000000000000000000\"\n                  ? auctionInfo.bidder\n                  : auctionInfo.Creator,\n            });\n            setIsSale(false);\n\n            if (\n              auctionInfo.bidder !==\n              \"0x0000000000000000000000000000000000000000\"\n            )\n              firestore.collection(\"history\").add({\n                userId: auctionInfo.bidder,\n                oldUserId: auctionInfo.Creator,\n                nftId: id,\n                actionType: 1,\n                price: item.price,\n                time: moment().valueOf(),\n              });\n            firestore.collection(\"history\").add({\n              userId: account,\n              oldUserId: account,\n              nftId: id,\n              actionType: 4,\n              price: item.price,\n              time: moment().valueOf(),\n            });\n            getHistory(id);\n            setAuctionInfo(null);\n            setIsAccept(false);\n            toast.success(\"Auction is completed\");\n            setIsProcessing(false);\n          })\n          .catch((err) => {\n            toast.error(\"Failed to complete auction\");\n            setIsProcessing(false);\n          });\n      } catch (err) {\n        toast.error(\"Failed to complete auction\");\n        setIsProcessing(false);\n      }\n    } else {\n      toast.error(\"Please connect your wallet first.\");\n    }\n  };\n\n  useEffect(() => {\n    updatePrice(item.paymentType);\n  }, [item.paymentType]);\n\n  const updatePrice = (_newPaymentType) => {\n    const token = _newPaymentType === \"BNB\" ? \"binancecoin\" : \"flokinomics\";\n    axios\n      .get(\n        `https://api.coingecko.com/api/v3/simple/price?ids=${token}&vs_currencies=usd`\n      )\n      .then((res) => {\n        console.log(\"res:\", res);\n        if (res.status === 200) {\n          const cur_rate = res.data[token]?.usd;\n          if (cur_rate) setRate(cur_rate);\n        }\n      })\n      .catch((err) => console.log(err));\n  };\n  useEffect(() => {\n    getItem(id);\n    getHistory(id);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [active, id]);\n\n  useEffect(() => {\n    if (parseFloat(auctionInfo?.amount) > 0) setCurrentPrice(item.price * 1.1);\n    else setCurrentPrice(item.price);\n  }, [item.price, auctionInfo]);\n\n  const renderer = ({ days, hours, minutes, seconds, completed }) => {\n    return (\n      <div\n        style={{\n          textAlign: \"center\",\n          color: \"white\",\n          marginTop: 10,\n          fontSize: 18,\n        }}\n      >\n        {days} Days {hours}:{minutes}:{seconds}\n      </div>\n    );\n  };\n  // const sss = async () => {\n  //   console.log(active);\n  //   if (active) {\n  //     const contract = new Contract(\n  //       \"0xed5E765Ac8702eF748f058e6828A1106aE2996AE\",\n  //       NFT_INFO.abi,\n  //       library.getSigner()\n  //     );\n\n  //     const nftContract = new Contract(\n  //       \"0xA96E7654330f2C8cF1acD07d3600BAeD6Bf7a417\",\n  //       NFT_INFO.abi,\n  //       library.getSigner()\n  //     );\n  //     let a = [],\n  //       b = [],\n  //       c = [],\n  //       d = [],\n  //       e = [],\n  //       f = [];\n  //     // console.log(await nftContract.ownerOf(417));\n  //     for (let i = 401; i < 420; i++) {\n  //       // const ccreator = await nftContract.creatorMap(i);\n  //       // const cprice = await nftContract.price(i);\n  //       // const cowner = await nftContract.ownerMap(i);\n  //       // // const bowner = await contract.ownerOf(i);\n  //       // const croyalty = await nftContract.royaltyMap(i);\n  //       // const clist = await nftContract.listedMap(i);\n  //       // const uris = await nftContract.tokenURI(i);\n  //       // console.log(uris);\n  //       // a.push(ccowner);\n  //       const res = await firestore\n  //         .collection(\"nfts\")\n  //         .where(\"tokenId\", \"==\", i)\n  //         .get();\n  //       let ccowner;\n  //       let uris;\n  //       if (res.docs.length > 0) {\n  //         console.log(\"exist\");\n  //         ccowner = (await res.docs[0].data()).owner;\n  //         uris = (await res.docs[0].data()).tokenURI;\n  //         b.push(ccowner);\n  //         a.push(uris);\n  //         c.push(BigNumber.from(i));\n  //       } else {\n  //         ccowner = \"\";\n  //         uris = \"\";\n  //       }\n  //       // a.push(i);\n  //       // b.push(ccreator);\n  //       // c.push(cprice);\n  //       // d.push(cowner);\n  //       // e.push(croyalty);\n  //       // f.push(false);\n  //       // const tt = new BigNumber();\n  //       // console.log(\n  //       //   i,\n  //       //   // clist,\n  //       //   cowner,\n  //       //   // bowner,\n  //       //   // ccowner,\n  //       //   // cowner === bowner && cowner === ccowner\n  //       // );\n  //     }\n  //     // console.log(c, a, b);\n  //     // await contract.addCreatorMap(false, a, b, c, d, e, f);\n  //     console.log(\"done\");\n  //     await contract.mintAll(c, b, a);\n  //   }\n  // };\n  // const sss = async () => {\n  //   if (active) {\n  //     // const contract = new Contract(\n  //     //   \"0xA96E7654330f2C8cF1acD07d3600BAeD6Bf7a417\",\n  //     //   NFT_INFO.abi,\n  //     //   library.getSigner()\n  //     // );\n\n  //     const nftContract = new Contract(\n  //       \"0xA96E7654330f2C8cF1acD07d3600BAeD6Bf7a417\",\n  //       Market_INFO.abi,\n  //       library.getSigner()\n  //     );\n  //     const ress = await firestore.collection(\"nfts\").get();\n  //     console.log(ress);\n  //     for (let i = 0; i < ress.docs.length; i++) {\n  //       const temp = await ress.docs[i].data();\n  //       if (!temp.time)\n  //         await firestore\n  //           .collection(\"nfts\")\n  //           .doc(ress.docs[i].id)\n  //           .update({ time: 0 });\n  //       console.log(temp.time);\n  //     }\n  //     // console.log(contract);\n  //     // let a = [],\n  //     //   b = [],\n  //     //   c = [];\n  //     // for (let i = 181; i < 244; i++) {\n  //     //   const res = await firestore\n  //     //     .collection(\"nfts\")\n  //     //     // .where(\"tokenId\", \"==\", i)\n  //     //     .get();\n  //     //   let ccowner, uris;\n  //     //   if (res.docs.length > 0) {\n  //     //     console.log(\"exist\");\n  //     //     const temp = await res.docs[0].data();\n  //     //     ccowner = temp.owner;\n  //     //     uris = temp.tokenURI;\n  //     //     a.push(ccowner);\n  //     //     b.push(uris);\n  //     //     // c.push(BigNumber.from(i));\n  //     //   } else {\n  //     //     ccowner = \"\";\n  //     //     uris = \"\";\n  //     //     console.log(i);\n  //     //   }\n  //     // }\n  //     // console.log(c, a, b);\n  //     // await contract.mintAll(c, a, b);\n  //     // console.log(\"done\");\n  //   }\n  // };\n\n  return (\n    <main className=\"main\">\n      <div className=\"container\">\n        <div className=\"row row--grid\">\n          {/* <!-- breadcrumb --> */}\n          <div className=\"col-12\">\n            <BreadCrumb data={breadcrumb} />\n            {/* <button onClick={sss}>\n              <span>sdfsdfsdfsd</span>\n            </button> */}\n          </div>\n          {/* <!-- end breadcrumb --> */}\n\n          <div className=\"col-12\">\n            <div className=\"main__title main__title--page\">\n              <h1>{item.name}</h1>\n            </div>\n          </div>\n          <div className=\"col-12 d-flex align-items-end justify-content-end\">\n            <p className=\"sign__text mb-0 d-flex justify-content-end mr-2\">\n              <span className=\"mt-0\">For sale:</span>\n            </p>\n            <Switch\n              onChange={showUpdates}\n              checked={isSale}\n              disabled={item.owner !== account || item.time > 0}\n              height={26}\n            />\n          </div>\n        </div>\n\n        <div className=\"row\">\n          {/* <!-- content --> */}\n          <div className=\"col-12 col-md-5  cardAssetPreview\">\n            <AssetItem data={item} />\n          </div>\n          {/* <!-- end content --> */}\n\n          {/* <!-- sidebar --> */}\n          <div className=\"col-12 col-md-7 bleuFrosted cardAssetDetails\">\n            <div className=\"asset__info\">\n              <div className=\"asset__desc\">\n                <span class=\"cardAssetDetailsLabel\">Description</span>\n                <p>{item.description}</p>\n              </div>\n\n              <AssetAuthor data={item} />\n\n              <div className=\"itemActivity\">\n                <Tabs\n                  historyData={historyData}\n                  bidsData={bidsData}\n                  item={item}\n                  docId={id}\n\n                />\n              </div>\n\n              <div className=\"asset__wrap\">\n                <div className=\"asset__timer\">\n                  {item.saleType !== \"fix\" &&\n                    (item.time > 0 ? (\n                      <>\n                        <span>\n                          <svg\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            viewBox=\"0 0 24 24\"\n                          >\n                            <path d=\"M18.3,8.59l.91-.9a1,1,0,0,0-1.42-1.42l-.9.91a8,8,0,0,0-9.79,0l-.91-.92A1,1,0,0,0,4.77,7.69l.92.91A7.92,7.92,0,0,0,4,13.5,8,8,0,1,0,18.3,8.59ZM12,19.5a6,6,0,1,1,6-6A6,6,0,0,1,12,19.5Zm-2-15h4a1,1,0,0,0,0-2H10a1,1,0,0,0,0,2Zm3,6a1,1,0,0,0-2,0v1.89a1.5,1.5,0,1,0,2,0Z\" />\n                          </svg>{\" \"}\n                          Auction ends in\n                        </span>\n                        <div className=\"card__clock\">\n                          <Countdown date={item.time} renderer={renderer} />\n                        </div>\n                      </>\n                    ) : (\n                      <div className=\"sign__group\">\n                        <label className=\"sign__label\" htmlFor=\"length\">\n                          Auction Length\n                        </label>\n                        <select\n                          id=\"length\"\n                          name=\"length\"\n                          className=\"sign__select\"\n                          value={auctionLength}\n                          disabled\n                          onChange={(e) => setAuctionLength(e.target.value)}\n                        >\n                          <option value=\"12\">12 hours</option>\n                          <option value=\"24\">24 hours</option>\n                          <option value=\"48\">2 days</option>\n                          <option value=\"72\">3 days</option>\n                          <option value=\"168\">7 days</option>\n                        </select>\n                      </div>\n                    ))}\n                </div>\n\n                <div className=\"asset__price\">\n                  <span>\n                    {item.saleType === \"fix\" ? \"Price\" : \"Minimum bid\"}\n                  </span>\n                  {item.isSale && (\n                    <span>\n                      {parseFloat(currentPrice).toFixed(2)} {item.paymentType}{\" \"}\n                      <br />\n                      (${(parseFloat(currentPrice) * rate).toFixed(2)} USD)\n                    </span>\n                  )}\n                  {item.isSale && (\n                    <div className=\"pie-chart\">\n                      <div className=\"relative\">\n                        <ApexCharts\n                          options={chartOption}\n                          series={[\n                            item.royalties,\n                            item.paymentType === \"BNB\" ? 5 : 3,\n                            100 -\n                              item.royalties -\n                              (item.paymentType === \"BNB\" ? 5 : 3),\n                          ]}\n                          type=\"pie\"\n                          width={380}\n                        />\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </div>\n              {/* <!-- actions --> */}\n              {(isSale && account==isOwner) && (\n                <>\n                  <div className=\"sign__group filter__checkboxes mb-1 mt-5\">\n                    <input\n                      id=\"private\"\n                      type=\"checkbox\"\n                      name=\"private\"\n                      checked={isAccept}\n                      onChange={() => {\n                        setIsAccept(!isAccept);\n                      }}\n                    />\n                    <label className=\"sign__label\" htmlFor=\"private\">\n                      I agree to the{\" \"}\n                      <a\n                        href=\"assets/terms/Terms and Conditions for Purchasers.pdf\"\n                        target=\"_blank\"\n                        className=\"ml-1 linkTerms\"\n                      >\n                        Terms and conditions\n                      </a>\n                    </label>\n                  </div>\n                  {isAccept && (\n                    <div className=\"asset__btns\">\n                      {item.saleType === \"fix\" ? (\n                        <button\n                          className=\"asset__btn asset__btn asset__btn--clr mx-auto\"\n                          onClick={buyNft}\n                        >\n                          {isProcessing ? \"Waiting...\" : \"Buy\"}\n                        </button>\n                      ) : item.time > 0 ? (\n                        <>\n                          {!(auctionInfo?.Creator === account) && (\n                            <button\n                              disabled={\n                                isProcessing ||\n                                item.time < moment().valueOf() ||\n                                auctionInfo?.Creator === account ||\n                                auctionInfo?.bidder === account\n                              }\n                              className=\"asset__btn asset__btn--full asset__btn--clr open-modal mr-0\"\n                              onClick={() => {\n                                setIsBid(true);\n                              }}\n                            >\n                              Place a bid\n                            </button>\n                          )}\n                          {auctionInfo?.Creator === account &&\n                            item.time > moment().valueOf() &&\n                            (parseInt(auctionInfo?.amount) === 0 ? (\n                              <button\n                                disabled={isProcessing}\n                                className=\"asset__btn asset__btn--full asset__btn--clr\"\n                                onClick={cancelAuction}\n                              >\n                                {isProcessing ? \"Waiting...\" : \"Cancel Auction\"}\n                              </button>\n                            ) : (\n                              <button\n                                disabled={true}\n                                className=\"asset__btn asset__btn--full asset__btn--clr\"\n                              >\n                                Auction is started\n                              </button>\n                            ))}\n                          {(auctionInfo?.Creator === account ||\n                            auctionInfo?.bidder === account) &&\n                            item.time < moment().valueOf() && (\n                              <button\n                                disabled={isProcessing}\n                                className=\"asset__btn asset__btn--full asset__btn--clr\"\n                                onClick={endAuction}\n                              >\n                                {isProcessing ? \"Waiting...\" : \"End Auction\"}\n                              </button>\n                            )}\n                        </>\n                      ) : (\n                        item.owner === account && (\n                          <button\n                            disabled={isProcessing}\n                            className=\"asset__btn asset__btn--full asset__btn--clr\"\n                            onClick={startAuction}\n                          >\n                            {isProcessing ? \"Waiting...\" : \"Start Auction\"}\n                          </button>\n                        )\n                      )}\n                    </div>\n                  )}\n                </>\n              )}\n              {/* <!-- end actions --> */}\n            </div>\n          </div>\n          {/* <!-- end sidebar --> */}\n        </div>\n      </div>\n      {isBid && (\n        <div className=\"mfp-wrap\">\n          <div className=\"mfp-container\">\n            <div\n              className=\"mfp-backdrop\"\n              onClick={() => {\n                setIsBid(false);\n              }}\n            ></div>\n            <div className=\"zoom-anim-dialog mfp-preloader modal modal--form\">\n              <button\n                className=\"modal__close\"\n                onClick={() => {\n                  setIsBid(false);\n                }}\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                  <path d=\"M13.41,12l4.3-4.29a1,1,0,1,0-1.42-1.42L12,10.59,7.71,6.29A1,1,0,0,0,6.29,7.71L10.59,12l-4.3,4.29a1,1,0,0,0,0,1.42,1,1,0,0,0,1.42,0L12,13.41l4.29,4.3a1,1,0,0,0,1.42,0,1,1,0,0,0,0-1.42Z\" />\n                </svg>\n              </button>\n              <h4 className=\"sign__title\">Place a bid</h4>\n              <div className=\"sign__group sign__group--row\">\n                <label className=\"sign__label\" htmlFor=\"placebid\">\n                  Your Highest bid\n                </label>\n                <input\n                  id=\"placebid\"\n                  type=\"number\"\n                  value={price}\n                  placeholder={`Place your highest bid in ${item.paymentType}.`}\n                  className=\"sign__input\"\n                  onChange={(e) => setPrice(e.target.value)}\n                />\n                <span className=\"sign__text sign__text--small\">\n                  Price in USD : {(price * rate).toFixed(2)}\n                </span>\n                <span className=\"sign__text sign__text--small\">\n                  Minimum Bid : {currentPrice.toFixed(2)}\n                </span>\n              </div>\n              <button\n                className=\"sign__btn\"\n                onClick={bidNft}\n                disabled={isProcessing}\n              >\n                {isProcessing ? \"Waiting...\" : \"Take a bid\"}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n      {showUpdate && (\n        <div className=\"mfp-wrap\">\n          <div className=\"mfp-container\">\n            <div className=\"mfp-backdrop\" onClick={showUpdates}></div>\n            <div className=\"zoom-anim-dialog mfp-preloader modal modal--form\">\n              <button className=\"modal__close\" onClick={showUpdates}>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                  <path d=\"M13.41,12l4.3-4.29a1,1,0,1,0-1.42-1.42L12,10.59,7.71,6.29A1,1,0,0,0,6.29,7.71L10.59,12l-4.3,4.29a1,1,0,0,0,0,1.42,1,1,0,0,0,1.42,0L12,13.41l4.29,4.3a1,1,0,0,0,1.42,0,1,1,0,0,0,0-1.42Z\" />\n                </svg>\n              </button>\n              <h4 className=\"sign__title\">List For Sale</h4>\n              <div className=\"sign__group sign__group--row\">\n                <label className=\"sign__label\" htmlFor=\"saleType\">\n                  Sale Type:\n                </label>\n                <select\n                  id=\"saleType\"\n                  name=\"saleType\"\n                  className=\"sign__select height-sm mt-0 mb-4\"\n                  value={saleType}\n                  onChange={(e) => {\n                    setNewPrice(item.price);\n                    setSaleType(e.target.value);\n                  }}\n                >\n                  <option value=\"fix\">Fixed</option>\n                  <option value=\"auction\">Auction</option>\n                </select>\n                {saleType === \"auction\" && (\n                  <div className=\"sign__group\">\n                    <label className=\"sign__label\" htmlFor=\"length\">\n                      Auction Length\n                    </label>\n                    <select\n                      id=\"length\"\n                      name=\"length\"\n                      className=\"sign__select\"\n                      value={auctionLength}\n                      onChange={(e) => setAuctionLength(e.target.value)}\n                    >\n                      <option value=\"12\">12 hours</option>\n                      <option value=\"24\">24 hours</option>\n                      <option value=\"48\">2 days</option>\n                      <option value=\"72\">3 days</option>\n                      <option value=\"168\">7 days</option>\n                    </select>\n                  </div>\n                )}\n                <label className=\"sign__label\" htmlFor=\"updatePrice\">\n                  {saleType === \"fix\" ? \"Update\" : \"First\"} Price:\n                </label>\n                <input\n                  id=\"updatePrice\"\n                  type=\"number\"\n                  name=\"updatePrice\"\n                  className=\"sign__input height-sm\"\n                  placeholder=\"Type update price.\"\n                  value={newPrice || 0}\n                  onChange={(e) => {\n                    setNewPrice(e.target.value);\n                  }}\n                />\n              </div>\n              <button\n                className=\"sign__btn\"\n                onClick={() => {\n                  updateSale(false);\n                }}\n                disabled={isProcessing}\n              >\n                {isProcessing ? \"Waiting...\" : \"List for sale\"}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </main>\n  );\n}\n\nexport default Item;\n"]},"metadata":{},"sourceType":"module"}