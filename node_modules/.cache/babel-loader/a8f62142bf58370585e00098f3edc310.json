{"ast":null,"code":"var _jsxFileName = \"/home/hp/Desktop/Bluefi/bluefi-frontend/src/pages/Admin/paymentToken.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { NFT_MARKET_ADDRESS } from \"../../constants\";\nimport { toast } from \"react-toastify\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport Market_INFO from \"artifacts/contracts/Marketplace.sol/FlokinomicsNFTMarketplace.json\";\nimport { isAddress } from \"@ethersproject/address\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PaymentToken() {\n  _s();\n\n  const {\n    library\n  } = useWeb3React(); // eslint-disable-next-line no-unused-vars\n\n  const [tokenAddress, setTokenAddress] = useState(\"\");\n  const [payoutAddress, setPayoutAddress] = useState(\"\");\n  const [tokenName, setTokenName] = useState(\"\");\n  const [isProcessing, setIsProcessing] = useState(false);\n\n  const setPaymentToken = async () => {\n    if (tokenName === \"\") {\n      toast.error(\"Invalid token Name!\");\n      return;\n    }\n\n    if (tokenAddress === \"\" || !isAddress(tokenAddress)) {\n      toast.error(\"Invalid token address!\");\n      return;\n    }\n\n    if (payoutAddress === \"\" || !isAddress(payoutAddress)) {\n      toast.error(\"Invalid payout address!\");\n      return;\n    }\n\n    setIsProcessing(true);\n    const contract = new Contract(NFT_MARKET_ADDRESS, Market_INFO.abi, library.getSigner());\n    const res = await contract.setTokenAddress(tokenName, tokenAddress, payoutAddress);\n    res.wait().then(async result => {\n      toast.success(\"Payment Token has been registered successfully!\");\n      setIsProcessing(false);\n      setTokenAddress(\"\");\n      setPayoutAddress(\"\");\n      setTokenName(\"\");\n    }).catch(e => {\n      toast.error(\"Failed to set payment token!\");\n      setIsProcessing(false);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-12 col-xl-4 col-md-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"asset__info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-white\",\n        children: \"Set Payment Token\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"asset__action row\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"asset__text col-12 pb-2\",\n          children: \"Token Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"tokenName\",\n          type: \"text\",\n          name: \"tokenName\",\n          className: \"sign__input col-12 height-sm\",\n          placeholder: \"ex: PAD.\",\n          value: tokenName || \"\",\n          onChange: e => {\n            setTokenName(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"asset__action row\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"asset__text col-12 py-2\",\n          children: \"Token Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"tokenAddress\",\n          type: \"text\",\n          name: \"tokenAddress\",\n          className: \"sign__input col-12 height-sm\",\n          placeholder: \"ex: 0x600bE5FcB9338BC3938e4790EFBeAaa4F77D6893.\",\n          value: tokenAddress || \"\",\n          onChange: e => {\n            setTokenAddress(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"asset__action row\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"asset__text col-12 py-2\",\n          children: \"Payout Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"payoutAddress\",\n          type: \"text\",\n          name: \"payoutAddress\",\n          className: \"sign__input col-12 height-sm\",\n          placeholder: \"ex: 0x600bE5FcB9338BC3938e4790EFBeAaa4F77D6893.\",\n          value: payoutAddress || \"\",\n          onChange: e => {\n            setPayoutAddress(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"asset__btn asset__btn--clr height-sm\",\n        onClick: setPaymentToken,\n        children: isProcessing ? \"REGISTERRING...\" : \"SET PAYMENT TOKEN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PaymentToken, \"PQfmJ1GpbCA6HhfYz8QWn2wE5Ws=\", false, function () {\n  return [useWeb3React];\n});\n\n_c = PaymentToken;\nexport default PaymentToken;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentToken\");","map":{"version":3,"sources":["/home/hp/Desktop/Bluefi/bluefi-frontend/src/pages/Admin/paymentToken.js"],"names":["React","useState","NFT_MARKET_ADDRESS","toast","useWeb3React","Contract","Market_INFO","isAddress","PaymentToken","library","tokenAddress","setTokenAddress","payoutAddress","setPayoutAddress","tokenName","setTokenName","isProcessing","setIsProcessing","setPaymentToken","error","contract","abi","getSigner","res","wait","then","result","success","catch","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { NFT_MARKET_ADDRESS } from \"../../constants\";\nimport { toast } from \"react-toastify\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport Market_INFO from \"artifacts/contracts/Marketplace.sol/FlokinomicsNFTMarketplace.json\";\nimport { isAddress } from \"@ethersproject/address\";\n\nfunction PaymentToken() {\n  const { library } = useWeb3React();\n  // eslint-disable-next-line no-unused-vars\n  const [tokenAddress, setTokenAddress] = useState(\"\");\n  const [payoutAddress, setPayoutAddress] = useState(\"\");\n  const [tokenName, setTokenName] = useState(\"\");\n  const [isProcessing, setIsProcessing] = useState(false);\n\n  const setPaymentToken = async () => {\n    if (tokenName === \"\") {\n      toast.error(\"Invalid token Name!\");\n      return;\n    }\n    if (tokenAddress === \"\" || !isAddress(tokenAddress)) {\n      toast.error(\"Invalid token address!\");\n      return;\n    }\n    if (payoutAddress === \"\" || !isAddress(payoutAddress)) {\n      toast.error(\"Invalid payout address!\");\n      return;\n    }\n    setIsProcessing(true);\n    const contract = new Contract(\n      NFT_MARKET_ADDRESS,\n      Market_INFO.abi,\n      library.getSigner()\n    );\n    const res = await contract.setTokenAddress(\n      tokenName,\n      tokenAddress,\n      payoutAddress\n    );\n    res\n      .wait()\n      .then(async (result) => {\n        toast.success(\"Payment Token has been registered successfully!\");\n        setIsProcessing(false);\n        setTokenAddress(\"\");\n        setPayoutAddress(\"\");\n        setTokenName(\"\");\n      })\n      .catch((e) => {\n        toast.error(\"Failed to set payment token!\");\n\n        setIsProcessing(false);\n      });\n  };\n  return (\n    <div className=\"col-12 col-xl-4 col-md-4\">\n      <div className=\"asset__info\">\n        <h2 className=\"text-white\">Set Payment Token</h2>\n        <div className=\"asset__action row\">\n          <p className=\"asset__text col-12 pb-2\">Token Name</p>\n          <input\n            id=\"tokenName\"\n            type=\"text\"\n            name=\"tokenName\"\n            className=\"sign__input col-12 height-sm\"\n            placeholder=\"ex: PAD.\"\n            value={tokenName || \"\"}\n            onChange={(e) => {\n              setTokenName(e.target.value);\n            }}\n          />\n        </div>\n        <div className=\"asset__action row\">\n          <p className=\"asset__text col-12 py-2\">Token Address</p>\n          <input\n            id=\"tokenAddress\"\n            type=\"text\"\n            name=\"tokenAddress\"\n            className=\"sign__input col-12 height-sm\"\n            placeholder=\"ex: 0x600bE5FcB9338BC3938e4790EFBeAaa4F77D6893.\"\n            value={tokenAddress || \"\"}\n            onChange={(e) => {\n              setTokenAddress(e.target.value);\n            }}\n          />\n        </div>\n        <div className=\"asset__action row\">\n          <p className=\"asset__text col-12 py-2\">Payout Address</p>\n          <input\n            id=\"payoutAddress\"\n            type=\"text\"\n            name=\"payoutAddress\"\n            className=\"sign__input col-12 height-sm\"\n            placeholder=\"ex: 0x600bE5FcB9338BC3938e4790EFBeAaa4F77D6893.\"\n            value={payoutAddress || \"\"}\n            onChange={(e) => {\n              setPayoutAddress(e.target.value);\n            }}\n          />\n        </div>\n      </div>\n      <div className=\"d-flex justify-center\">\n        <button\n          className=\"asset__btn asset__btn--clr height-sm\"\n          onClick={setPaymentToken}\n        >\n          {isProcessing ? \"REGISTERRING...\" : \"SET PAYMENT TOKEN\"}\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default PaymentToken;\n"]},"metadata":{},"sourceType":"module"}