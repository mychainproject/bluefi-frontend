{"ast":null,"code":"var _jsxFileName = \"/home/hp/Desktop/Bluefi/bluefi-frontend/src/pages/Admin/setMarketFee.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { NFT_MARKET_ADDRESS } from \"../../constants\";\nimport { toast } from \"react-toastify\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport Market_INFO from \"artifacts/contracts/Marketplace.sol/FlokinomicsNFTMarketplace.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SetMarketFee() {\n  _s();\n\n  const {\n    library\n  } = useWeb3React(); // eslint-disable-next-line no-unused-vars\n\n  const [mainFee, setMainFee] = useState(\"7.5\");\n  const [tokenFee, setTokenFee] = useState(\"5\");\n  const [isProcessingKCS, setIsProcessingKCS] = useState(false);\n  const [isProcessingToken, setIsProcessingToken] = useState(false);\n\n  const setMarketFeeForKCS = async () => {\n    if (mainFee === \"\" || parseFloat(mainFee) < 1) {\n      toast.error(\"Invalid Fee!\");\n      return;\n    }\n\n    setIsProcessingKCS(true);\n    const contract = new Contract(NFT_MARKET_ADDRESS, Market_INFO.abi, library.getSigner());\n    const res = await contract.setMarketFeeForKCS(parseFloat(mainFee) * 10);\n    res.wait().then(async result => {\n      setIsProcessingKCS(false);\n      toast.success(\"Market Fee For KCS Payment has been updated successfully!\");\n    }).catch(e => {\n      toast.error(\"Failed to update Fee!\");\n      setIsProcessingKCS(false);\n    });\n  };\n\n  const setMarketFeeForToken = async () => {\n    if (tokenFee === \"\" || parseFloat(tokenFee) < 1) {\n      toast.error(\"Invalid Fee!\");\n      return;\n    }\n\n    setIsProcessingToken(true);\n    const contract = new Contract(NFT_MARKET_ADDRESS, Market_INFO.abi, library.getSigner());\n    const res = await contract.setMarketFeeForToken(parseFloat(tokenFee) * 10);\n    res.wait().then(async result => {\n      console.log(result);\n      toast.success(\"Market Fee For Token Payment has been updated successfully!\");\n      setIsProcessingToken(false);\n    }).catch(e => {\n      console.log(e);\n      toast.error(\"Failed to update Fee!\");\n      setIsProcessingToken(false);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-12 col-xl-4 col-md-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"asset__info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-white\",\n        children: \"Set Market Fee\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"asset__action row\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"asset__text col-12 pb-2\",\n          children: \"Market Fee For KCS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"toAddress\",\n          type: \"text\",\n          name: \"toAddress\",\n          className: \"sign__input col-12 height-sm\",\n          placeholder: \"7.5\",\n          value: mainFee || \"\",\n          onChange: e => {\n            setMainFee(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"asset__btn asset__btn--clr height-sm col-12\",\n          onClick: setMarketFeeForKCS,\n          children: isProcessingKCS ? \"REGISTERRING...\" : \"Set Fee For KCS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"asset__action row\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"asset__text col-12 py-2\",\n          children: \"Market Fee For Token\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"toAddress\",\n          type: \"text\",\n          name: \"toAddress\",\n          className: \"sign__input col-12 height-sm\",\n          placeholder: \"5\",\n          value: tokenFee || \"\",\n          onChange: e => {\n            setTokenFee(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"asset__btn asset__btn--clr height-sm col-12\",\n          onClick: setMarketFeeForToken,\n          children: isProcessingToken ? \"REGISTERRING...\" : \"Set Fee For Token\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SetMarketFee, \"f447yZlmaWeb1HopSqDkRddOOug=\", false, function () {\n  return [useWeb3React];\n});\n\n_c = SetMarketFee;\nexport default SetMarketFee;\n\nvar _c;\n\n$RefreshReg$(_c, \"SetMarketFee\");","map":{"version":3,"sources":["/home/hp/Desktop/Bluefi/bluefi-frontend/src/pages/Admin/setMarketFee.js"],"names":["React","useState","NFT_MARKET_ADDRESS","toast","useWeb3React","Contract","Market_INFO","SetMarketFee","library","mainFee","setMainFee","tokenFee","setTokenFee","isProcessingKCS","setIsProcessingKCS","isProcessingToken","setIsProcessingToken","setMarketFeeForKCS","parseFloat","error","contract","abi","getSigner","res","wait","then","result","success","catch","e","setMarketFeeForToken","console","log","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { NFT_MARKET_ADDRESS } from \"../../constants\";\nimport { toast } from \"react-toastify\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport Market_INFO from \"artifacts/contracts/Marketplace.sol/FlokinomicsNFTMarketplace.json\";\n\nfunction SetMarketFee() {\n  const { library } = useWeb3React();\n  // eslint-disable-next-line no-unused-vars\n  const [mainFee, setMainFee] = useState(\"7.5\");\n  const [tokenFee, setTokenFee] = useState(\"5\");\n  const [isProcessingKCS, setIsProcessingKCS] = useState(false);\n  const [isProcessingToken, setIsProcessingToken] = useState(false);\n\n  const setMarketFeeForKCS = async () => {\n    if (mainFee === \"\" || parseFloat(mainFee) < 1) {\n      toast.error(\"Invalid Fee!\");\n      return;\n    }\n    setIsProcessingKCS(true);\n    const contract = new Contract(\n      NFT_MARKET_ADDRESS,\n      Market_INFO.abi,\n      library.getSigner()\n    );\n    const res = await contract.setMarketFeeForKCS(parseFloat(mainFee) * 10);\n    res\n      .wait()\n      .then(async (result) => {\n        setIsProcessingKCS(false);\n        toast.success(\n          \"Market Fee For KCS Payment has been updated successfully!\"\n        );\n      })\n      .catch((e) => {\n        toast.error(\"Failed to update Fee!\");\n        setIsProcessingKCS(false);\n      });\n  };\n  const setMarketFeeForToken = async () => {\n    if (tokenFee === \"\" || parseFloat(tokenFee) < 1) {\n      toast.error(\"Invalid Fee!\");\n      return;\n    }\n    setIsProcessingToken(true);\n    const contract = new Contract(\n      NFT_MARKET_ADDRESS,\n      Market_INFO.abi,\n      library.getSigner()\n    );\n    const res = await contract.setMarketFeeForToken(parseFloat(tokenFee) * 10);\n    res\n      .wait()\n      .then(async (result) => {\n        console.log(result);\n        toast.success(\n          \"Market Fee For Token Payment has been updated successfully!\"\n        );\n        setIsProcessingToken(false);\n      })\n      .catch((e) => {\n        console.log(e);\n        toast.error(\"Failed to update Fee!\");\n\n        setIsProcessingToken(false);\n      });\n  };\n  return (\n    <div className=\"col-12 col-xl-4 col-md-4\">\n      <div className=\"asset__info\">\n        <h2 className=\"text-white\">Set Market Fee</h2>\n        <div className=\"asset__action row\">\n          <p className=\"asset__text col-12 pb-2\">Market Fee For KCS</p>\n          <input\n            id=\"toAddress\"\n            type=\"text\"\n            name=\"toAddress\"\n            className=\"sign__input col-12 height-sm\"\n            placeholder=\"7.5\"\n            value={mainFee || \"\"}\n            onChange={(e) => {\n              setMainFee(e.target.value);\n            }}\n          />\n        </div>\n        <div className=\"d-flex justify-center\">\n          <button\n            className=\"asset__btn asset__btn--clr height-sm col-12\"\n            onClick={setMarketFeeForKCS}\n          >\n            {isProcessingKCS ? \"REGISTERRING...\" : \"Set Fee For KCS\"}\n          </button>\n        </div>\n        <div className=\"asset__action row\">\n          <p className=\"asset__text col-12 py-2\">Market Fee For Token</p>\n          <input\n            id=\"toAddress\"\n            type=\"text\"\n            name=\"toAddress\"\n            className=\"sign__input col-12 height-sm\"\n            placeholder=\"5\"\n            value={tokenFee || \"\"}\n            onChange={(e) => {\n              setTokenFee(e.target.value);\n            }}\n          />\n        </div>\n        <div className=\"d-flex justify-center\">\n          <button\n            className=\"asset__btn asset__btn--clr height-sm col-12\"\n            onClick={setMarketFeeForToken}\n          >\n            {isProcessingToken ? \"REGISTERRING...\" : \"Set Fee For Token\"}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default SetMarketFee;\n"]},"metadata":{},"sourceType":"module"}