{"ast":null,"code":"var _jsxFileName = \"/home/hp/Desktop/Bluefi/bleufi-frontend/src/pages/Create/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport NFTDropzone from \"../../components/Dropzone\";\nimport Switch from \"react-switch\";\nimport { firestore } from \"../../firebase\";\nimport { toast } from \"react-toastify\";\nimport { NFTStorage } from \"nft.storage\";\nimport { NFTStorageKey } from \"../../constants/index\";\nimport ipfs from \"utils/ipfsApi.js\";\nimport \"styles/create.css\";\nimport moment from \"moment\";\nimport ReactSlider from \"react-slider\";\nimport { parseUnits } from \"@ethersproject/units\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport { NFT_ADDRESS, NFT_MARKET_ADDRESS, PaymentList } from \"../../constants\";\nimport Market_INFO from \"artifacts/contracts/Marketplace.sol/FlokinomicsNFTMarketplace.json\";\nimport NFT_INFO from \"artifacts/contracts/FlokinomicsNFT.sol/FlokinomicsNFT.json\";\nimport { algolia } from \"../../utils/algolia\";\nimport { bluefiabi } from \"../../../src/services/smart-contract/BLEUFINFT.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst client = new NFTStorage({\n  token: NFTStorageKey\n});\n\nfunction Create() {\n  _s();\n\n  const newContract = \"0xA20B92E0a08B6c32E81958A4955F138589C2084a\";\n  const abiFile = bluefiabi.abi;\n  const contractInstance = new web3.eth.Contract(abiFile, newContract);\n  const {\n    library,\n    account\n  } = useWeb3React();\n  const [user, setUser] = useState({\n    account: account,\n    avatar: \"assets/img/avatars/avatar.jpg\",\n    ownerAvatar: \"assets/img/avatars/avatar.jpg\",\n    imageCover: \"/assets/img/bg/bg.png\",\n    firstName: \"User\",\n    lastName: \"\",\n    nickName: \"@user\",\n    bio: \"\",\n    twitter: \"\",\n    telegram: \"\",\n    instagram: \"\",\n    subscribe: \"\",\n    followers: []\n  });\n  const [type, setType] = useState(\"image\"); // eslint-disable-next-line no-unused-vars\n\n  const [file, setFile] = useState(null);\n  const [category, setCategory] = useState(\"art\");\n  const [name, setName] = useState(\"\");\n  const [royalties, setRoyalties] = useState(7);\n  const [description, setDescription] = useState(\"\");\n  const [price, setPrice] = useState(0);\n  const [saleType, setSaleType] = useState(\"fix\");\n  const [buffer, setBuffer] = useState(null);\n  const [attachBuffer, setAttachBuffer] = useState(null);\n  const [isCreateProcess, setCreateProcess] = useState(false);\n  const [isSale, setIsSale] = useState(false);\n  const [auctionLength, setAuctionLength] = useState(\"Auction Length\");\n  const [paymentType, setPaymentType] = useState(\"BNB\");\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const getFile = function (file) {\n    let isAttach = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    const reader = new FileReader();\n\n    reader.onabort = () => console.log(\"file reading was aborted\");\n\n    reader.onerror = () => console.log(\"file reading has failed\");\n\n    reader.onload = () => {\n      // Do whatever you want with the file contents\n      const binaryStr = reader.result;\n      if (!isAttach) setBuffer(binaryStr);else setAttachBuffer(binaryStr);\n    };\n\n    reader.readAsArrayBuffer(file);\n  };\n\n  const createNFT = async () => {\n    if (!name || !description || !buffer) {\n      toast.error(\"Please fill the NFT information.\");\n      return;\n    }\n\n    if (isSale && price <= 0) {\n      toast.error(\"Price should not be zero.\");\n      return;\n    }\n\n    try {\n      if (!account) toast.error(\"Please connect your wallet first.\");\n      const userExist = (await firestore.collection(\"users\").doc(account).get()).exists;\n\n      if (!userExist) {\n        // await creatProfile(account);\n        toast.error(\"Please create your profile first.\");\n        return;\n      }\n\n      if (!isSale || isSale && saleType === \"fix\") await library.getSigner(account).signMessage(\"Please check this account is yours\");\n\n      if (account) {\n        setCreateProcess(true);\n        const result = await ipfs.files.add(Buffer.from(buffer));\n        const cid = await client.storeDirectory([new File([JSON.stringify({\n          name: name,\n          description: description,\n          creator: account,\n          type,\n          category,\n          royalties: royalties,\n          image: `https://ipfs.io/ipfs/${result[0].hash}`\n        })], \"metadata.json\")]);\n\n        if (cid) {\n          const tokenURI = `https://ipfs.io/ipfs/${cid}/metadata.json`;\n\n          if (isSale && saleType === \"auction\") {\n            const contract = new Contract(NFT_MARKET_ADDRESS, Market_INFO.abi, library.getSigner());\n            const nftContract = new Contract(NFT_ADDRESS, NFT_INFO.abi, library.getSigner());\n            const auction_length = parseInt(auctionLength) * 3600; // const auction_length = 1200;\n\n            const isApproved = await nftContract.isApprovedForAll(account, NFT_MARKET_ADDRESS);\n\n            if (!isApproved) {\n              const approve = await nftContract.setApprovalForAll(NFT_MARKET_ADDRESS, true);\n              await approve.wait();\n            }\n\n            const res = await contract.createAuction(0, true, tokenURI, auction_length, parseUnits(price.toString()), paymentType, account);\n            res.wait().then(async result => {\n              const events = result === null || result === void 0 ? void 0 : result.events;\n\n              if (events.length > 0) {\n                const args = events[events.length - 1].args;\n                const ress = await firestore.collection(\"nfts\").add({\n                  tokenId: parseInt(args.tokenId),\n                  tokenURI,\n                  ownerAvatar: (user === null || user === void 0 ? void 0 : user.avatar) || \"/assets/img/avatars/avatar.jpg\",\n                  owner: account,\n                  creator: account,\n                  price: parseFloat(price),\n                  isSale,\n                  saleType: \"auction\",\n                  paymentType: paymentType,\n                  auctionLength: auction_length,\n                  auctionCreator: account,\n                  time: (parseInt(args.duration) + parseInt(args.auctionStart)) * 1000,\n                  likes: [],\n                  created: moment().valueOf()\n                });\n\n                if (ress === null || ress === void 0 ? void 0 : ress.id) {\n                  algolia.saveObject({\n                    objectID: ress === null || ress === void 0 ? void 0 : ress.id,\n                    id: ress === null || ress === void 0 ? void 0 : ress.id,\n                    tokenId: parseInt(args.tokenId),\n                    tokenURI,\n                    ownerAvatar: (user === null || user === void 0 ? void 0 : user.avatar) || \"/assets/img/avatars/avatar.jpg\",\n                    owner: account,\n                    creator: account,\n                    price: parseFloat(price),\n                    isSale,\n                    saleType: \"auction\",\n                    paymentType: paymentType,\n                    auctionLength: auction_length,\n                    auctionCreator: account,\n                    time: (parseInt(args.duration) + parseInt(args.auctionStart)) * 1000,\n                    likes: [],\n                    created: moment().valueOf()\n                  });\n                  firestore.collection(\"history\").add({\n                    userId: account,\n                    oldUserId: account,\n                    nftId: ress.id,\n                    actionType: 0,\n                    price: parseFloat(price),\n                    paymentType: paymentType,\n                    time: moment().valueOf()\n                  });\n                  firestore.collection(\"history\").add({\n                    userId: account,\n                    oldUserId: account,\n                    nftId: ress.id,\n                    actionType: 3,\n                    price: parseFloat(price),\n                    paymentType: paymentType,\n                    time: moment().valueOf()\n                  });\n                  toast.success(\"Create NFT and start auction\");\n                  setCreateProcess(false);\n                  history.push(`/creator/${account}`);\n                } else {\n                  setCreateProcess(false);\n                  toast.error(\"Create failed.\");\n                }\n              }\n            }).catch(err => {\n              toast.error(\"Create failed.\");\n            });\n          } else {\n            let accounts = await web3.eth.getAccounts();\n            const hash = await contract.getMessageHash(nonce, minPrice, tokenUri);\n            const encodedhash = await contract.getEthSignedMessageHash(hash);\n            const signature = await web3.eth.sign(encodedhash, accounts[0]);\n            const res = await firestore.collection(\"nfts\").add({\n              tokenId: 0,\n              tokenURI,\n              ownerAvatar: (user === null || user === void 0 ? void 0 : user.avatar) || \"/assets/img/avatars/avatar.jpg\",\n              owner: account,\n              creator: account,\n              price: parseFloat(price),\n              paymentType: paymentType,\n              isSale,\n              saleType: \"fix\",\n              auctionLength: 0,\n              auctionCreator: null,\n              time: 0,\n              likes: [],\n              created: moment().valueOf(),\n              type,\n              category,\n              name,\n              description\n            });\n\n            if (res === null || res === void 0 ? void 0 : res.id) {\n              algolia.saveObject({\n                objectID: res === null || res === void 0 ? void 0 : res.id,\n                id: res === null || res === void 0 ? void 0 : res.id,\n                tokenId: 0,\n                tokenURI,\n                ownerAvatar: (user === null || user === void 0 ? void 0 : user.avatar) || \"/assets/img/avatars/avatar.jpg\",\n                owner: account,\n                creator: account,\n                price: parseFloat(price),\n                paymentType: paymentType,\n                isSale,\n                saleType: \"fix\",\n                auctionLength: 0,\n                auctionCreator: null,\n                time: 0,\n                likes: [],\n                created: moment().valueOf(),\n                type,\n                category,\n                name,\n                description\n              });\n              firestore.collection(\"history\").add({\n                userId: account,\n                oldUserId: account,\n                nftId: res.id,\n                actionType: 0,\n                price: parseFloat(price),\n                paymentType: paymentType,\n                time: moment().valueOf()\n              });\n              toast.success(\"Create NFT\");\n              setCreateProcess(false);\n              history.push(`/creator/${account}`);\n            } else {\n              setCreateProcess(false);\n              toast.error(\"Create failed.\");\n            }\n          }\n        } else {\n          toast.error(\"Uploading failed\");\n          setCreateProcess(false);\n        }\n      }\n    } catch (err) {\n      setCreateProcess(false);\n      console.log(err);\n    }\n  };\n\n  const dispatchUser = async user_id => {\n    if (user_id) {\n      const userInfo = (await firestore.collection(\"users\").doc(user_id).get()).data();\n      dispatch({\n        type: \"SET_PROFILE\",\n        userInfo\n      });\n      setUser(userInfo);\n    }\n  };\n\n  useEffect(() => {\n    dispatchUser(account); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [account]);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"buyFlokin\",\n    style: {\n      paddingTop: 90\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 col-lg-6 pr-1 createPart\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            class: \"createStepLabel\",\n            children: \"Upload file\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 25\n          }, this), type === \"audio\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"nftdropzone\",\n            children: /*#__PURE__*/_jsxDEV(NFTDropzone, {\n              nftType: \"Audio\",\n              onChange: newfile => {\n                setFile(newfile);\n                getFile(newfile);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 29\n          }, this) : type === \"video\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"nftdropzone\",\n            children: /*#__PURE__*/_jsxDEV(NFTDropzone, {\n              nftType: \"Video\",\n              onChange: newfile => {\n                setFile(newfile);\n                getFile(newfile);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 29\n          }, this) : type === \"image\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"nftdropzone\",\n            children: /*#__PURE__*/_jsxDEV(NFTDropzone, {\n              nftType: \"image\",\n              onChange: newfile => {\n                setFile(newfile);\n                getFile(newfile);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 29\n          }, this) : \"\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sign__group\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"createStepLabel mb-20\",\n              children: \"NFT Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"type\",\n              name: \"type\",\n              className: \"sign__select inputBg\",\n              onChange: e => setType(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"image\",\n                children: \"NFT Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"image\",\n                children: \"Image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"audio\",\n                children: \"Audio\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"video\",\n                children: \"Video\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sign__group\",\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"category\",\n              name: \"category\",\n              className: \"sign__select\",\n              value: category,\n              onChange: e => setCategory(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 389,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"art\",\n                children: \"Art\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"music\",\n                children: \"Music\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"film\",\n                children: \"Film\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"sports\",\n                children: \"Sports\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"education\",\n                children: \"Education\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 394,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"photography\",\n                children: \"Photography\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 395,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"games\",\n                children: \"Games\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"other\",\n                children: \"Other\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 397,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sign__group\",\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"type\",\n              name: \"type\",\n              className: \"sign__select inputBg\",\n              onChange: e => setType(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"image\",\n                children: \"Image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 408,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"audio\",\n                children: \"Audio\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 409,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"video\",\n                children: \"Video\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 410,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 col-lg-6  pr-1 createPart\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"createStepLabel\",\n            children: \"Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sign__group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"name\",\n              type: \"text\",\n              name: \"name\",\n              className: \"sign__input \",\n              placeholder: \"Title\",\n              value: name,\n              onChange: e => setName(e.target.value),\n              style: {\n                border: '1px solid #FFFFFF33'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sign__group\",\n            children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n              id: \"description\",\n              name: \"description\",\n              className: \"sign__textarea\",\n              placeholder: \"Description\",\n              value: description,\n              onChange: e => setDescription(e.target.value),\n              style: {\n                border: '1px solid #FFFFFF33'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"mt-50\",\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"createStepLabel\",\n              children: \"Sale & Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sign__group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"sign__label mr-3\",\n              htmlFor: \"sale\",\n              children: \"List for Sale\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 444,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Switch, {\n              onChange: () => {\n                setIsSale(!isSale);\n              },\n              checked: isSale,\n              height: 26,\n              class: \"createListSwitch\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sign__group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"sign__label\",\n              htmlFor: \"royalties\",\n              children: \"Royalties\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 458,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"royaltyBtn\",\n              children: [royalties, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(ReactSlider, {\n              className: \"horizontal-slider\",\n              thumbClassName: \"example-thumb\",\n              trackClassName: \"example-track\",\n              defaultValue: 7,\n              value: royalties,\n              onChange: e => {\n                setRoyalties(e);\n              },\n              min: 1,\n              max: 20,\n              renderTrack: (props, state) => /*#__PURE__*/_jsxDEV(\"div\", { ...props,\n                children: state.valueNow\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 474,\n                columnNumber: 29\n              }, this) //custom track\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 462,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 17\n          }, this), isSale && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sign__group\",\n            children: [/*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"saleType\",\n              name: \"saleType\",\n              className: \"sign__select \",\n              value: saleType,\n              onChange: e => setSaleType(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Sale Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 489,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"fix\",\n                children: \"Fixed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 490,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"auction\",\n                children: \"Auction\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 491,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 482,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sign__group\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"price\",\n                type: \"number\",\n                value: price,\n                onChange: e => setPrice(e.target.value),\n                name: \"price\",\n                className: \"sign__input\",\n                placeholder: \"BNB Price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 495,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 494,\n              columnNumber: 25\n            }, this), saleType === \"auction\" && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sign__group\",\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"length\",\n                name: \"length\",\n                className: \"sign__select mt-0\",\n                value: auctionLength,\n                onChange: e => setAuctionLength(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  children: \"Auction Length\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 514,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"1\",\n                  children: \"1 hour\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 515,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"12\",\n                  children: \"12 hours\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 516,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"24\",\n                  children: \"24 hours\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 517,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"72\",\n                  children: \"3 days\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 518,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"168\",\n                  children: \"7 days\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 519,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 507,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 506,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12 text-center mb-100\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn-glow btn-hover-shine\",\n          onClick: createNFT,\n          disabled: isCreateProcess,\n          children: isCreateProcess ? \"Creating...\" : \"Create NFT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 326,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Create, \"orS6FfkRbyMI8FjBS/FJbPjIa14=\", false, function () {\n  return [useWeb3React, useHistory, useDispatch];\n});\n\n_c = Create;\nexport default Create;\n\nvar _c;\n\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"sources":["/home/hp/Desktop/Bluefi/bleufi-frontend/src/pages/Create/index.js"],"names":["React","useEffect","useState","useDispatch","useHistory","useWeb3React","NFTDropzone","Switch","firestore","toast","NFTStorage","NFTStorageKey","ipfs","moment","ReactSlider","parseUnits","Contract","NFT_ADDRESS","NFT_MARKET_ADDRESS","PaymentList","Market_INFO","NFT_INFO","algolia","bluefiabi","client","token","Create","newContract","abiFile","abi","contractInstance","web3","eth","library","account","user","setUser","avatar","ownerAvatar","imageCover","firstName","lastName","nickName","bio","twitter","telegram","instagram","subscribe","followers","type","setType","file","setFile","category","setCategory","name","setName","royalties","setRoyalties","description","setDescription","price","setPrice","saleType","setSaleType","buffer","setBuffer","attachBuffer","setAttachBuffer","isCreateProcess","setCreateProcess","isSale","setIsSale","auctionLength","setAuctionLength","paymentType","setPaymentType","history","dispatch","getFile","isAttach","reader","FileReader","onabort","console","log","onerror","onload","binaryStr","result","readAsArrayBuffer","createNFT","error","userExist","collection","doc","get","exists","getSigner","signMessage","files","add","Buffer","from","cid","storeDirectory","File","JSON","stringify","creator","image","hash","tokenURI","contract","nftContract","auction_length","parseInt","isApproved","isApprovedForAll","approve","setApprovalForAll","wait","res","createAuction","toString","then","events","length","args","ress","tokenId","owner","parseFloat","auctionCreator","time","duration","auctionStart","likes","created","valueOf","id","saveObject","objectID","userId","oldUserId","nftId","actionType","success","push","catch","err","accounts","getAccounts","getMessageHash","nonce","minPrice","tokenUri","encodedhash","getEthSignedMessageHash","signature","sign","dispatchUser","user_id","userInfo","data","paddingTop","newfile","e","target","value","border","props","state","valueNow"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {useDispatch} from \"react-redux\";\nimport {useHistory} from \"react-router-dom\";\nimport {useWeb3React} from \"@web3-react/core\";\nimport NFTDropzone from \"../../components/Dropzone\";\nimport Switch from \"react-switch\";\nimport {firestore} from \"../../firebase\";\nimport {toast} from \"react-toastify\";\nimport {NFTStorage} from \"nft.storage\";\nimport {NFTStorageKey} from \"../../constants/index\";\nimport ipfs from \"utils/ipfsApi.js\";\nimport \"styles/create.css\";\nimport moment from \"moment\";\nimport ReactSlider from \"react-slider\";\nimport {parseUnits} from \"@ethersproject/units\";\nimport {Contract} from \"@ethersproject/contracts\";\nimport {NFT_ADDRESS, NFT_MARKET_ADDRESS, PaymentList} from \"../../constants\";\nimport Market_INFO from \"artifacts/contracts/Marketplace.sol/FlokinomicsNFTMarketplace.json\";\nimport NFT_INFO from \"artifacts/contracts/FlokinomicsNFT.sol/FlokinomicsNFT.json\";\nimport {algolia} from \"../../utils/algolia\";\nimport {bluefiabi} from \"../../../src/services/smart-contract/BLEUFINFT.json\"\n\nconst client = new NFTStorage({token: NFTStorageKey});\n\nfunction Create() {\n    const newContract = \"0xA20B92E0a08B6c32E81958A4955F138589C2084a\"\n    const abiFile = bluefiabi.abi\n    const contractInstance = new web3.eth.Contract(abiFile,newContract)\n\n    const {library, account} = useWeb3React();\n    const [user, setUser] = useState({\n        account: account,\n        avatar: \"assets/img/avatars/avatar.jpg\",\n        ownerAvatar: \"assets/img/avatars/avatar.jpg\",\n        imageCover: \"/assets/img/bg/bg.png\",\n        firstName: \"User\",\n        lastName: \"\",\n        nickName: \"@user\",\n        bio: \"\",\n        twitter: \"\",\n        telegram: \"\",\n        instagram: \"\",\n        subscribe: \"\",\n        followers: [],\n    });\n    const [type, setType] = useState(\"image\");\n    // eslint-disable-next-line no-unused-vars\n    const [file, setFile] = useState(null);\n    const [category, setCategory] = useState(\"art\");\n    const [name, setName] = useState(\"\");\n    const [royalties, setRoyalties] = useState(7);\n    const [description, setDescription] = useState(\"\");\n    const [price, setPrice] = useState(0);\n    const [saleType, setSaleType] = useState(\"fix\");\n    const [buffer, setBuffer] = useState(null);\n    const [attachBuffer, setAttachBuffer] = useState(null);\n    const [isCreateProcess, setCreateProcess] = useState(false);\n    const [isSale, setIsSale] = useState(false);\n    const [auctionLength, setAuctionLength] = useState(\"Auction Length\");\n    const [paymentType, setPaymentType] = useState(\"BNB\");\n\n    const history = useHistory();\n    const dispatch = useDispatch();\n\n    const getFile = (file, isAttach = false) => {\n        const reader = new FileReader();\n        reader.onabort = () => console.log(\"file reading was aborted\");\n        reader.onerror = () => console.log(\"file reading has failed\");\n        reader.onload = () => {\n            // Do whatever you want with the file contents\n            const binaryStr = reader.result;\n            if (!isAttach) setBuffer(binaryStr);\n            else setAttachBuffer(binaryStr);\n        };\n        reader.readAsArrayBuffer(file);\n    };\n\n    const createNFT = async () => {\n        if (!name || !description || !buffer) {\n            toast.error(\"Please fill the NFT information.\");\n            return;\n        }\n        if (isSale && price <= 0) {\n            toast.error(\"Price should not be zero.\");\n            return;\n        }\n        try {\n            if (!account) toast.error(\"Please connect your wallet first.\");\n            const userExist = (await firestore.collection(\"users\").doc(account).get())\n                .exists;\n            if (!userExist) {\n                // await creatProfile(account);\n                toast.error(\"Please create your profile first.\");\n                return;\n            }\n            if (!isSale || (isSale && saleType === \"fix\"))\n                await library\n                    .getSigner(account)\n                    .signMessage(\"Please check this account is yours\");\n            if (account) {\n                setCreateProcess(true);\n                const result = await ipfs.files.add(Buffer.from(buffer));\n                const cid = await client.storeDirectory([\n                    new File(\n                        [\n                            JSON.stringify({\n                                name: name,\n                                description: description,\n                                creator: account,\n                                type,\n                                category,\n                                royalties: royalties,\n                                image: `https://ipfs.io/ipfs/${result[0].hash}`,\n                            }),\n                        ],\n                        \"metadata.json\"\n                    ),\n                ]);\n                if (cid) {\n                    const tokenURI = `https://ipfs.io/ipfs/${cid}/metadata.json`;\n                    if (isSale && saleType === \"auction\") {\n                        const contract = new Contract(\n                            NFT_MARKET_ADDRESS,\n                            Market_INFO.abi,\n                            library.getSigner()\n                        );\n                        const nftContract = new Contract(\n                            NFT_ADDRESS,\n                            NFT_INFO.abi,\n                            library.getSigner()\n                        );\n                        const auction_length = parseInt(auctionLength) * 3600;\n                        // const auction_length = 1200;\n                        const isApproved = await nftContract.isApprovedForAll(\n                            account,\n                            NFT_MARKET_ADDRESS\n                        );\n                        if (!isApproved) {\n                            const approve = await nftContract.setApprovalForAll(\n                                NFT_MARKET_ADDRESS,\n                                true\n                            );\n                            await approve.wait();\n                        }\n                        const res = await contract.createAuction(\n                            0,\n                            true,\n                            tokenURI,\n                            auction_length,\n                            parseUnits(price.toString()),\n                            paymentType,\n                            account\n                        );\n                        res\n                            .wait()\n                            .then(async (result) => {\n                                const events = result?.events;\n                                if (events.length > 0) {\n                                    const args = events[events.length - 1].args;\n                                    const ress = await firestore.collection(\"nfts\").add({\n                                        tokenId: parseInt(args.tokenId),\n                                        tokenURI,\n                                        ownerAvatar:\n                                            user?.avatar || \"/assets/img/avatars/avatar.jpg\",\n                                        owner: account,\n                                        creator: account,\n                                        price: parseFloat(price),\n                                        isSale,\n                                        saleType: \"auction\",\n                                        paymentType: paymentType,\n                                        auctionLength: auction_length,\n                                        auctionCreator: account,\n                                        time:\n                                            (parseInt(args.duration) + parseInt(args.auctionStart)) *\n                                            1000,\n                                        likes: [],\n                                        created: moment().valueOf(),\n                                    });\n                                    if (ress?.id) {\n                                        algolia.saveObject({\n                                            objectID: ress?.id,\n                                            id: ress?.id,\n                                            tokenId: parseInt(args.tokenId),\n                                            tokenURI,\n                                            ownerAvatar:\n                                                user?.avatar || \"/assets/img/avatars/avatar.jpg\",\n                                            owner: account,\n                                            creator: account,\n                                            price: parseFloat(price),\n                                            isSale,\n                                            saleType: \"auction\",\n                                            paymentType: paymentType,\n                                            auctionLength: auction_length,\n                                            auctionCreator: account,\n                                            time:\n                                                (parseInt(args.duration) +\n                                                    parseInt(args.auctionStart)) *\n                                                1000,\n                                            likes: [],\n                                            created: moment().valueOf(),\n                                        });\n                                        firestore.collection(\"history\").add({\n                                            userId: account,\n                                            oldUserId: account,\n                                            nftId: ress.id,\n                                            actionType: 0,\n                                            price: parseFloat(price),\n                                            paymentType: paymentType,\n                                            time: moment().valueOf(),\n                                        });\n                                        firestore.collection(\"history\").add({\n                                            userId: account,\n                                            oldUserId: account,\n                                            nftId: ress.id,\n                                            actionType: 3,\n                                            price: parseFloat(price),\n                                            paymentType: paymentType,\n                                            time: moment().valueOf(),\n                                        });\n                                        toast.success(\"Create NFT and start auction\");\n                                        setCreateProcess(false);\n                                        history.push(`/creator/${account}`);\n                                    } else {\n                                        setCreateProcess(false);\n                                        toast.error(\"Create failed.\");\n                                    }\n                                }\n                            })\n                            .catch((err) => {\n                                toast.error(\"Create failed.\");\n                            });\n                    } else {\n                            let accounts = await web3.eth.getAccounts()\n                            const hash = await contract.getMessageHash(\n                              nonce,\n                              minPrice,\n                              tokenUri\n                            )\n                            const encodedhash = await contract.getEthSignedMessageHash(hash)\n                            const signature = await web3.eth.sign(encodedhash, accounts[0])\n                        const res = await firestore.collection(\"nfts\").add({\n                            tokenId: 0,\n                            tokenURI,\n                            ownerAvatar: user?.avatar || \"/assets/img/avatars/avatar.jpg\",\n                            owner: account,\n                            creator: account,\n                            price: parseFloat(price),\n                            paymentType: paymentType,\n                            isSale,\n                            saleType: \"fix\",\n                            auctionLength: 0,\n                            auctionCreator: null,\n                            time: 0,\n                            likes: [],\n                            created: moment().valueOf(),\n                            type,\n                            category,\n                            name,\n                            description,\n                        });\n                        if (res?.id) {\n                            algolia.saveObject({\n                                objectID: res?.id,\n                                id: res?.id,\n                                tokenId: 0,\n                                tokenURI,\n                                ownerAvatar: user?.avatar || \"/assets/img/avatars/avatar.jpg\",\n                                owner: account,\n                                creator: account,\n                                price: parseFloat(price),\n                                paymentType: paymentType,\n                                isSale,\n                                saleType: \"fix\",\n                                auctionLength: 0,\n                                auctionCreator: null,\n                                time: 0,\n                                likes: [],\n                                created: moment().valueOf(),\n                                type,\n                                category,\n                                name,\n                                description,\n                            });\n                            firestore.collection(\"history\").add({\n                                userId: account,\n                                oldUserId: account,\n                                nftId: res.id,\n                                actionType: 0,\n                                price: parseFloat(price),\n                                paymentType: paymentType,\n                                time: moment().valueOf(),\n                            });\n                            toast.success(\"Create NFT\");\n                            setCreateProcess(false);\n                            history.push(`/creator/${account}`);\n                        } else {\n                            setCreateProcess(false);\n                            toast.error(\"Create failed.\");\n                        }\n                    }\n                } else {\n                    toast.error(\"Uploading failed\");\n                    setCreateProcess(false);\n                }\n            }\n        } catch (err) {\n            setCreateProcess(false);\n            console.log(err);\n        }\n    };\n\n    const dispatchUser = async (user_id) => {\n        if (user_id) {\n            const userInfo = (\n                await firestore.collection(\"users\").doc(user_id).get()\n            ).data();\n            dispatch({type: \"SET_PROFILE\", userInfo});\n            setUser(userInfo);\n        }\n    };\n    useEffect(() => {\n        dispatchUser(account);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [account]);\n    return (\n        <main className=\"buyFlokin\" style={{paddingTop: 90}}>\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-12 col-lg-6 pr-1 createPart\">\n\n                        <h2 class=\"createStepLabel\">Upload file</h2>\n                        {type === \"audio\" ? (\n                            <div className=\"nftdropzone\">\n                                <NFTDropzone\n                                    nftType=\"Audio\"\n                                    onChange={(newfile) => {\n                                        setFile(newfile);\n                                        getFile(newfile);\n                                    }}\n                                />\n                            </div>\n                        ) : type === \"video\" ? (\n                            <div className=\"nftdropzone\">\n                                <NFTDropzone\n                                    nftType=\"Video\"\n                                    onChange={(newfile) => {\n                                        setFile(newfile);\n                                        getFile(newfile);\n                                    }}\n                                />\n                            </div>\n                        ) : type === \"image\" ? (\n                            <div className=\"nftdropzone\">\n                                <NFTDropzone\n                                    nftType=\"image\"\n                                    onChange={(newfile) => {\n                                        setFile(newfile);\n                                        getFile(newfile);\n                                    }}\n                                />\n                            </div>\n                        ) : (\n                            \"\"\n                        )}\n\n                        <div className=\"sign__group\">\n                            <h2 className=\"createStepLabel mb-20\">NFT Type</h2>\n                            <select\n                                id=\"type\"\n                                name=\"type\"\n                                className=\"sign__select inputBg\"\n                                onChange={(e) => setType(e.target.value)}\n                            >\n                                <option value=\"image\">NFT Type</option>\n                                <option value=\"image\">Image</option>\n                                <option value=\"audio\">Audio</option>\n                                <option value=\"video\">Video</option>\n                            </select>\n                        </div>\n\n                        <div className=\"sign__group\">\n                            <select\n                                id=\"category\"\n                                name=\"category\"\n                                className=\"sign__select\"\n                                value={category}\n                                onChange={(e) => setCategory(e.target.value)}\n                            >\n                                <option>Category</option>\n                                <option value=\"art\">Art</option>\n                                <option value=\"music\">Music</option>\n                                <option value=\"film\">Film</option>\n                                <option value=\"sports\">Sports</option>\n                                <option value=\"education\">Education</option>\n                                <option value=\"photography\">Photography</option>\n                                <option value=\"games\">Games</option>\n                                <option value=\"other\">Other</option>\n                            </select>\n                        </div>\n\n                        <div className=\"sign__group\">\n                            <select\n                                id=\"type\"\n                                name=\"type\"\n                                className=\"sign__select inputBg\"\n                                onChange={(e) => setType(e.target.value)}\n                            >\n                                <option value=\"image\">Image</option>\n                                <option value=\"audio\">Audio</option>\n                                <option value=\"video\">Video</option>\n                            </select>\n                        </div>\n                    </div>\n                    <div className=\"col-12 col-lg-6  pr-1 createPart\">\n                        <h2 className=\"createStepLabel\">Information</h2>\n                        <div className=\"sign__group\">\n                            <input\n                                id=\"name\"\n                                type=\"text\"\n                                name=\"name\"\n                                className=\"sign__input \"\n                                placeholder=\"Title\"\n                                value={name}\n                                onChange={(e) => setName(e.target.value)}\n                                style={{border: '1px solid #FFFFFF33'}}\n                            />\n                        </div>\n\n                        <div className=\"sign__group\">\n              <textarea\n                  id=\"description\"\n                  name=\"description\"\n                  className=\"sign__textarea\"\n                  placeholder=\"Description\"\n                  value={description}\n                  onChange={(e) => setDescription(e.target.value)}\n                  style={{border: '1px solid #FFFFFF33'}}\n              ></textarea>\n                        </div>\n                        <div class=\"mt-50\">\n                            <h2 className=\"createStepLabel\">Sale & Price</h2>\n                        </div>\n                        <div className=\"sign__group\">\n                            <label className=\"sign__label mr-3\" htmlFor=\"sale\">\n                                List for Sale\n                            </label>\n                            <Switch\n                                onChange={() => {\n                                    setIsSale(!isSale);\n                                }}\n                                checked={isSale}\n                                height={26}\n                                class=\"createListSwitch\"\n                            />\n                        </div>\n\n                <div className=\"sign__group\">\n                    <label className=\"sign__label\" htmlFor=\"royalties\">\n                        Royalties\n                    </label>\n                    <button className=\"royaltyBtn\">{royalties}%</button>\n                    <ReactSlider\n                        className=\"horizontal-slider\"\n                        thumbClassName=\"example-thumb\"\n                        trackClassName=\"example-track\"\n                        defaultValue={7}\n                        value={royalties}\n                        onChange={(e) => {\n                            setRoyalties(e);\n                        }}\n                        min={1}\n                        max={20}\n                        renderTrack={(props, state) => (\n                            <div {...props}>{state.valueNow}</div>\n                        )} //custom track\n                    />\n                </div>\n\n                {isSale && (\n                    <div className=\"sign__group\">\n\n                        <select\n                            id=\"saleType\"\n                            name=\"saleType\"\n                            className=\"sign__select \"\n                            value={saleType}\n                            onChange={(e) => setSaleType(e.target.value)}\n                        >\n                            <option>Sale Type</option>\n                            <option value=\"fix\">Fixed</option>\n                            <option value=\"auction\">Auction</option>\n                        </select>\n\n                        <div className=\"sign__group\">\n                            <input\n                                id=\"price\"\n                                type=\"number\"\n                                value={price}\n                                onChange={(e) => setPrice(e.target.value)}\n                                name=\"price\"\n                                className=\"sign__input\"\n                                placeholder=\"BNB Price\"\n                            />\n                        </div>\n                        {saleType === \"auction\" && (\n                            <div className=\"sign__group\">\n                                <select\n                                    id=\"length\"\n                                    name=\"length\"\n                                    className=\"sign__select mt-0\"\n                                    value={auctionLength}\n                                    onChange={(e) => setAuctionLength(e.target.value)}\n                                >\n                                    <option>Auction Length</option>\n                                    <option value=\"1\">1 hour</option>\n                                    <option value=\"12\">12 hours</option>\n                                    <option value=\"24\">24 hours</option>\n                                    <option value=\"72\">3 days</option>\n                                    <option value=\"168\">7 days</option>\n                                </select>\n                            </div>\n                        )}\n                    </div>\n                )}\n                    </div>\n                    </div>\n                <div className=\"col-12 text-center mb-100\">\n                    <button\n                        type=\"button\"\n                        className=\"btn-glow btn-hover-shine\"\n                        onClick={createNFT}\n                        disabled={isCreateProcess}\n                    >\n                        {isCreateProcess ? \"Creating...\" : \"Create NFT\"}\n                    </button>\n                </div>\n            </div>\n\n\n        </main>\n    )\n        ;\n}\n\nexport default Create;"]},"metadata":{},"sourceType":"module"}