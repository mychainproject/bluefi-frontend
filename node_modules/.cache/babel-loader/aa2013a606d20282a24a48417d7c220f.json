{"ast":null,"code":"var _jsxFileName = \"/home/hp/Desktop/Bluefi/bleufi-frontend/src/components/EthBalance/index.js\",\n    _s = $RefreshSig$();\n\nimport { useWeb3React } from \"@web3-react/core\";\nimport useSWR from \"swr\";\nimport React, { useEffect } from \"react\";\nimport { formatEther } from \"@ethersproject/units\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EthBalance = () => {\n  _s();\n\n  const {\n    account,\n    library\n  } = useWeb3React();\n  const {\n    data: balance,\n    mutate\n  } = useSWR([\"getBalance\", account, \"latest\"]);\n  useEffect(() => {\n    // listen for changes on an Ethereum address\n    library.on(\"block\", () => {\n      mutate(undefined, true);\n    }); // remove listener when the component is unmounted\n\n    return () => {\n      library.removeAllListeners(\"block\");\n    }; // trigger the effect only on component mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (!balance) {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    children: [parseFloat(formatEther(balance)).toPrecision(4), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 10\n  }, this);\n};\n\n_s(EthBalance, \"WkwoPHzei9DWHxAApDbwbcHVNUw=\", false, function () {\n  return [useWeb3React, useSWR];\n});\n\n_c = EthBalance;\nexport default EthBalance;\n\nvar _c;\n\n$RefreshReg$(_c, \"EthBalance\");","map":{"version":3,"sources":["/home/hp/Desktop/Bluefi/bleufi-frontend/src/components/EthBalance/index.js"],"names":["useWeb3React","useSWR","React","useEffect","formatEther","EthBalance","account","library","data","balance","mutate","on","undefined","removeAllListeners","parseFloat","toPrecision"],"mappings":";;;AAAA,SAASA,YAAT,QAA6B,kBAA7B;AACA,OAAOC,MAAP,MAAmB,KAAnB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,sBAA5B;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAuBP,YAAY,EAAzC;AACA,QAAM;AAAEQ,IAAAA,IAAI,EAAEC,OAAR;AAAiBC,IAAAA;AAAjB,MAA4BT,MAAM,CAAC,CAAC,YAAD,EAAeK,OAAf,EAAwB,QAAxB,CAAD,CAAxC;AACAH,EAAAA,SAAS,CAAC,MAAM;AACd;AACAI,IAAAA,OAAO,CAACI,EAAR,CAAW,OAAX,EAAoB,MAAM;AACxBD,MAAAA,MAAM,CAACE,SAAD,EAAY,IAAZ,CAAN;AACD,KAFD,EAFc,CAKd;;AACA,WAAO,MAAM;AACXL,MAAAA,OAAO,CAACM,kBAAR,CAA2B,OAA3B;AACD,KAFD,CANc,CASd;AACA;AACD,GAXQ,EAWN,EAXM,CAAT;;AAaA,MAAI,CAACJ,OAAL,EAAc;AACZ,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,sBAAO;AAAA,eAAOK,UAAU,CAACV,WAAW,CAACK,OAAD,CAAZ,CAAV,CAAiCM,WAAjC,CAA6C,CAA7C,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CApBD;;GAAMV,U;UACyBL,Y,EACKC,M;;;KAF9BI,U;AAqBN,eAAeA,UAAf","sourcesContent":["import { useWeb3React } from \"@web3-react/core\";\nimport useSWR from \"swr\";\nimport React, { useEffect } from \"react\";\nimport { formatEther } from \"@ethersproject/units\";\n\nconst EthBalance = () => {\n  const { account, library } = useWeb3React();\n  const { data: balance, mutate } = useSWR([\"getBalance\", account, \"latest\"]);\n  useEffect(() => {\n    // listen for changes on an Ethereum address\n    library.on(\"block\", () => {\n      mutate(undefined, true);\n    });\n    // remove listener when the component is unmounted\n    return () => {\n      library.removeAllListeners(\"block\");\n    };\n    // trigger the effect only on component mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (!balance) {\n    return <span>...</span>;\n  }\n  return <span>{parseFloat(formatEther(balance)).toPrecision(4)} </span>;\n};\nexport default EthBalance;\n"]},"metadata":{},"sourceType":"module"}