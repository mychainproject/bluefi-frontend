{"ast":null,"code":"var _jsxFileName = \"/home/hp/Desktop/Bluefi/bluefi-frontend/src/components/Dropzone/index.js\",\n    _s = $RefreshSig$();\n\nimport { UploadIcon } from \"@heroicons/react/outline\";\nimport React, { useState } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst thumbsContainer = {\n  display: \"flex\",\n  flexDirection: \"row\",\n  flexWrap: \"wrap\"\n};\nconst thumb = {\n  display: \"inline-flex\",\n  borderRadius: 2,\n  border: \"1px solid #eaeaea\",\n  height: 100,\n  width: 100,\n  padding: 4,\n  boxSizing: \"border-box\"\n};\nconst thumbInner = {\n  display: \"flex\",\n  minWidth: 0,\n  overflow: \"hidden\",\n  width: \"100%\"\n};\nconst img = {\n  display: \"block\",\n  width: \"100%\",\n  height: \"100%\"\n};\nconst acceptedList = {\n  Audio: \"audio/*\",\n  All: \"image/*, video/*\"\n};\nexport default function NFTDropzone(props) {\n  _s();\n\n  const [previewFile, setpreviewFile] = useState();\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    accept: props.nftType === \"Audio\" ? acceptedList[\"Audio\"] : props.nftType === \"image\" ? \"image/*\" : props.nftType === \"Video\" ? \"video/*\" : acceptedList[\"All\"],\n    onDrop: acceptedFiles => {\n      const file = acceptedFiles[0];\n      props.onChange(file);\n\n      if (file.type.startsWith(\"audio\")) {\n        file.preview = \"assets/icon/audio.png\";\n        setpreviewFile(file);\n      } else if (file.type.startsWith(\"video\")) {\n        file.preview = \"assets/icon/video.png\";\n        setpreviewFile(file);\n      } else if (file.type.startsWith(\"image\")) {\n        file.preview = URL.createObjectURL(file);\n        setpreviewFile(file);\n      } else {\n        file.preview = \"assets/icon/file.png\";\n        setpreviewFile(file);\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"container flex p-2\",\n      style: {\n        height: 281\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", { ...getRootProps({\n          className: \"dropzone\"\n        }),\n        className: \"flex flex-wrap items-center justify-center focus:outline-none mx-auto\",\n        style: {\n          border: '2px dashed #999999',\n          borderRadius: '10px',\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(UploadIcon, {\n          className: \"icon-set\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-set\",\n          children: \"Choose File or Drag and Drop\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n        style: thumbsContainer,\n        className: \"space-x-5\",\n        children: previewFile && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: thumb,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: thumbInner,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: previewFile.preview,\n              alt: \"preview\",\n              style: img\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(NFTDropzone, \"Xwbs4ljwg8TOqsWJGY0I7LDwnDM=\", false, function () {\n  return [useDropzone];\n});\n\n_c = NFTDropzone;\n\nvar _c;\n\n$RefreshReg$(_c, \"NFTDropzone\");","map":{"version":3,"sources":["/home/hp/Desktop/Bluefi/bluefi-frontend/src/components/Dropzone/index.js"],"names":["UploadIcon","React","useState","useDropzone","thumbsContainer","display","flexDirection","flexWrap","thumb","borderRadius","border","height","width","padding","boxSizing","thumbInner","minWidth","overflow","img","acceptedList","Audio","All","NFTDropzone","props","previewFile","setpreviewFile","getRootProps","getInputProps","accept","nftType","onDrop","acceptedFiles","file","onChange","type","startsWith","preview","URL","createObjectURL","className"],"mappings":"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","sourcesContent":["import { UploadIcon } from \"@heroicons/react/outline\";\nimport React, { useState } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport \"./style.css\";\nconst thumbsContainer = {\n  display: \"flex\",\n  flexDirection: \"row\",\n  flexWrap: \"wrap\",\n};\n\nconst thumb = {\n  display: \"inline-flex\",\n  borderRadius: 2,\n  border: \"1px solid #eaeaea\",\n  height: 100,\n  width: 100,\n  padding: 4,\n  boxSizing: \"border-box\",\n};\n\nconst thumbInner = {\n  display: \"flex\",\n  minWidth: 0,\n  overflow: \"hidden\",\n  width: \"100%\",\n};\n\nconst img = {\n  display: \"block\",\n  width: \"100%\",\n  height: \"100%\",\n};\n\nconst acceptedList = {\n  Audio: \"audio/*\",\n  All: \"image/*, video/*\",\n};\n\nexport default function NFTDropzone(props) {\n  const [previewFile, setpreviewFile] = useState();\n  const { getRootProps, getInputProps } = useDropzone({\n    accept:\n      props.nftType === \"Audio\"\n        ? acceptedList[\"Audio\"]\n        : props.nftType === \"image\"\n        ? \"image/*\"\n        : props.nftType === \"Video\"\n        ? \"video/*\"\n        : acceptedList[\"All\"],\n    onDrop: (acceptedFiles) => {\n      const file = acceptedFiles[0];\n      props.onChange(file);\n      if (file.type.startsWith(\"audio\")) {\n        file.preview = \"assets/icon/audio.png\";\n        setpreviewFile(file);\n      } else if (file.type.startsWith(\"video\")) {\n        file.preview = \"assets/icon/video.png\";\n        setpreviewFile(file);\n      } else if (file.type.startsWith(\"image\")) {\n        file.preview = URL.createObjectURL(file);\n        setpreviewFile(file);\n      } else {\n        file.preview = \"assets/icon/file.png\";\n        setpreviewFile(file);\n      }\n    },\n  });\n\n  return (\n    <>\n      <section className=\"container flex p-2\" style={{height: 281}}>\n        <div\n          {...getRootProps({ className: \"dropzone\" })}\n          className=\"flex flex-wrap items-center justify-center focus:outline-none mx-auto\"\n          style={{border: '2px dashed #999999', borderRadius: '10px', width: '100%'}}\n        >\n          <input {...getInputProps()} />\n          <UploadIcon className=\"icon-set\" />\n          <div className=\"text-set\" >Choose File or Drag and Drop</div>\n          {/* <div>\n            {props.nftType === \"Audio\"\n              ? \"(audio)\"\n              : props.nftType === \"Collection\"\n              ? \"( collection image )\"\n              : props.nftType === \"image-audio\"\n              ? \"( image,gif )\"\n              : props.nftType === \"Video\"\n              ? \"(Video)\"\n              : props.nftType === \"all\"\n              ? \"( all files )\"\n              : \"( image, gif )\"}\n          </div> */}\n        </div>\n        <aside style={thumbsContainer} className=\"space-x-5\">\n          {previewFile && (\n            <div style={thumb}>\n              <div style={thumbInner}>\n                <img src={previewFile.preview} alt=\"preview\" style={img} />\n              </div>\n            </div>\n          )}\n        </aside>\n      </section>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}