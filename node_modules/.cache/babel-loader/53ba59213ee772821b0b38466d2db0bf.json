{"ast":null,"code":"var _jsxFileName = \"/home/hp/Desktop/Bluefi/bluefi-frontend/src/pages/SignIn/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport BreadCrumb from \"components/BreadCrumb\";\nimport { toast } from \"react-toastify\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { auth } from \"firebase.js\";\nimport \"styles/auth.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst breadCrumb = [{\n  title: \"Home\",\n  page: \"/\"\n}, {\n  title: \"Sign in\",\n  page: \"/\"\n}];\n\nfunction SignIn() {\n  _s();\n\n  const history = useHistory();\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\"\n    },\n    validationSchema: Yup.object({\n      email: Yup.string().email(\"Invalid email address\").required(\"Required\"),\n      password: Yup.string().min(6, \"Must be at least 6 characters\").max(100, \"Must be 100 characters or less\").required(\"Required\")\n    }),\n    onSubmit: values => {\n      auth.signInWithEmailAndPassword(values.email, values.password).then(res => {\n        if (!res.user.emailVerified) {\n          toast.error(\"Email does not verified yet. please verify your email\");\n        } else {\n          history.push(\"/\");\n        }\n      }).catch(error => {\n        toast.error(error);\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"main\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row row--grid\",\n        children: [/*#__PURE__*/_jsxDEV(BreadCrumb, {\n          data: breadCrumb\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sign\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sign__content\",\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                className: \"sign__form\",\n                onSubmit: formik.handleSubmit,\n                children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                  className: \"signHeadline\",\n                  children: \"Sign in\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: \"/\",\n                  className: \"sign__logo d-none\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: \"assets/img/nft_logo1.png\",\n                    alt: \"\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 64,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"sign__group\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    className: \"sign__input\",\n                    placeholder: \"Email\",\n                    ...formik.getFieldProps(\"email\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 68,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"sign__group\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"password\",\n                    className: \"sign__input\",\n                    placeholder: \"Password\",\n                    ...formik.getFieldProps(\"password\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 77,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"sign__group sign__group--checkbox\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    id: \"remember\",\n                    name: \"remember\",\n                    type: \"checkbox\",\n                    defaultChecked: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"remember\",\n                    children: \"Remember Me\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 92,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"sign__btnPink \",\n                  type: \"submit\",\n                  children: \"Sign in\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"sign__text\",\n                  children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n                    to: \"/signup\",\n                    className: \"linkSign\",\n                    children: \"Sign up!\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 100,\n                    columnNumber: 44\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"sign__text\",\n                  children: /*#__PURE__*/_jsxDEV(Link, {\n                    to: \"/forgot\",\n                    className: \"linkSign\",\n                    children: \"Forgot password?\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 104,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SignIn, \"lhXjV0UxVlq3kCDKc+nZHPRTWII=\", false, function () {\n  return [useHistory, useFormik];\n});\n\n_c = SignIn;\nexport default SignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["/home/hp/Desktop/Bluefi/bluefi-frontend/src/pages/SignIn/index.js"],"names":["React","useHistory","Link","BreadCrumb","toast","useFormik","Yup","useWeb3React","auth","breadCrumb","title","page","SignIn","history","formik","initialValues","email","password","validationSchema","object","string","required","min","max","onSubmit","values","signInWithEmailAndPassword","then","res","user","emailVerified","error","push","catch","handleSubmit","getFieldProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport BreadCrumb from \"components/BreadCrumb\";\nimport { toast } from \"react-toastify\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useWeb3React } from \"@web3-react/core\";\n\nimport { auth } from \"firebase.js\";\n\nimport \"styles/auth.css\";\nconst breadCrumb = [\n  { title: \"Home\", page: \"/\" },\n  { title: \"Sign in\", page: \"/\" },\n];\n\nfunction SignIn() {\n  const history = useHistory();\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\",\n    },\n    validationSchema: Yup.object({\n      email: Yup.string().email(\"Invalid email address\").required(\"Required\"),\n      password: Yup.string()\n        .min(6, \"Must be at least 6 characters\")\n        .max(100, \"Must be 100 characters or less\")\n        .required(\"Required\"),\n    }),\n    onSubmit: (values) => {\n      auth\n        .signInWithEmailAndPassword(values.email, values.password)\n        .then((res) => {\n          if (!res.user.emailVerified) {\n            toast.error(\n              \"Email does not verified yet. please verify your email\"\n            );\n          } else {\n            history.push(\"/\");\n          }\n        })\n        .catch((error) => {\n          toast.error(error);\n        });\n    },\n  });\n  return (\n    <main className=\"main\">\n      <div className=\"container\">\n        <div className=\"row row--grid\">\n          {/* breadcrumb */}\n          <BreadCrumb data={breadCrumb} />\n          {/* end breadcrumb */}\n\n          {/* sign in */}\n          <div className=\"col-12\">\n            <div className=\"sign\">\n              <div className=\"sign__content\">\n                {/* authorization form */}\n                <form className=\"sign__form\" onSubmit={formik.handleSubmit}>\n                  <h1 className=\"signHeadline\" >Sign in</h1>\n                  <a href=\"/\" className=\"sign__logo d-none\">\n                    <img src=\"assets/img/nft_logo1.png\" alt=\"\" />\n                  </a>\n\n                  <div className=\"sign__group\">\n                    <input\n                      type=\"text\"\n                      className=\"sign__input\"\n                      placeholder=\"Email\"\n                      {...formik.getFieldProps(\"email\")}\n                    />\n                  </div>\n\n                  <div className=\"sign__group\">\n                    <input\n                      type=\"password\"\n                      className=\"sign__input\"\n                      placeholder=\"Password\"\n                      {...formik.getFieldProps(\"password\")}\n                    />\n                  </div>\n\n                  <div className=\"sign__group sign__group--checkbox\">\n                    <input\n                      id=\"remember\"\n                      name=\"remember\"\n                      type=\"checkbox\"\n                      defaultChecked\n                    />\n                    <label htmlFor=\"remember\">Remember Me</label>\n                  </div>\n\n                  <button className=\"sign__btnPink \" type=\"submit\">\n                    Sign in\n                  </button>\n\n                  <span className=\"sign__text\">\n                    Don't have an account? <Link to=\"/signup\" className=\"linkSign\">Sign up!</Link>\n                  </span>\n\n                  <span className=\"sign__text\">\n                    <Link to=\"/forgot\" className=\"linkSign\">Forgot password?</Link>\n                  </span>\n                </form>\n                {/* end authorization form */}\n              </div>\n            </div>\n          </div>\n          {/* end sign in */}\n        </div>\n      </div>\n    </main>\n  );\n}\nexport default SignIn;\n"]},"metadata":{},"sourceType":"module"}